/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.anduril.api.types;

import com.anduril.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = RouteDetails.Builder.class)
public final class RouteDetails {
    private final Optional<String> destinationName;

    private final Optional<OffsetDateTime> estimatedArrivalTime;

    private final Map<String, Object> additionalProperties;

    private RouteDetails(
            Optional<String> destinationName,
            Optional<OffsetDateTime> estimatedArrivalTime,
            Map<String, Object> additionalProperties) {
        this.destinationName = destinationName;
        this.estimatedArrivalTime = estimatedArrivalTime;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Free form text giving the name of the entity's destination
     */
    @JsonProperty("destinationName")
    public Optional<String> getDestinationName() {
        return destinationName;
    }

    /**
     * @return Estimated time of arrival at destination
     */
    @JsonProperty("estimatedArrivalTime")
    public Optional<OffsetDateTime> getEstimatedArrivalTime() {
        return estimatedArrivalTime;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RouteDetails && equalTo((RouteDetails) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RouteDetails other) {
        return destinationName.equals(other.destinationName) && estimatedArrivalTime.equals(other.estimatedArrivalTime);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.destinationName, this.estimatedArrivalTime);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> destinationName = Optional.empty();

        private Optional<OffsetDateTime> estimatedArrivalTime = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(RouteDetails other) {
            destinationName(other.getDestinationName());
            estimatedArrivalTime(other.getEstimatedArrivalTime());
            return this;
        }

        /**
         * <p>Free form text giving the name of the entity's destination</p>
         */
        @JsonSetter(value = "destinationName", nulls = Nulls.SKIP)
        public Builder destinationName(Optional<String> destinationName) {
            this.destinationName = destinationName;
            return this;
        }

        public Builder destinationName(String destinationName) {
            this.destinationName = Optional.ofNullable(destinationName);
            return this;
        }

        /**
         * <p>Estimated time of arrival at destination</p>
         */
        @JsonSetter(value = "estimatedArrivalTime", nulls = Nulls.SKIP)
        public Builder estimatedArrivalTime(Optional<OffsetDateTime> estimatedArrivalTime) {
            this.estimatedArrivalTime = estimatedArrivalTime;
            return this;
        }

        public Builder estimatedArrivalTime(OffsetDateTime estimatedArrivalTime) {
            this.estimatedArrivalTime = Optional.ofNullable(estimatedArrivalTime);
            return this;
        }

        public RouteDetails build() {
            return new RouteDetails(destinationName, estimatedArrivalTime, additionalProperties);
        }
    }
}

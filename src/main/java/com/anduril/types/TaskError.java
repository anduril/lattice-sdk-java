/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.anduril.types;

import com.anduril.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TaskError.Builder.class)
public final class TaskError {
    private final Optional<TaskErrorCode> code;

    private final Optional<String> message;

    private final Optional<GoogleProtobufAny> errorDetails;

    private final Map<String, Object> additionalProperties;

    private TaskError(
            Optional<TaskErrorCode> code,
            Optional<String> message,
            Optional<GoogleProtobufAny> errorDetails,
            Map<String, Object> additionalProperties) {
        this.code = code;
        this.message = message;
        this.errorDetails = errorDetails;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Error code for Task error.
     */
    @JsonProperty("code")
    public Optional<TaskErrorCode> getCode() {
        return code;
    }

    /**
     * @return Descriptive human-readable string regarding this error.
     */
    @JsonProperty("message")
    public Optional<String> getMessage() {
        return message;
    }

    /**
     * @return Any additional details regarding this error.
     */
    @JsonProperty("errorDetails")
    public Optional<GoogleProtobufAny> getErrorDetails() {
        return errorDetails;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TaskError && equalTo((TaskError) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TaskError other) {
        return code.equals(other.code) && message.equals(other.message) && errorDetails.equals(other.errorDetails);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.code, this.message, this.errorDetails);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<TaskErrorCode> code = Optional.empty();

        private Optional<String> message = Optional.empty();

        private Optional<GoogleProtobufAny> errorDetails = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(TaskError other) {
            code(other.getCode());
            message(other.getMessage());
            errorDetails(other.getErrorDetails());
            return this;
        }

        /**
         * <p>Error code for Task error.</p>
         */
        @JsonSetter(value = "code", nulls = Nulls.SKIP)
        public Builder code(Optional<TaskErrorCode> code) {
            this.code = code;
            return this;
        }

        public Builder code(TaskErrorCode code) {
            this.code = Optional.ofNullable(code);
            return this;
        }

        /**
         * <p>Descriptive human-readable string regarding this error.</p>
         */
        @JsonSetter(value = "message", nulls = Nulls.SKIP)
        public Builder message(Optional<String> message) {
            this.message = message;
            return this;
        }

        public Builder message(String message) {
            this.message = Optional.ofNullable(message);
            return this;
        }

        /**
         * <p>Any additional details regarding this error.</p>
         */
        @JsonSetter(value = "errorDetails", nulls = Nulls.SKIP)
        public Builder errorDetails(Optional<GoogleProtobufAny> errorDetails) {
            this.errorDetails = errorDetails;
            return this;
        }

        public Builder errorDetails(GoogleProtobufAny errorDetails) {
            this.errorDetails = Optional.ofNullable(errorDetails);
            return this;
        }

        public TaskError build() {
            return new TaskError(code, message, errorDetails, additionalProperties);
        }
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.anduril.types;

import com.anduril.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CorrelationMembership.Builder.class)
public final class CorrelationMembership {
    private final Optional<String> correlationSetId;

    private final Optional<PrimaryMembership> primary;

    private final Optional<NonPrimaryMembership> nonPrimary;

    private final Optional<CorrelationMetadata> metadata;

    private final Map<String, Object> additionalProperties;

    private CorrelationMembership(
            Optional<String> correlationSetId,
            Optional<PrimaryMembership> primary,
            Optional<NonPrimaryMembership> nonPrimary,
            Optional<CorrelationMetadata> metadata,
            Map<String, Object> additionalProperties) {
        this.correlationSetId = correlationSetId;
        this.primary = primary;
        this.nonPrimary = nonPrimary;
        this.metadata = metadata;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The ID of the correlation set this entity belongs to.
     */
    @JsonProperty("correlationSetId")
    public Optional<String> getCorrelationSetId() {
        return correlationSetId;
    }

    /**
     * @return This entity is the primary of a correlation set meaning that it serves as the representative
     * entity of the correlation set.
     */
    @JsonProperty("primary")
    public Optional<PrimaryMembership> getPrimary() {
        return primary;
    }

    /**
     * @return This entity is not the primary of the correlation set. Note that there may not
     * be a primary at all.
     */
    @JsonProperty("nonPrimary")
    public Optional<NonPrimaryMembership> getNonPrimary() {
        return nonPrimary;
    }

    /**
     * @return Additional metadata on this correlation.
     */
    @JsonProperty("metadata")
    public Optional<CorrelationMetadata> getMetadata() {
        return metadata;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CorrelationMembership && equalTo((CorrelationMembership) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CorrelationMembership other) {
        return correlationSetId.equals(other.correlationSetId)
                && primary.equals(other.primary)
                && nonPrimary.equals(other.nonPrimary)
                && metadata.equals(other.metadata);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.correlationSetId, this.primary, this.nonPrimary, this.metadata);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> correlationSetId = Optional.empty();

        private Optional<PrimaryMembership> primary = Optional.empty();

        private Optional<NonPrimaryMembership> nonPrimary = Optional.empty();

        private Optional<CorrelationMetadata> metadata = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CorrelationMembership other) {
            correlationSetId(other.getCorrelationSetId());
            primary(other.getPrimary());
            nonPrimary(other.getNonPrimary());
            metadata(other.getMetadata());
            return this;
        }

        /**
         * <p>The ID of the correlation set this entity belongs to.</p>
         */
        @JsonSetter(value = "correlationSetId", nulls = Nulls.SKIP)
        public Builder correlationSetId(Optional<String> correlationSetId) {
            this.correlationSetId = correlationSetId;
            return this;
        }

        public Builder correlationSetId(String correlationSetId) {
            this.correlationSetId = Optional.ofNullable(correlationSetId);
            return this;
        }

        /**
         * <p>This entity is the primary of a correlation set meaning that it serves as the representative
         * entity of the correlation set.</p>
         */
        @JsonSetter(value = "primary", nulls = Nulls.SKIP)
        public Builder primary(Optional<PrimaryMembership> primary) {
            this.primary = primary;
            return this;
        }

        public Builder primary(PrimaryMembership primary) {
            this.primary = Optional.ofNullable(primary);
            return this;
        }

        /**
         * <p>This entity is not the primary of the correlation set. Note that there may not
         * be a primary at all.</p>
         */
        @JsonSetter(value = "nonPrimary", nulls = Nulls.SKIP)
        public Builder nonPrimary(Optional<NonPrimaryMembership> nonPrimary) {
            this.nonPrimary = nonPrimary;
            return this;
        }

        public Builder nonPrimary(NonPrimaryMembership nonPrimary) {
            this.nonPrimary = Optional.ofNullable(nonPrimary);
            return this;
        }

        /**
         * <p>Additional metadata on this correlation.</p>
         */
        @JsonSetter(value = "metadata", nulls = Nulls.SKIP)
        public Builder metadata(Optional<CorrelationMetadata> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder metadata(CorrelationMetadata metadata) {
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        public CorrelationMembership build() {
            return new CorrelationMembership(correlationSetId, primary, nonPrimary, metadata, additionalProperties);
        }
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.anduril.resources.tasks.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class TaskQueryStatusFilterStatus {
    public static final TaskQueryStatusFilterStatus STATUS_WILCO =
            new TaskQueryStatusFilterStatus(Value.STATUS_WILCO, "STATUS_WILCO");

    public static final TaskQueryStatusFilterStatus STATUS_DONE_OK =
            new TaskQueryStatusFilterStatus(Value.STATUS_DONE_OK, "STATUS_DONE_OK");

    public static final TaskQueryStatusFilterStatus STATUS_VERSION_REJECTED =
            new TaskQueryStatusFilterStatus(Value.STATUS_VERSION_REJECTED, "STATUS_VERSION_REJECTED");

    public static final TaskQueryStatusFilterStatus STATUS_MACHINE_RECEIPT =
            new TaskQueryStatusFilterStatus(Value.STATUS_MACHINE_RECEIPT, "STATUS_MACHINE_RECEIPT");

    public static final TaskQueryStatusFilterStatus STATUS_INVALID =
            new TaskQueryStatusFilterStatus(Value.STATUS_INVALID, "STATUS_INVALID");

    public static final TaskQueryStatusFilterStatus STATUS_WAITING_FOR_UPDATE =
            new TaskQueryStatusFilterStatus(Value.STATUS_WAITING_FOR_UPDATE, "STATUS_WAITING_FOR_UPDATE");

    public static final TaskQueryStatusFilterStatus STATUS_SCHEDULED_IN_MANAGER =
            new TaskQueryStatusFilterStatus(Value.STATUS_SCHEDULED_IN_MANAGER, "STATUS_SCHEDULED_IN_MANAGER");

    public static final TaskQueryStatusFilterStatus STATUS_SENT =
            new TaskQueryStatusFilterStatus(Value.STATUS_SENT, "STATUS_SENT");

    public static final TaskQueryStatusFilterStatus STATUS_CREATED =
            new TaskQueryStatusFilterStatus(Value.STATUS_CREATED, "STATUS_CREATED");

    public static final TaskQueryStatusFilterStatus STATUS_EXECUTING =
            new TaskQueryStatusFilterStatus(Value.STATUS_EXECUTING, "STATUS_EXECUTING");

    public static final TaskQueryStatusFilterStatus STATUS_DONE_NOT_OK =
            new TaskQueryStatusFilterStatus(Value.STATUS_DONE_NOT_OK, "STATUS_DONE_NOT_OK");

    public static final TaskQueryStatusFilterStatus STATUS_ACK =
            new TaskQueryStatusFilterStatus(Value.STATUS_ACK, "STATUS_ACK");

    public static final TaskQueryStatusFilterStatus STATUS_REPLACED =
            new TaskQueryStatusFilterStatus(Value.STATUS_REPLACED, "STATUS_REPLACED");

    public static final TaskQueryStatusFilterStatus STATUS_COMPLETE_REQUESTED =
            new TaskQueryStatusFilterStatus(Value.STATUS_COMPLETE_REQUESTED, "STATUS_COMPLETE_REQUESTED");

    public static final TaskQueryStatusFilterStatus STATUS_CANCEL_REQUESTED =
            new TaskQueryStatusFilterStatus(Value.STATUS_CANCEL_REQUESTED, "STATUS_CANCEL_REQUESTED");

    private final Value value;

    private final String string;

    TaskQueryStatusFilterStatus(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof TaskQueryStatusFilterStatus
                        && this.string.equals(((TaskQueryStatusFilterStatus) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case STATUS_WILCO:
                return visitor.visitStatusWilco();
            case STATUS_DONE_OK:
                return visitor.visitStatusDoneOk();
            case STATUS_VERSION_REJECTED:
                return visitor.visitStatusVersionRejected();
            case STATUS_MACHINE_RECEIPT:
                return visitor.visitStatusMachineReceipt();
            case STATUS_INVALID:
                return visitor.visitStatusInvalid();
            case STATUS_WAITING_FOR_UPDATE:
                return visitor.visitStatusWaitingForUpdate();
            case STATUS_SCHEDULED_IN_MANAGER:
                return visitor.visitStatusScheduledInManager();
            case STATUS_SENT:
                return visitor.visitStatusSent();
            case STATUS_CREATED:
                return visitor.visitStatusCreated();
            case STATUS_EXECUTING:
                return visitor.visitStatusExecuting();
            case STATUS_DONE_NOT_OK:
                return visitor.visitStatusDoneNotOk();
            case STATUS_ACK:
                return visitor.visitStatusAck();
            case STATUS_REPLACED:
                return visitor.visitStatusReplaced();
            case STATUS_COMPLETE_REQUESTED:
                return visitor.visitStatusCompleteRequested();
            case STATUS_CANCEL_REQUESTED:
                return visitor.visitStatusCancelRequested();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static TaskQueryStatusFilterStatus valueOf(String value) {
        switch (value) {
            case "STATUS_WILCO":
                return STATUS_WILCO;
            case "STATUS_DONE_OK":
                return STATUS_DONE_OK;
            case "STATUS_VERSION_REJECTED":
                return STATUS_VERSION_REJECTED;
            case "STATUS_MACHINE_RECEIPT":
                return STATUS_MACHINE_RECEIPT;
            case "STATUS_INVALID":
                return STATUS_INVALID;
            case "STATUS_WAITING_FOR_UPDATE":
                return STATUS_WAITING_FOR_UPDATE;
            case "STATUS_SCHEDULED_IN_MANAGER":
                return STATUS_SCHEDULED_IN_MANAGER;
            case "STATUS_SENT":
                return STATUS_SENT;
            case "STATUS_CREATED":
                return STATUS_CREATED;
            case "STATUS_EXECUTING":
                return STATUS_EXECUTING;
            case "STATUS_DONE_NOT_OK":
                return STATUS_DONE_NOT_OK;
            case "STATUS_ACK":
                return STATUS_ACK;
            case "STATUS_REPLACED":
                return STATUS_REPLACED;
            case "STATUS_COMPLETE_REQUESTED":
                return STATUS_COMPLETE_REQUESTED;
            case "STATUS_CANCEL_REQUESTED":
                return STATUS_CANCEL_REQUESTED;
            default:
                return new TaskQueryStatusFilterStatus(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        STATUS_INVALID,

        STATUS_CREATED,

        STATUS_SCHEDULED_IN_MANAGER,

        STATUS_SENT,

        STATUS_MACHINE_RECEIPT,

        STATUS_ACK,

        STATUS_WILCO,

        STATUS_EXECUTING,

        STATUS_WAITING_FOR_UPDATE,

        STATUS_DONE_OK,

        STATUS_DONE_NOT_OK,

        STATUS_REPLACED,

        STATUS_CANCEL_REQUESTED,

        STATUS_COMPLETE_REQUESTED,

        STATUS_VERSION_REJECTED,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitStatusInvalid();

        T visitStatusCreated();

        T visitStatusScheduledInManager();

        T visitStatusSent();

        T visitStatusMachineReceipt();

        T visitStatusAck();

        T visitStatusWilco();

        T visitStatusExecuting();

        T visitStatusWaitingForUpdate();

        T visitStatusDoneOk();

        T visitStatusDoneNotOk();

        T visitStatusReplaced();

        T visitStatusCancelRequested();

        T visitStatusCompleteRequested();

        T visitStatusVersionRejected();

        T visitUnknown(String unknownType);
    }
}

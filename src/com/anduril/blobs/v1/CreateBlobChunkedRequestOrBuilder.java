// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/blobs/v1/blobs_api.pub.proto

package com.anduril.blobs.v1;

public interface CreateBlobChunkedRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.blobs.v1.CreateBlobChunkedRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * blobs created will be namespaced by client_id
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @return The clientId.
   */
  java.lang.String getClientId();
  /**
   * <pre>
   * blobs created will be namespaced by client_id
   * </pre>
   *
   * <code>string client_id = 1 [json_name = "clientId"];</code>
   * @return The bytes for clientId.
   */
  com.google.protobuf.ByteString
      getClientIdBytes();

  /**
   * <pre>
   * unique (per client) key for the blob
   * </pre>
   *
   * <code>string key = 2 [json_name = "key"];</code>
   * @return The key.
   */
  java.lang.String getKey();
  /**
   * <pre>
   * unique (per client) key for the blob
   * </pre>
   *
   * <code>string key = 2 [json_name = "key"];</code>
   * @return The bytes for key.
   */
  com.google.protobuf.ByteString
      getKeyBytes();

  /**
   * <pre>
   * timestamp after which should no longer retain this blob. required and cannot be &gt; 90 days in the future.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];</code>
   * @return Whether the retentionTime field is set.
   */
  boolean hasRetentionTime();
  /**
   * <pre>
   * timestamp after which should no longer retain this blob. required and cannot be &gt; 90 days in the future.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];</code>
   * @return The retentionTime.
   */
  com.google.protobuf.Timestamp getRetentionTime();
  /**
   * <pre>
   * timestamp after which should no longer retain this blob. required and cannot be &gt; 90 days in the future.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp retention_time = 3 [json_name = "retentionTime"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getRetentionTimeOrBuilder();

  /**
   * <pre>
   * optional md5 sum/hash of contents. if provided, will be validated against the md5 of all contents in aggregate
   * </pre>
   *
   * <code>bytes md5 = 4 [json_name = "md5"];</code>
   * @return The md5.
   */
  com.google.protobuf.ByteString getMd5();

  /**
   * <pre>
   * contents of the blob chunk, maximum size is 2MB per message (2 * 1024 * 1024 bytes)
   * </pre>
   *
   * <code>bytes chunk_contents = 5 [json_name = "chunkContents"];</code>
   * @return The chunkContents.
   */
  com.google.protobuf.ByteString getChunkContents();

  /**
   * <pre>
   * details regarding the blob's origin - aka source and type
   * </pre>
   *
   * <code>.anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];</code>
   * @return Whether the provenance field is set.
   */
  boolean hasProvenance();
  /**
   * <pre>
   * details regarding the blob's origin - aka source and type
   * </pre>
   *
   * <code>.anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];</code>
   * @return The provenance.
   */
  com.anduril.blobs.v1.BlobProvenance getProvenance();
  /**
   * <pre>
   * details regarding the blob's origin - aka source and type
   * </pre>
   *
   * <code>.anduril.blobs.v1.BlobProvenance provenance = 6 [json_name = "provenance"];</code>
   */
  com.anduril.blobs.v1.BlobProvenanceOrBuilder getProvenanceOrBuilder();
}

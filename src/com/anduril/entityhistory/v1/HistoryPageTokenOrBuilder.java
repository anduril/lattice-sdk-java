// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entityhistory/v1/history.pub.proto

// Protobuf Java Version: 3.25.3
package com.anduril.entityhistory.v1;

public interface HistoryPageTokenOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.entityhistory.v1.HistoryPageToken)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string query_id = 1 [json_name = "queryId"];</code>
   * @return The queryId.
   */
  java.lang.String getQueryId();
  /**
   * <code>string query_id = 1 [json_name = "queryId"];</code>
   * @return The bytes for queryId.
   */
  com.google.protobuf.ByteString
      getQueryIdBytes();

  /**
   * <code>int32 page_num = 2 [json_name = "pageNum"];</code>
   * @return The pageNum.
   */
  int getPageNum();

  /**
   * <code>string entity_id = 3 [json_name = "entityId"];</code>
   * @return The entityId.
   */
  java.lang.String getEntityId();
  /**
   * <code>string entity_id = 3 [json_name = "entityId"];</code>
   * @return The bytes for entityId.
   */
  com.google.protobuf.ByteString
      getEntityIdBytes();

  /**
   * <code>.anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];</code>
   * @return The enum numeric value on the wire for storageSystem.
   */
  int getStorageSystemValue();
  /**
   * <code>.anduril.entityhistory.v1.StorageSystem storage_system = 4 [json_name = "storageSystem"];</code>
   * @return The storageSystem.
   */
  com.anduril.entityhistory.v1.StorageSystem getStorageSystem();

  /**
   * <pre>
   * Query start time for the current entity in ISO-8601 format.
   * </pre>
   *
   * <code>string start_time = 5 [json_name = "startTime"];</code>
   * @return The startTime.
   */
  java.lang.String getStartTime();
  /**
   * <pre>
   * Query start time for the current entity in ISO-8601 format.
   * </pre>
   *
   * <code>string start_time = 5 [json_name = "startTime"];</code>
   * @return The bytes for startTime.
   */
  com.google.protobuf.ByteString
      getStartTimeBytes();

  /**
   * <pre>
   * True if the query is complete, false if another request beginning with this key should be sent to consume more
   * data.
   * </pre>
   *
   * <code>bool is_complete = 6 [json_name = "isComplete"];</code>
   * @return The isComplete.
   */
  boolean getIsComplete();
}

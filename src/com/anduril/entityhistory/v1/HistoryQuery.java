// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entityhistory/v1/entity_history_api.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.entityhistory.v1;

/**
 * <pre>
 * A query for entity history. Required fields are history type and time
 * range. Downsampling and additional filter parameters are optional. If
 * no additional filter is specified, all entity historical data of the
 * specified type is returned for the provided time range.
 * </pre>
 *
 * Protobuf type {@code anduril.entityhistory.v1.HistoryQuery}
 */
public final class HistoryQuery extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:anduril.entityhistory.v1.HistoryQuery)
    HistoryQueryOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      HistoryQuery.class.getName());
  }
  // Use HistoryQuery.newBuilder() to construct.
  private HistoryQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private HistoryQuery() {
    historyType_ = 0;
    entityIds_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entityhistory.v1.EntityHistoryApiPubProto.internal_static_anduril_entityhistory_v1_HistoryQuery_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entityhistory.v1.EntityHistoryApiPubProto.internal_static_anduril_entityhistory_v1_HistoryQuery_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entityhistory.v1.HistoryQuery.class, com.anduril.entityhistory.v1.HistoryQuery.Builder.class);
  }

  private int bitField0_;
  public static final int HISTORY_TYPE_FIELD_NUMBER = 1;
  private int historyType_ = 0;
  /**
   * <pre>
   * The type of history to query.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
   * @return The enum numeric value on the wire for historyType.
   */
  @java.lang.Override public int getHistoryTypeValue() {
    return historyType_;
  }
  /**
   * <pre>
   * The type of history to query.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
   * @return The historyType.
   */
  @java.lang.Override public com.anduril.entityhistory.v1.HistoryType getHistoryType() {
    com.anduril.entityhistory.v1.HistoryType result = com.anduril.entityhistory.v1.HistoryType.forNumber(historyType_);
    return result == null ? com.anduril.entityhistory.v1.HistoryType.UNRECOGNIZED : result;
  }

  public static final int TIME_RANGE_FIELD_NUMBER = 2;
  private com.anduril.entityhistory.v1.TimeRange timeRange_;
  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   * @return Whether the timeRange field is set.
   */
  @java.lang.Override
  public boolean hasTimeRange() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   * @return The timeRange.
   */
  @java.lang.Override
  public com.anduril.entityhistory.v1.TimeRange getTimeRange() {
    return timeRange_ == null ? com.anduril.entityhistory.v1.TimeRange.getDefaultInstance() : timeRange_;
  }
  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   */
  @java.lang.Override
  public com.anduril.entityhistory.v1.TimeRangeOrBuilder getTimeRangeOrBuilder() {
    return timeRange_ == null ? com.anduril.entityhistory.v1.TimeRange.getDefaultInstance() : timeRange_;
  }

  public static final int DOWNSAMPLE_FIELD_NUMBER = 3;
  private com.anduril.entityhistory.v1.Downsample downsample_;
  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   * @return Whether the downsample field is set.
   */
  @java.lang.Override
  public boolean hasDownsample() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   * @return The downsample.
   */
  @java.lang.Override
  public com.anduril.entityhistory.v1.Downsample getDownsample() {
    return downsample_ == null ? com.anduril.entityhistory.v1.Downsample.getDefaultInstance() : downsample_;
  }
  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   */
  @java.lang.Override
  public com.anduril.entityhistory.v1.DownsampleOrBuilder getDownsampleOrBuilder() {
    return downsample_ == null ? com.anduril.entityhistory.v1.Downsample.getDefaultInstance() : downsample_;
  }

  public static final int STATEMENT_FIELD_NUMBER = 4;
  private com.anduril.entitymanager.v1.Statement statement_;
  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   * @return Whether the statement field is set.
   */
  @java.lang.Override
  public boolean hasStatement() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   * @return The statement.
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.Statement getStatement() {
    return statement_ == null ? com.anduril.entitymanager.v1.Statement.getDefaultInstance() : statement_;
  }
  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.StatementOrBuilder getStatementOrBuilder() {
    return statement_ == null ? com.anduril.entitymanager.v1.Statement.getDefaultInstance() : statement_;
  }

  public static final int ENTITY_IDS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList entityIds_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @return A list containing the entityIds.
   */
  public com.google.protobuf.ProtocolStringList
      getEntityIdsList() {
    return entityIds_;
  }
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @return The count of entityIds.
   */
  public int getEntityIdsCount() {
    return entityIds_.size();
  }
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @param index The index of the element to return.
   * @return The entityIds at the given index.
   */
  public java.lang.String getEntityIds(int index) {
    return entityIds_.get(index);
  }
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the entityIds at the given index.
   */
  public com.google.protobuf.ByteString
      getEntityIdsBytes(int index) {
    return entityIds_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (historyType_ != com.anduril.entityhistory.v1.HistoryType.HISTORY_TYPE_INVALID.getNumber()) {
      output.writeEnum(1, historyType_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getTimeRange());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getDownsample());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(4, getStatement());
    }
    for (int i = 0; i < entityIds_.size(); i++) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, entityIds_.getRaw(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (historyType_ != com.anduril.entityhistory.v1.HistoryType.HISTORY_TYPE_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, historyType_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTimeRange());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDownsample());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getStatement());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < entityIds_.size(); i++) {
        dataSize += computeStringSizeNoTag(entityIds_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getEntityIdsList().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entityhistory.v1.HistoryQuery)) {
      return super.equals(obj);
    }
    com.anduril.entityhistory.v1.HistoryQuery other = (com.anduril.entityhistory.v1.HistoryQuery) obj;

    if (historyType_ != other.historyType_) return false;
    if (hasTimeRange() != other.hasTimeRange()) return false;
    if (hasTimeRange()) {
      if (!getTimeRange()
          .equals(other.getTimeRange())) return false;
    }
    if (hasDownsample() != other.hasDownsample()) return false;
    if (hasDownsample()) {
      if (!getDownsample()
          .equals(other.getDownsample())) return false;
    }
    if (hasStatement() != other.hasStatement()) return false;
    if (hasStatement()) {
      if (!getStatement()
          .equals(other.getStatement())) return false;
    }
    if (!getEntityIdsList()
        .equals(other.getEntityIdsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HISTORY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + historyType_;
    if (hasTimeRange()) {
      hash = (37 * hash) + TIME_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeRange().hashCode();
    }
    if (hasDownsample()) {
      hash = (37 * hash) + DOWNSAMPLE_FIELD_NUMBER;
      hash = (53 * hash) + getDownsample().hashCode();
    }
    if (hasStatement()) {
      hash = (37 * hash) + STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getStatement().hashCode();
    }
    if (getEntityIdsCount() > 0) {
      hash = (37 * hash) + ENTITY_IDS_FIELD_NUMBER;
      hash = (53 * hash) + getEntityIdsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.entityhistory.v1.HistoryQuery parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.entityhistory.v1.HistoryQuery parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entityhistory.v1.HistoryQuery parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entityhistory.v1.HistoryQuery prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A query for entity history. Required fields are history type and time
   * range. Downsampling and additional filter parameters are optional. If
   * no additional filter is specified, all entity historical data of the
   * specified type is returned for the provided time range.
   * </pre>
   *
   * Protobuf type {@code anduril.entityhistory.v1.HistoryQuery}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entityhistory.v1.HistoryQuery)
      com.anduril.entityhistory.v1.HistoryQueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entityhistory.v1.EntityHistoryApiPubProto.internal_static_anduril_entityhistory_v1_HistoryQuery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entityhistory.v1.EntityHistoryApiPubProto.internal_static_anduril_entityhistory_v1_HistoryQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entityhistory.v1.HistoryQuery.class, com.anduril.entityhistory.v1.HistoryQuery.Builder.class);
    }

    // Construct using com.anduril.entityhistory.v1.HistoryQuery.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getTimeRangeFieldBuilder();
        getDownsampleFieldBuilder();
        getStatementFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      historyType_ = 0;
      timeRange_ = null;
      if (timeRangeBuilder_ != null) {
        timeRangeBuilder_.dispose();
        timeRangeBuilder_ = null;
      }
      downsample_ = null;
      if (downsampleBuilder_ != null) {
        downsampleBuilder_.dispose();
        downsampleBuilder_ = null;
      }
      statement_ = null;
      if (statementBuilder_ != null) {
        statementBuilder_.dispose();
        statementBuilder_ = null;
      }
      entityIds_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entityhistory.v1.EntityHistoryApiPubProto.internal_static_anduril_entityhistory_v1_HistoryQuery_descriptor;
    }

    @java.lang.Override
    public com.anduril.entityhistory.v1.HistoryQuery getDefaultInstanceForType() {
      return com.anduril.entityhistory.v1.HistoryQuery.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entityhistory.v1.HistoryQuery build() {
      com.anduril.entityhistory.v1.HistoryQuery result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entityhistory.v1.HistoryQuery buildPartial() {
      com.anduril.entityhistory.v1.HistoryQuery result = new com.anduril.entityhistory.v1.HistoryQuery(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.entityhistory.v1.HistoryQuery result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.historyType_ = historyType_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.timeRange_ = timeRangeBuilder_ == null
            ? timeRange_
            : timeRangeBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.downsample_ = downsampleBuilder_ == null
            ? downsample_
            : downsampleBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.statement_ = statementBuilder_ == null
            ? statement_
            : statementBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        entityIds_.makeImmutable();
        result.entityIds_ = entityIds_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entityhistory.v1.HistoryQuery) {
        return mergeFrom((com.anduril.entityhistory.v1.HistoryQuery)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entityhistory.v1.HistoryQuery other) {
      if (other == com.anduril.entityhistory.v1.HistoryQuery.getDefaultInstance()) return this;
      if (other.historyType_ != 0) {
        setHistoryTypeValue(other.getHistoryTypeValue());
      }
      if (other.hasTimeRange()) {
        mergeTimeRange(other.getTimeRange());
      }
      if (other.hasDownsample()) {
        mergeDownsample(other.getDownsample());
      }
      if (other.hasStatement()) {
        mergeStatement(other.getStatement());
      }
      if (!other.entityIds_.isEmpty()) {
        if (entityIds_.isEmpty()) {
          entityIds_ = other.entityIds_;
          bitField0_ |= 0x00000010;
        } else {
          ensureEntityIdsIsMutable();
          entityIds_.addAll(other.entityIds_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              historyType_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getTimeRangeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDownsampleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getStatementFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureEntityIdsIsMutable();
              entityIds_.add(s);
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int historyType_ = 0;
    /**
     * <pre>
     * The type of history to query.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
     * @return The enum numeric value on the wire for historyType.
     */
    @java.lang.Override public int getHistoryTypeValue() {
      return historyType_;
    }
    /**
     * <pre>
     * The type of history to query.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
     * @param value The enum numeric value on the wire for historyType to set.
     * @return This builder for chaining.
     */
    public Builder setHistoryTypeValue(int value) {
      historyType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of history to query.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
     * @return The historyType.
     */
    @java.lang.Override
    public com.anduril.entityhistory.v1.HistoryType getHistoryType() {
      com.anduril.entityhistory.v1.HistoryType result = com.anduril.entityhistory.v1.HistoryType.forNumber(historyType_);
      return result == null ? com.anduril.entityhistory.v1.HistoryType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of history to query.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
     * @param value The historyType to set.
     * @return This builder for chaining.
     */
    public Builder setHistoryType(com.anduril.entityhistory.v1.HistoryType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      historyType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of history to query.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHistoryType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      historyType_ = 0;
      onChanged();
      return this;
    }

    private com.anduril.entityhistory.v1.TimeRange timeRange_;
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entityhistory.v1.TimeRange, com.anduril.entityhistory.v1.TimeRange.Builder, com.anduril.entityhistory.v1.TimeRangeOrBuilder> timeRangeBuilder_;
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     * @return Whether the timeRange field is set.
     */
    public boolean hasTimeRange() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     * @return The timeRange.
     */
    public com.anduril.entityhistory.v1.TimeRange getTimeRange() {
      if (timeRangeBuilder_ == null) {
        return timeRange_ == null ? com.anduril.entityhistory.v1.TimeRange.getDefaultInstance() : timeRange_;
      } else {
        return timeRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public Builder setTimeRange(com.anduril.entityhistory.v1.TimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeRange_ = value;
      } else {
        timeRangeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public Builder setTimeRange(
        com.anduril.entityhistory.v1.TimeRange.Builder builderForValue) {
      if (timeRangeBuilder_ == null) {
        timeRange_ = builderForValue.build();
      } else {
        timeRangeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public Builder mergeTimeRange(com.anduril.entityhistory.v1.TimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          timeRange_ != null &&
          timeRange_ != com.anduril.entityhistory.v1.TimeRange.getDefaultInstance()) {
          getTimeRangeBuilder().mergeFrom(value);
        } else {
          timeRange_ = value;
        }
      } else {
        timeRangeBuilder_.mergeFrom(value);
      }
      if (timeRange_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public Builder clearTimeRange() {
      bitField0_ = (bitField0_ & ~0x00000002);
      timeRange_ = null;
      if (timeRangeBuilder_ != null) {
        timeRangeBuilder_.dispose();
        timeRangeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public com.anduril.entityhistory.v1.TimeRange.Builder getTimeRangeBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getTimeRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    public com.anduril.entityhistory.v1.TimeRangeOrBuilder getTimeRangeOrBuilder() {
      if (timeRangeBuilder_ != null) {
        return timeRangeBuilder_.getMessageOrBuilder();
      } else {
        return timeRange_ == null ?
            com.anduril.entityhistory.v1.TimeRange.getDefaultInstance() : timeRange_;
      }
    }
    /**
     * <pre>
     * Time range for the below queries. If no query is specified, all data
     * for the history type during the time range is returned.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entityhistory.v1.TimeRange, com.anduril.entityhistory.v1.TimeRange.Builder, com.anduril.entityhistory.v1.TimeRangeOrBuilder> 
        getTimeRangeFieldBuilder() {
      if (timeRangeBuilder_ == null) {
        timeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.anduril.entityhistory.v1.TimeRange, com.anduril.entityhistory.v1.TimeRange.Builder, com.anduril.entityhistory.v1.TimeRangeOrBuilder>(
                getTimeRange(),
                getParentForChildren(),
                isClean());
        timeRange_ = null;
      }
      return timeRangeBuilder_;
    }

    private com.anduril.entityhistory.v1.Downsample downsample_;
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entityhistory.v1.Downsample, com.anduril.entityhistory.v1.Downsample.Builder, com.anduril.entityhistory.v1.DownsampleOrBuilder> downsampleBuilder_;
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     * @return Whether the downsample field is set.
     */
    public boolean hasDownsample() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     * @return The downsample.
     */
    public com.anduril.entityhistory.v1.Downsample getDownsample() {
      if (downsampleBuilder_ == null) {
        return downsample_ == null ? com.anduril.entityhistory.v1.Downsample.getDefaultInstance() : downsample_;
      } else {
        return downsampleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public Builder setDownsample(com.anduril.entityhistory.v1.Downsample value) {
      if (downsampleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        downsample_ = value;
      } else {
        downsampleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public Builder setDownsample(
        com.anduril.entityhistory.v1.Downsample.Builder builderForValue) {
      if (downsampleBuilder_ == null) {
        downsample_ = builderForValue.build();
      } else {
        downsampleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public Builder mergeDownsample(com.anduril.entityhistory.v1.Downsample value) {
      if (downsampleBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          downsample_ != null &&
          downsample_ != com.anduril.entityhistory.v1.Downsample.getDefaultInstance()) {
          getDownsampleBuilder().mergeFrom(value);
        } else {
          downsample_ = value;
        }
      } else {
        downsampleBuilder_.mergeFrom(value);
      }
      if (downsample_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public Builder clearDownsample() {
      bitField0_ = (bitField0_ & ~0x00000004);
      downsample_ = null;
      if (downsampleBuilder_ != null) {
        downsampleBuilder_.dispose();
        downsampleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public com.anduril.entityhistory.v1.Downsample.Builder getDownsampleBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDownsampleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    public com.anduril.entityhistory.v1.DownsampleOrBuilder getDownsampleOrBuilder() {
      if (downsampleBuilder_ != null) {
        return downsampleBuilder_.getMessageOrBuilder();
      } else {
        return downsample_ == null ?
            com.anduril.entityhistory.v1.Downsample.getDefaultInstance() : downsample_;
      }
    }
    /**
     * <pre>
     * Downsampling to apply to a time ordered set of points. May not apply
     * to all history data types. Currently supported types are: trails.
     * </pre>
     *
     * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entityhistory.v1.Downsample, com.anduril.entityhistory.v1.Downsample.Builder, com.anduril.entityhistory.v1.DownsampleOrBuilder> 
        getDownsampleFieldBuilder() {
      if (downsampleBuilder_ == null) {
        downsampleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.anduril.entityhistory.v1.Downsample, com.anduril.entityhistory.v1.Downsample.Builder, com.anduril.entityhistory.v1.DownsampleOrBuilder>(
                getDownsample(),
                getParentForChildren(),
                isClean());
        downsample_ = null;
      }
      return downsampleBuilder_;
    }

    private com.anduril.entitymanager.v1.Statement statement_;
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entitymanager.v1.Statement, com.anduril.entitymanager.v1.Statement.Builder, com.anduril.entitymanager.v1.StatementOrBuilder> statementBuilder_;
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     * @return Whether the statement field is set.
     */
    public boolean hasStatement() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     * @return The statement.
     */
    public com.anduril.entitymanager.v1.Statement getStatement() {
      if (statementBuilder_ == null) {
        return statement_ == null ? com.anduril.entitymanager.v1.Statement.getDefaultInstance() : statement_;
      } else {
        return statementBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public Builder setStatement(com.anduril.entitymanager.v1.Statement value) {
      if (statementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        statement_ = value;
      } else {
        statementBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public Builder setStatement(
        com.anduril.entitymanager.v1.Statement.Builder builderForValue) {
      if (statementBuilder_ == null) {
        statement_ = builderForValue.build();
      } else {
        statementBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public Builder mergeStatement(com.anduril.entitymanager.v1.Statement value) {
      if (statementBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          statement_ != null &&
          statement_ != com.anduril.entitymanager.v1.Statement.getDefaultInstance()) {
          getStatementBuilder().mergeFrom(value);
        } else {
          statement_ = value;
        }
      } else {
        statementBuilder_.mergeFrom(value);
      }
      if (statement_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public Builder clearStatement() {
      bitField0_ = (bitField0_ & ~0x00000008);
      statement_ = null;
      if (statementBuilder_ != null) {
        statementBuilder_.dispose();
        statementBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public com.anduril.entitymanager.v1.Statement.Builder getStatementBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getStatementFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    public com.anduril.entitymanager.v1.StatementOrBuilder getStatementOrBuilder() {
      if (statementBuilder_ != null) {
        return statementBuilder_.getMessageOrBuilder();
      } else {
        return statement_ == null ?
            com.anduril.entitymanager.v1.Statement.getDefaultInstance() : statement_;
      }
    }
    /**
     * <pre>
     * Filter for historical data. The applied filter limits the data returned
     * by the query to only the data with matching current entity state. The
     * filter is applied to the latest observed state recorded in a snapshot.
     * Live state is not considered.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.entitymanager.v1.Statement, com.anduril.entitymanager.v1.Statement.Builder, com.anduril.entitymanager.v1.StatementOrBuilder> 
        getStatementFieldBuilder() {
      if (statementBuilder_ == null) {
        statementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.anduril.entitymanager.v1.Statement, com.anduril.entitymanager.v1.Statement.Builder, com.anduril.entitymanager.v1.StatementOrBuilder>(
                getStatement(),
                getParentForChildren(),
                isClean());
        statement_ = null;
      }
      return statementBuilder_;
    }

    private com.google.protobuf.LazyStringArrayList entityIds_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureEntityIdsIsMutable() {
      if (!entityIds_.isModifiable()) {
        entityIds_ = new com.google.protobuf.LazyStringArrayList(entityIds_);
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @return A list containing the entityIds.
     */
    public com.google.protobuf.ProtocolStringList
        getEntityIdsList() {
      entityIds_.makeImmutable();
      return entityIds_;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @return The count of entityIds.
     */
    public int getEntityIdsCount() {
      return entityIds_.size();
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param index The index of the element to return.
     * @return The entityIds at the given index.
     */
    public java.lang.String getEntityIds(int index) {
      return entityIds_.get(index);
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the entityIds at the given index.
     */
    public com.google.protobuf.ByteString
        getEntityIdsBytes(int index) {
      return entityIds_.getByteString(index);
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param index The index to set the value at.
     * @param value The entityIds to set.
     * @return This builder for chaining.
     */
    public Builder setEntityIds(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureEntityIdsIsMutable();
      entityIds_.set(index, value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param value The entityIds to add.
     * @return This builder for chaining.
     */
    public Builder addEntityIds(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureEntityIdsIsMutable();
      entityIds_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param values The entityIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllEntityIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureEntityIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, entityIds_);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEntityIds() {
      entityIds_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
     * </pre>
     *
     * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
     * @param value The bytes of the entityIds to add.
     * @return This builder for chaining.
     */
    public Builder addEntityIdsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureEntityIdsIsMutable();
      entityIds_.add(value);
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:anduril.entityhistory.v1.HistoryQuery)
  }

  // @@protoc_insertion_point(class_scope:anduril.entityhistory.v1.HistoryQuery)
  private static final com.anduril.entityhistory.v1.HistoryQuery DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entityhistory.v1.HistoryQuery();
  }

  public static com.anduril.entityhistory.v1.HistoryQuery getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HistoryQuery>
      PARSER = new com.google.protobuf.AbstractParser<HistoryQuery>() {
    @java.lang.Override
    public HistoryQuery parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HistoryQuery> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HistoryQuery> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entityhistory.v1.HistoryQuery getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


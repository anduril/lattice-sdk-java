// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entityhistory/v1/entity_history_api.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.entityhistory.v1;

public interface HistoryQueryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.entityhistory.v1.HistoryQuery)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The type of history to query.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
   * @return The enum numeric value on the wire for historyType.
   */
  int getHistoryTypeValue();
  /**
   * <pre>
   * The type of history to query.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.HistoryType history_type = 1 [json_name = "historyType"];</code>
   * @return The historyType.
   */
  com.anduril.entityhistory.v1.HistoryType getHistoryType();

  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   * @return Whether the timeRange field is set.
   */
  boolean hasTimeRange();
  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   * @return The timeRange.
   */
  com.anduril.entityhistory.v1.TimeRange getTimeRange();
  /**
   * <pre>
   * Time range for the below queries. If no query is specified, all data
   * for the history type during the time range is returned.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.TimeRange time_range = 2 [json_name = "timeRange"];</code>
   */
  com.anduril.entityhistory.v1.TimeRangeOrBuilder getTimeRangeOrBuilder();

  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   * @return Whether the downsample field is set.
   */
  boolean hasDownsample();
  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   * @return The downsample.
   */
  com.anduril.entityhistory.v1.Downsample getDownsample();
  /**
   * <pre>
   * Downsampling to apply to a time ordered set of points. May not apply
   * to all history data types. Currently supported types are: trails.
   * </pre>
   *
   * <code>.anduril.entityhistory.v1.Downsample downsample = 3 [json_name = "downsample"];</code>
   */
  com.anduril.entityhistory.v1.DownsampleOrBuilder getDownsampleOrBuilder();

  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   * @return Whether the statement field is set.
   */
  boolean hasStatement();
  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   * @return The statement.
   */
  com.anduril.entitymanager.v1.Statement getStatement();
  /**
   * <pre>
   * Filter for historical data. The applied filter limits the data returned
   * by the query to only the data with matching current entity state. The
   * filter is applied to the latest observed state recorded in a snapshot.
   * Live state is not considered.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Statement statement = 4 [json_name = "statement"];</code>
   */
  com.anduril.entitymanager.v1.StatementOrBuilder getStatementOrBuilder();

  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @return A list containing the entityIds.
   */
  java.util.List<java.lang.String>
      getEntityIdsList();
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @return The count of entityIds.
   */
  int getEntityIdsCount();
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @param index The index of the element to return.
   * @return The entityIds at the given index.
   */
  java.lang.String getEntityIds(int index);
  /**
   * <pre>
   * Set of entityIds to request history data for. If empty, all entityIds will be found by querying TimeSeries.
   * </pre>
   *
   * <code>repeated string entity_ids = 5 [json_name = "entityIds"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the entityIds at the given index.
   */
  com.google.protobuf.ByteString
      getEntityIdsBytes(int index);
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/taskmanager/v1/task_api.pub.proto

package com.anduril.taskmanager.v1;

public final class TaskApiPubProto {
  private TaskApiPubProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_anduril_taskmanager_v1_ExecuteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_anduril_taskmanager_v1_ExecuteRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_anduril_taskmanager_v1_CancelRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_anduril_taskmanager_v1_CancelRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_anduril_taskmanager_v1_CompleteRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_anduril_taskmanager_v1_CompleteRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)anduril/taskmanager/v1/task_api.pub.pr" +
      "oto\022\026anduril.taskmanager.v1\032%anduril/tas" +
      "kmanager/v1/task.pub.proto\"B\n\016ExecuteReq" +
      "uest\0220\n\004task\030\001 \001(\0132\034.anduril.taskmanager" +
      ".v1.TaskR\004task\"g\n\rCancelRequest\022\027\n\007task_" +
      "id\030\001 \001(\tR\006taskId\022=\n\010assignee\030\002 \001(\0132!.and" +
      "uril.taskmanager.v1.PrincipalR\010assignee\"" +
      "*\n\017CompleteRequest\022\027\n\007task_id\030\001 \001(\tR\006tas" +
      "kIdB\361\001\n\032com.anduril.taskmanager.v1B\017Task" +
      "ApiPubProtoP\001ZHgithub.com/anduril/anduri" +
      "l-java/src/anduril/taskmanager/v1;taskma" +
      "nagerv1\242\002\003ATX\252\002\026Anduril.Taskmanager.V1\312\002" +
      "\026Anduril\\Taskmanager\\V1\342\002\"Anduril\\Taskma" +
      "nager\\V1\\GPBMetadata\352\002\030Anduril::Taskmana" +
      "ger::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.anduril.taskmanager.v1.TaskPubProto.getDescriptor(),
        });
    internal_static_anduril_taskmanager_v1_ExecuteRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_anduril_taskmanager_v1_ExecuteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_anduril_taskmanager_v1_ExecuteRequest_descriptor,
        new java.lang.String[] { "Task", });
    internal_static_anduril_taskmanager_v1_CancelRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_anduril_taskmanager_v1_CancelRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_anduril_taskmanager_v1_CancelRequest_descriptor,
        new java.lang.String[] { "TaskId", "Assignee", });
    internal_static_anduril_taskmanager_v1_CompleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_anduril_taskmanager_v1_CompleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_anduril_taskmanager_v1_CompleteRequest_descriptor,
        new java.lang.String[] { "TaskId", });
    com.anduril.taskmanager.v1.TaskPubProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/taskmanager/v1/task_manager_api.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.taskmanager.v1;

/**
 * <pre>
 * Request to Stream Tasks. Returns all live Tasks (aka all not-DONE Tasks).
 * </pre>
 *
 * Protobuf type {@code anduril.taskmanager.v1.StreamTasksRequest}
 */
public final class StreamTasksRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:anduril.taskmanager.v1.StreamTasksRequest)
    StreamTasksRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      StreamTasksRequest.class.getName());
  }
  // Use StreamTasksRequest.newBuilder() to construct.
  private StreamTasksRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private StreamTasksRequest() {
    views_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.taskmanager.v1.TaskManagerApiPubProto.internal_static_anduril_taskmanager_v1_StreamTasksRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.taskmanager.v1.TaskManagerApiPubProto.internal_static_anduril_taskmanager_v1_StreamTasksRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.taskmanager.v1.StreamTasksRequest.class, com.anduril.taskmanager.v1.StreamTasksRequest.Builder.class);
  }

  private int bitField0_;
  public static final int RATE_LIMIT_FIELD_NUMBER = 1;
  private com.anduril.taskmanager.v1.RateLimit rateLimit_;
  /**
   * <pre>
   * Optional rate limiting on StreamTasksResponses.
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
   * @return Whether the rateLimit field is set.
   */
  @java.lang.Override
  public boolean hasRateLimit() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Optional rate limiting on StreamTasksResponses.
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
   * @return The rateLimit.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.RateLimit getRateLimit() {
    return rateLimit_ == null ? com.anduril.taskmanager.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }
  /**
   * <pre>
   * Optional rate limiting on StreamTasksResponses.
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
    return rateLimit_ == null ? com.anduril.taskmanager.v1.RateLimit.getDefaultInstance() : rateLimit_;
  }

  public static final int VIEWS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> views_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.anduril.taskmanager.v1.TaskView> views_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.anduril.taskmanager.v1.TaskView>() {
            public com.anduril.taskmanager.v1.TaskView convert(java.lang.Integer from) {
              com.anduril.taskmanager.v1.TaskView result = com.anduril.taskmanager.v1.TaskView.forNumber(from);
              return result == null ? com.anduril.taskmanager.v1.TaskView.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Optional additional views of a Task.
   * If not set, defaults to TASK_VIEW_MANAGER.
   * </pre>
   *
   * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
   * @return A list containing the views.
   */
  @java.lang.Override
  public java.util.List<com.anduril.taskmanager.v1.TaskView> getViewsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.anduril.taskmanager.v1.TaskView>(views_, views_converter_);
  }
  /**
   * <pre>
   * Optional additional views of a Task.
   * If not set, defaults to TASK_VIEW_MANAGER.
   * </pre>
   *
   * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
   * @return The count of views.
   */
  @java.lang.Override
  public int getViewsCount() {
    return views_.size();
  }
  /**
   * <pre>
   * Optional additional views of a Task.
   * If not set, defaults to TASK_VIEW_MANAGER.
   * </pre>
   *
   * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
   * @param index The index of the element to return.
   * @return The views at the given index.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.TaskView getViews(int index) {
    return views_converter_.convert(views_.get(index));
  }
  /**
   * <pre>
   * Optional additional views of a Task.
   * If not set, defaults to TASK_VIEW_MANAGER.
   * </pre>
   *
   * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
   * @return A list containing the enum numeric values on the wire for views.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getViewsValueList() {
    return views_;
  }
  /**
   * <pre>
   * Optional additional views of a Task.
   * If not set, defaults to TASK_VIEW_MANAGER.
   * </pre>
   *
   * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of views at the given index.
   */
  @java.lang.Override
  public int getViewsValue(int index) {
    return views_.get(index);
  }
  private int viewsMemoizedSerializedSize;

  public static final int HEARTBEAT_PERIOD_MILLIS_FIELD_NUMBER = 3;
  private int heartbeatPeriodMillis_ = 0;
  /**
   * <pre>
   * Optional period (in milliseconds) at which a Heartbeat message will be sent on the
   * message stream. If this field is unset then no Heartbeat messages are sent.
   * </pre>
   *
   * <code>uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];</code>
   * @return The heartbeatPeriodMillis.
   */
  @java.lang.Override
  public int getHeartbeatPeriodMillis() {
    return heartbeatPeriodMillis_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getRateLimit());
    }
    if (getViewsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(viewsMemoizedSerializedSize);
    }
    for (int i = 0; i < views_.size(); i++) {
      output.writeEnumNoTag(views_.get(i));
    }
    if (heartbeatPeriodMillis_ != 0) {
      output.writeUInt32(3, heartbeatPeriodMillis_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRateLimit());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < views_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(views_.get(i));
      }
      size += dataSize;
      if (!getViewsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }viewsMemoizedSerializedSize = dataSize;
    }
    if (heartbeatPeriodMillis_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, heartbeatPeriodMillis_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.taskmanager.v1.StreamTasksRequest)) {
      return super.equals(obj);
    }
    com.anduril.taskmanager.v1.StreamTasksRequest other = (com.anduril.taskmanager.v1.StreamTasksRequest) obj;

    if (hasRateLimit() != other.hasRateLimit()) return false;
    if (hasRateLimit()) {
      if (!getRateLimit()
          .equals(other.getRateLimit())) return false;
    }
    if (!views_.equals(other.views_)) return false;
    if (getHeartbeatPeriodMillis()
        != other.getHeartbeatPeriodMillis()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRateLimit()) {
      hash = (37 * hash) + RATE_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimit().hashCode();
    }
    if (getViewsCount() > 0) {
      hash = (37 * hash) + VIEWS_FIELD_NUMBER;
      hash = (53 * hash) + views_.hashCode();
    }
    hash = (37 * hash) + HEARTBEAT_PERIOD_MILLIS_FIELD_NUMBER;
    hash = (53 * hash) + getHeartbeatPeriodMillis();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.taskmanager.v1.StreamTasksRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.taskmanager.v1.StreamTasksRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.taskmanager.v1.StreamTasksRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.taskmanager.v1.StreamTasksRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to Stream Tasks. Returns all live Tasks (aka all not-DONE Tasks).
   * </pre>
   *
   * Protobuf type {@code anduril.taskmanager.v1.StreamTasksRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.taskmanager.v1.StreamTasksRequest)
      com.anduril.taskmanager.v1.StreamTasksRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.taskmanager.v1.TaskManagerApiPubProto.internal_static_anduril_taskmanager_v1_StreamTasksRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.taskmanager.v1.TaskManagerApiPubProto.internal_static_anduril_taskmanager_v1_StreamTasksRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.taskmanager.v1.StreamTasksRequest.class, com.anduril.taskmanager.v1.StreamTasksRequest.Builder.class);
    }

    // Construct using com.anduril.taskmanager.v1.StreamTasksRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getRateLimitFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      views_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      heartbeatPeriodMillis_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.taskmanager.v1.TaskManagerApiPubProto.internal_static_anduril_taskmanager_v1_StreamTasksRequest_descriptor;
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.StreamTasksRequest getDefaultInstanceForType() {
      return com.anduril.taskmanager.v1.StreamTasksRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.StreamTasksRequest build() {
      com.anduril.taskmanager.v1.StreamTasksRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.StreamTasksRequest buildPartial() {
      com.anduril.taskmanager.v1.StreamTasksRequest result = new com.anduril.taskmanager.v1.StreamTasksRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.anduril.taskmanager.v1.StreamTasksRequest result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        views_ = java.util.Collections.unmodifiableList(views_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.views_ = views_;
    }

    private void buildPartial0(com.anduril.taskmanager.v1.StreamTasksRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.rateLimit_ = rateLimitBuilder_ == null
            ? rateLimit_
            : rateLimitBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.heartbeatPeriodMillis_ = heartbeatPeriodMillis_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.taskmanager.v1.StreamTasksRequest) {
        return mergeFrom((com.anduril.taskmanager.v1.StreamTasksRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.taskmanager.v1.StreamTasksRequest other) {
      if (other == com.anduril.taskmanager.v1.StreamTasksRequest.getDefaultInstance()) return this;
      if (other.hasRateLimit()) {
        mergeRateLimit(other.getRateLimit());
      }
      if (!other.views_.isEmpty()) {
        if (views_.isEmpty()) {
          views_ = other.views_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureViewsIsMutable();
          views_.addAll(other.views_);
        }
        onChanged();
      }
      if (other.getHeartbeatPeriodMillis() != 0) {
        setHeartbeatPeriodMillis(other.getHeartbeatPeriodMillis());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getRateLimitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              ensureViewsIsMutable();
              views_.add(tmpRaw);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureViewsIsMutable();
                views_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 18
            case 24: {
              heartbeatPeriodMillis_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.anduril.taskmanager.v1.RateLimit rateLimit_;
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.taskmanager.v1.RateLimit, com.anduril.taskmanager.v1.RateLimit.Builder, com.anduril.taskmanager.v1.RateLimitOrBuilder> rateLimitBuilder_;
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     * @return Whether the rateLimit field is set.
     */
    public boolean hasRateLimit() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     * @return The rateLimit.
     */
    public com.anduril.taskmanager.v1.RateLimit getRateLimit() {
      if (rateLimitBuilder_ == null) {
        return rateLimit_ == null ? com.anduril.taskmanager.v1.RateLimit.getDefaultInstance() : rateLimit_;
      } else {
        return rateLimitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(com.anduril.taskmanager.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rateLimit_ = value;
      } else {
        rateLimitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public Builder setRateLimit(
        com.anduril.taskmanager.v1.RateLimit.Builder builderForValue) {
      if (rateLimitBuilder_ == null) {
        rateLimit_ = builderForValue.build();
      } else {
        rateLimitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public Builder mergeRateLimit(com.anduril.taskmanager.v1.RateLimit value) {
      if (rateLimitBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          rateLimit_ != null &&
          rateLimit_ != com.anduril.taskmanager.v1.RateLimit.getDefaultInstance()) {
          getRateLimitBuilder().mergeFrom(value);
        } else {
          rateLimit_ = value;
        }
      } else {
        rateLimitBuilder_.mergeFrom(value);
      }
      if (rateLimit_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public Builder clearRateLimit() {
      bitField0_ = (bitField0_ & ~0x00000001);
      rateLimit_ = null;
      if (rateLimitBuilder_ != null) {
        rateLimitBuilder_.dispose();
        rateLimitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public com.anduril.taskmanager.v1.RateLimit.Builder getRateLimitBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getRateLimitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    public com.anduril.taskmanager.v1.RateLimitOrBuilder getRateLimitOrBuilder() {
      if (rateLimitBuilder_ != null) {
        return rateLimitBuilder_.getMessageOrBuilder();
      } else {
        return rateLimit_ == null ?
            com.anduril.taskmanager.v1.RateLimit.getDefaultInstance() : rateLimit_;
      }
    }
    /**
     * <pre>
     * Optional rate limiting on StreamTasksResponses.
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.RateLimit rate_limit = 1 [json_name = "rateLimit"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.taskmanager.v1.RateLimit, com.anduril.taskmanager.v1.RateLimit.Builder, com.anduril.taskmanager.v1.RateLimitOrBuilder> 
        getRateLimitFieldBuilder() {
      if (rateLimitBuilder_ == null) {
        rateLimitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.anduril.taskmanager.v1.RateLimit, com.anduril.taskmanager.v1.RateLimit.Builder, com.anduril.taskmanager.v1.RateLimitOrBuilder>(
                getRateLimit(),
                getParentForChildren(),
                isClean());
        rateLimit_ = null;
      }
      return rateLimitBuilder_;
    }

    private java.util.List<java.lang.Integer> views_ =
      java.util.Collections.emptyList();
    private void ensureViewsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        views_ = new java.util.ArrayList<java.lang.Integer>(views_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @return A list containing the views.
     */
    public java.util.List<com.anduril.taskmanager.v1.TaskView> getViewsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.anduril.taskmanager.v1.TaskView>(views_, views_converter_);
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @return The count of views.
     */
    public int getViewsCount() {
      return views_.size();
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param index The index of the element to return.
     * @return The views at the given index.
     */
    public com.anduril.taskmanager.v1.TaskView getViews(int index) {
      return views_converter_.convert(views_.get(index));
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param index The index to set the value at.
     * @param value The views to set.
     * @return This builder for chaining.
     */
    public Builder setViews(
        int index, com.anduril.taskmanager.v1.TaskView value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureViewsIsMutable();
      views_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param value The views to add.
     * @return This builder for chaining.
     */
    public Builder addViews(com.anduril.taskmanager.v1.TaskView value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureViewsIsMutable();
      views_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param values The views to add.
     * @return This builder for chaining.
     */
    public Builder addAllViews(
        java.lang.Iterable<? extends com.anduril.taskmanager.v1.TaskView> values) {
      ensureViewsIsMutable();
      for (com.anduril.taskmanager.v1.TaskView value : values) {
        views_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @return This builder for chaining.
     */
    public Builder clearViews() {
      views_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @return A list containing the enum numeric values on the wire for views.
     */
    public java.util.List<java.lang.Integer>
    getViewsValueList() {
      return java.util.Collections.unmodifiableList(views_);
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of views at the given index.
     */
    public int getViewsValue(int index) {
      return views_.get(index);
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for views to set.
     * @return This builder for chaining.
     */
    public Builder setViewsValue(
        int index, int value) {
      ensureViewsIsMutable();
      views_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param value The enum numeric value on the wire for views to add.
     * @return This builder for chaining.
     */
    public Builder addViewsValue(int value) {
      ensureViewsIsMutable();
      views_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional views of a Task.
     * If not set, defaults to TASK_VIEW_MANAGER.
     * </pre>
     *
     * <code>repeated .anduril.taskmanager.v1.TaskView views = 2 [json_name = "views"];</code>
     * @param values The enum numeric values on the wire for views to add.
     * @return This builder for chaining.
     */
    public Builder addAllViewsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureViewsIsMutable();
      for (int value : values) {
        views_.add(value);
      }
      onChanged();
      return this;
    }

    private int heartbeatPeriodMillis_ ;
    /**
     * <pre>
     * Optional period (in milliseconds) at which a Heartbeat message will be sent on the
     * message stream. If this field is unset then no Heartbeat messages are sent.
     * </pre>
     *
     * <code>uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];</code>
     * @return The heartbeatPeriodMillis.
     */
    @java.lang.Override
    public int getHeartbeatPeriodMillis() {
      return heartbeatPeriodMillis_;
    }
    /**
     * <pre>
     * Optional period (in milliseconds) at which a Heartbeat message will be sent on the
     * message stream. If this field is unset then no Heartbeat messages are sent.
     * </pre>
     *
     * <code>uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];</code>
     * @param value The heartbeatPeriodMillis to set.
     * @return This builder for chaining.
     */
    public Builder setHeartbeatPeriodMillis(int value) {

      heartbeatPeriodMillis_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional period (in milliseconds) at which a Heartbeat message will be sent on the
     * message stream. If this field is unset then no Heartbeat messages are sent.
     * </pre>
     *
     * <code>uint32 heartbeat_period_millis = 3 [json_name = "heartbeatPeriodMillis"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHeartbeatPeriodMillis() {
      bitField0_ = (bitField0_ & ~0x00000004);
      heartbeatPeriodMillis_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:anduril.taskmanager.v1.StreamTasksRequest)
  }

  // @@protoc_insertion_point(class_scope:anduril.taskmanager.v1.StreamTasksRequest)
  private static final com.anduril.taskmanager.v1.StreamTasksRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.taskmanager.v1.StreamTasksRequest();
  }

  public static com.anduril.taskmanager.v1.StreamTasksRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamTasksRequest>
      PARSER = new com.google.protobuf.AbstractParser<StreamTasksRequest>() {
    @java.lang.Override
    public StreamTasksRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StreamTasksRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamTasksRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.taskmanager.v1.StreamTasksRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/taskmanager/v1/task.pub.proto

// Protobuf Java Version: 3.25.3
package com.anduril.taskmanager.v1;

/**
 * <pre>
 * A Principal is an entity that has authority over this Task.
 * </pre>
 *
 * Protobuf type {@code anduril.taskmanager.v1.Principal}
 */
public final class Principal extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.taskmanager.v1.Principal)
    PrincipalOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Principal.newBuilder() to construct.
  private Principal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Principal() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Principal();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.taskmanager.v1.TaskPubProto.internal_static_anduril_taskmanager_v1_Principal_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.taskmanager.v1.TaskPubProto.internal_static_anduril_taskmanager_v1_Principal_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.taskmanager.v1.Principal.class, com.anduril.taskmanager.v1.Principal.Builder.class);
  }

  private int bitField0_;
  private int agentCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object agent_;
  public enum AgentCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    SYSTEM(1),
    USER(2),
    TEAM(4),
    AGENT_NOT_SET(0);
    private final int value;
    private AgentCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AgentCase valueOf(int value) {
      return forNumber(value);
    }

    public static AgentCase forNumber(int value) {
      switch (value) {
        case 1: return SYSTEM;
        case 2: return USER;
        case 4: return TEAM;
        case 0: return AGENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public AgentCase
  getAgentCase() {
    return AgentCase.forNumber(
        agentCase_);
  }

  public static final int SYSTEM_FIELD_NUMBER = 1;
  /**
   * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
   * @return Whether the system field is set.
   */
  @java.lang.Override
  public boolean hasSystem() {
    return agentCase_ == 1;
  }
  /**
   * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
   * @return The system.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.System getSystem() {
    if (agentCase_ == 1) {
       return (com.anduril.taskmanager.v1.System) agent_;
    }
    return com.anduril.taskmanager.v1.System.getDefaultInstance();
  }
  /**
   * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.SystemOrBuilder getSystemOrBuilder() {
    if (agentCase_ == 1) {
       return (com.anduril.taskmanager.v1.System) agent_;
    }
    return com.anduril.taskmanager.v1.System.getDefaultInstance();
  }

  public static final int USER_FIELD_NUMBER = 2;
  /**
   * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
   * @return Whether the user field is set.
   */
  @java.lang.Override
  public boolean hasUser() {
    return agentCase_ == 2;
  }
  /**
   * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
   * @return The user.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.User getUser() {
    if (agentCase_ == 2) {
       return (com.anduril.taskmanager.v1.User) agent_;
    }
    return com.anduril.taskmanager.v1.User.getDefaultInstance();
  }
  /**
   * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.UserOrBuilder getUserOrBuilder() {
    if (agentCase_ == 2) {
       return (com.anduril.taskmanager.v1.User) agent_;
    }
    return com.anduril.taskmanager.v1.User.getDefaultInstance();
  }

  public static final int TEAM_FIELD_NUMBER = 4;
  /**
   * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
   * @return Whether the team field is set.
   */
  @java.lang.Override
  public boolean hasTeam() {
    return agentCase_ == 4;
  }
  /**
   * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
   * @return The team.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.Team getTeam() {
    if (agentCase_ == 4) {
       return (com.anduril.taskmanager.v1.Team) agent_;
    }
    return com.anduril.taskmanager.v1.Team.getDefaultInstance();
  }
  /**
   * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.TeamOrBuilder getTeamOrBuilder() {
    if (agentCase_ == 4) {
       return (com.anduril.taskmanager.v1.Team) agent_;
    }
    return com.anduril.taskmanager.v1.Team.getDefaultInstance();
  }

  public static final int ON_BEHALF_OF_FIELD_NUMBER = 3;
  private com.anduril.taskmanager.v1.Principal onBehalfOf_;
  /**
   * <pre>
   * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
   * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
   * this "on_behalf_of" Principal would represent the non-Flux node.
   *
   * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
   * @return Whether the onBehalfOf field is set.
   */
  @java.lang.Override
  public boolean hasOnBehalfOf() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
   * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
   * this "on_behalf_of" Principal would represent the non-Flux node.
   *
   * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
   * @return The onBehalfOf.
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.Principal getOnBehalfOf() {
    return onBehalfOf_ == null ? com.anduril.taskmanager.v1.Principal.getDefaultInstance() : onBehalfOf_;
  }
  /**
   * <pre>
   * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
   * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
   * this "on_behalf_of" Principal would represent the non-Flux node.
   *
   * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
   * </pre>
   *
   * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
   */
  @java.lang.Override
  public com.anduril.taskmanager.v1.PrincipalOrBuilder getOnBehalfOfOrBuilder() {
    return onBehalfOf_ == null ? com.anduril.taskmanager.v1.Principal.getDefaultInstance() : onBehalfOf_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (agentCase_ == 1) {
      output.writeMessage(1, (com.anduril.taskmanager.v1.System) agent_);
    }
    if (agentCase_ == 2) {
      output.writeMessage(2, (com.anduril.taskmanager.v1.User) agent_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getOnBehalfOf());
    }
    if (agentCase_ == 4) {
      output.writeMessage(4, (com.anduril.taskmanager.v1.Team) agent_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (agentCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.anduril.taskmanager.v1.System) agent_);
    }
    if (agentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.anduril.taskmanager.v1.User) agent_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getOnBehalfOf());
    }
    if (agentCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.anduril.taskmanager.v1.Team) agent_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.taskmanager.v1.Principal)) {
      return super.equals(obj);
    }
    com.anduril.taskmanager.v1.Principal other = (com.anduril.taskmanager.v1.Principal) obj;

    if (hasOnBehalfOf() != other.hasOnBehalfOf()) return false;
    if (hasOnBehalfOf()) {
      if (!getOnBehalfOf()
          .equals(other.getOnBehalfOf())) return false;
    }
    if (!getAgentCase().equals(other.getAgentCase())) return false;
    switch (agentCase_) {
      case 1:
        if (!getSystem()
            .equals(other.getSystem())) return false;
        break;
      case 2:
        if (!getUser()
            .equals(other.getUser())) return false;
        break;
      case 4:
        if (!getTeam()
            .equals(other.getTeam())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOnBehalfOf()) {
      hash = (37 * hash) + ON_BEHALF_OF_FIELD_NUMBER;
      hash = (53 * hash) + getOnBehalfOf().hashCode();
    }
    switch (agentCase_) {
      case 1:
        hash = (37 * hash) + SYSTEM_FIELD_NUMBER;
        hash = (53 * hash) + getSystem().hashCode();
        break;
      case 2:
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
        break;
      case 4:
        hash = (37 * hash) + TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTeam().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.taskmanager.v1.Principal parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.taskmanager.v1.Principal parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.taskmanager.v1.Principal parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.taskmanager.v1.Principal parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.taskmanager.v1.Principal prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Principal is an entity that has authority over this Task.
   * </pre>
   *
   * Protobuf type {@code anduril.taskmanager.v1.Principal}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.taskmanager.v1.Principal)
      com.anduril.taskmanager.v1.PrincipalOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.taskmanager.v1.TaskPubProto.internal_static_anduril_taskmanager_v1_Principal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.taskmanager.v1.TaskPubProto.internal_static_anduril_taskmanager_v1_Principal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.taskmanager.v1.Principal.class, com.anduril.taskmanager.v1.Principal.Builder.class);
    }

    // Construct using com.anduril.taskmanager.v1.Principal.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOnBehalfOfFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (systemBuilder_ != null) {
        systemBuilder_.clear();
      }
      if (userBuilder_ != null) {
        userBuilder_.clear();
      }
      if (teamBuilder_ != null) {
        teamBuilder_.clear();
      }
      onBehalfOf_ = null;
      if (onBehalfOfBuilder_ != null) {
        onBehalfOfBuilder_.dispose();
        onBehalfOfBuilder_ = null;
      }
      agentCase_ = 0;
      agent_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.taskmanager.v1.TaskPubProto.internal_static_anduril_taskmanager_v1_Principal_descriptor;
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.Principal getDefaultInstanceForType() {
      return com.anduril.taskmanager.v1.Principal.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.Principal build() {
      com.anduril.taskmanager.v1.Principal result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.taskmanager.v1.Principal buildPartial() {
      com.anduril.taskmanager.v1.Principal result = new com.anduril.taskmanager.v1.Principal(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.taskmanager.v1.Principal result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.onBehalfOf_ = onBehalfOfBuilder_ == null
            ? onBehalfOf_
            : onBehalfOfBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.anduril.taskmanager.v1.Principal result) {
      result.agentCase_ = agentCase_;
      result.agent_ = this.agent_;
      if (agentCase_ == 1 &&
          systemBuilder_ != null) {
        result.agent_ = systemBuilder_.build();
      }
      if (agentCase_ == 2 &&
          userBuilder_ != null) {
        result.agent_ = userBuilder_.build();
      }
      if (agentCase_ == 4 &&
          teamBuilder_ != null) {
        result.agent_ = teamBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.taskmanager.v1.Principal) {
        return mergeFrom((com.anduril.taskmanager.v1.Principal)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.taskmanager.v1.Principal other) {
      if (other == com.anduril.taskmanager.v1.Principal.getDefaultInstance()) return this;
      if (other.hasOnBehalfOf()) {
        mergeOnBehalfOf(other.getOnBehalfOf());
      }
      switch (other.getAgentCase()) {
        case SYSTEM: {
          mergeSystem(other.getSystem());
          break;
        }
        case USER: {
          mergeUser(other.getUser());
          break;
        }
        case TEAM: {
          mergeTeam(other.getTeam());
          break;
        }
        case AGENT_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getSystemFieldBuilder().getBuilder(),
                  extensionRegistry);
              agentCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getUserFieldBuilder().getBuilder(),
                  extensionRegistry);
              agentCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getOnBehalfOfFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getTeamFieldBuilder().getBuilder(),
                  extensionRegistry);
              agentCase_ = 4;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int agentCase_ = 0;
    private java.lang.Object agent_;
    public AgentCase
        getAgentCase() {
      return AgentCase.forNumber(
          agentCase_);
    }

    public Builder clearAgent() {
      agentCase_ = 0;
      agent_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.System, com.anduril.taskmanager.v1.System.Builder, com.anduril.taskmanager.v1.SystemOrBuilder> systemBuilder_;
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     * @return Whether the system field is set.
     */
    @java.lang.Override
    public boolean hasSystem() {
      return agentCase_ == 1;
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     * @return The system.
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.System getSystem() {
      if (systemBuilder_ == null) {
        if (agentCase_ == 1) {
          return (com.anduril.taskmanager.v1.System) agent_;
        }
        return com.anduril.taskmanager.v1.System.getDefaultInstance();
      } else {
        if (agentCase_ == 1) {
          return systemBuilder_.getMessage();
        }
        return com.anduril.taskmanager.v1.System.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    public Builder setSystem(com.anduril.taskmanager.v1.System value) {
      if (systemBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        agent_ = value;
        onChanged();
      } else {
        systemBuilder_.setMessage(value);
      }
      agentCase_ = 1;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    public Builder setSystem(
        com.anduril.taskmanager.v1.System.Builder builderForValue) {
      if (systemBuilder_ == null) {
        agent_ = builderForValue.build();
        onChanged();
      } else {
        systemBuilder_.setMessage(builderForValue.build());
      }
      agentCase_ = 1;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    public Builder mergeSystem(com.anduril.taskmanager.v1.System value) {
      if (systemBuilder_ == null) {
        if (agentCase_ == 1 &&
            agent_ != com.anduril.taskmanager.v1.System.getDefaultInstance()) {
          agent_ = com.anduril.taskmanager.v1.System.newBuilder((com.anduril.taskmanager.v1.System) agent_)
              .mergeFrom(value).buildPartial();
        } else {
          agent_ = value;
        }
        onChanged();
      } else {
        if (agentCase_ == 1) {
          systemBuilder_.mergeFrom(value);
        } else {
          systemBuilder_.setMessage(value);
        }
      }
      agentCase_ = 1;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    public Builder clearSystem() {
      if (systemBuilder_ == null) {
        if (agentCase_ == 1) {
          agentCase_ = 0;
          agent_ = null;
          onChanged();
        }
      } else {
        if (agentCase_ == 1) {
          agentCase_ = 0;
          agent_ = null;
        }
        systemBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    public com.anduril.taskmanager.v1.System.Builder getSystemBuilder() {
      return getSystemFieldBuilder().getBuilder();
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.SystemOrBuilder getSystemOrBuilder() {
      if ((agentCase_ == 1) && (systemBuilder_ != null)) {
        return systemBuilder_.getMessageOrBuilder();
      } else {
        if (agentCase_ == 1) {
          return (com.anduril.taskmanager.v1.System) agent_;
        }
        return com.anduril.taskmanager.v1.System.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.System system = 1 [json_name = "system"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.System, com.anduril.taskmanager.v1.System.Builder, com.anduril.taskmanager.v1.SystemOrBuilder> 
        getSystemFieldBuilder() {
      if (systemBuilder_ == null) {
        if (!(agentCase_ == 1)) {
          agent_ = com.anduril.taskmanager.v1.System.getDefaultInstance();
        }
        systemBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.taskmanager.v1.System, com.anduril.taskmanager.v1.System.Builder, com.anduril.taskmanager.v1.SystemOrBuilder>(
                (com.anduril.taskmanager.v1.System) agent_,
                getParentForChildren(),
                isClean());
        agent_ = null;
      }
      agentCase_ = 1;
      onChanged();
      return systemBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.User, com.anduril.taskmanager.v1.User.Builder, com.anduril.taskmanager.v1.UserOrBuilder> userBuilder_;
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return agentCase_ == 2;
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     * @return The user.
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.User getUser() {
      if (userBuilder_ == null) {
        if (agentCase_ == 2) {
          return (com.anduril.taskmanager.v1.User) agent_;
        }
        return com.anduril.taskmanager.v1.User.getDefaultInstance();
      } else {
        if (agentCase_ == 2) {
          return userBuilder_.getMessage();
        }
        return com.anduril.taskmanager.v1.User.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    public Builder setUser(com.anduril.taskmanager.v1.User value) {
      if (userBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        agent_ = value;
        onChanged();
      } else {
        userBuilder_.setMessage(value);
      }
      agentCase_ = 2;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    public Builder setUser(
        com.anduril.taskmanager.v1.User.Builder builderForValue) {
      if (userBuilder_ == null) {
        agent_ = builderForValue.build();
        onChanged();
      } else {
        userBuilder_.setMessage(builderForValue.build());
      }
      agentCase_ = 2;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    public Builder mergeUser(com.anduril.taskmanager.v1.User value) {
      if (userBuilder_ == null) {
        if (agentCase_ == 2 &&
            agent_ != com.anduril.taskmanager.v1.User.getDefaultInstance()) {
          agent_ = com.anduril.taskmanager.v1.User.newBuilder((com.anduril.taskmanager.v1.User) agent_)
              .mergeFrom(value).buildPartial();
        } else {
          agent_ = value;
        }
        onChanged();
      } else {
        if (agentCase_ == 2) {
          userBuilder_.mergeFrom(value);
        } else {
          userBuilder_.setMessage(value);
        }
      }
      agentCase_ = 2;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    public Builder clearUser() {
      if (userBuilder_ == null) {
        if (agentCase_ == 2) {
          agentCase_ = 0;
          agent_ = null;
          onChanged();
        }
      } else {
        if (agentCase_ == 2) {
          agentCase_ = 0;
          agent_ = null;
        }
        userBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    public com.anduril.taskmanager.v1.User.Builder getUserBuilder() {
      return getUserFieldBuilder().getBuilder();
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.UserOrBuilder getUserOrBuilder() {
      if ((agentCase_ == 2) && (userBuilder_ != null)) {
        return userBuilder_.getMessageOrBuilder();
      } else {
        if (agentCase_ == 2) {
          return (com.anduril.taskmanager.v1.User) agent_;
        }
        return com.anduril.taskmanager.v1.User.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.User user = 2 [json_name = "user"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.User, com.anduril.taskmanager.v1.User.Builder, com.anduril.taskmanager.v1.UserOrBuilder> 
        getUserFieldBuilder() {
      if (userBuilder_ == null) {
        if (!(agentCase_ == 2)) {
          agent_ = com.anduril.taskmanager.v1.User.getDefaultInstance();
        }
        userBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.taskmanager.v1.User, com.anduril.taskmanager.v1.User.Builder, com.anduril.taskmanager.v1.UserOrBuilder>(
                (com.anduril.taskmanager.v1.User) agent_,
                getParentForChildren(),
                isClean());
        agent_ = null;
      }
      agentCase_ = 2;
      onChanged();
      return userBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.Team, com.anduril.taskmanager.v1.Team.Builder, com.anduril.taskmanager.v1.TeamOrBuilder> teamBuilder_;
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     * @return Whether the team field is set.
     */
    @java.lang.Override
    public boolean hasTeam() {
      return agentCase_ == 4;
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     * @return The team.
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.Team getTeam() {
      if (teamBuilder_ == null) {
        if (agentCase_ == 4) {
          return (com.anduril.taskmanager.v1.Team) agent_;
        }
        return com.anduril.taskmanager.v1.Team.getDefaultInstance();
      } else {
        if (agentCase_ == 4) {
          return teamBuilder_.getMessage();
        }
        return com.anduril.taskmanager.v1.Team.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    public Builder setTeam(com.anduril.taskmanager.v1.Team value) {
      if (teamBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        agent_ = value;
        onChanged();
      } else {
        teamBuilder_.setMessage(value);
      }
      agentCase_ = 4;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    public Builder setTeam(
        com.anduril.taskmanager.v1.Team.Builder builderForValue) {
      if (teamBuilder_ == null) {
        agent_ = builderForValue.build();
        onChanged();
      } else {
        teamBuilder_.setMessage(builderForValue.build());
      }
      agentCase_ = 4;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    public Builder mergeTeam(com.anduril.taskmanager.v1.Team value) {
      if (teamBuilder_ == null) {
        if (agentCase_ == 4 &&
            agent_ != com.anduril.taskmanager.v1.Team.getDefaultInstance()) {
          agent_ = com.anduril.taskmanager.v1.Team.newBuilder((com.anduril.taskmanager.v1.Team) agent_)
              .mergeFrom(value).buildPartial();
        } else {
          agent_ = value;
        }
        onChanged();
      } else {
        if (agentCase_ == 4) {
          teamBuilder_.mergeFrom(value);
        } else {
          teamBuilder_.setMessage(value);
        }
      }
      agentCase_ = 4;
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    public Builder clearTeam() {
      if (teamBuilder_ == null) {
        if (agentCase_ == 4) {
          agentCase_ = 0;
          agent_ = null;
          onChanged();
        }
      } else {
        if (agentCase_ == 4) {
          agentCase_ = 0;
          agent_ = null;
        }
        teamBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    public com.anduril.taskmanager.v1.Team.Builder getTeamBuilder() {
      return getTeamFieldBuilder().getBuilder();
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    @java.lang.Override
    public com.anduril.taskmanager.v1.TeamOrBuilder getTeamOrBuilder() {
      if ((agentCase_ == 4) && (teamBuilder_ != null)) {
        return teamBuilder_.getMessageOrBuilder();
      } else {
        if (agentCase_ == 4) {
          return (com.anduril.taskmanager.v1.Team) agent_;
        }
        return com.anduril.taskmanager.v1.Team.getDefaultInstance();
      }
    }
    /**
     * <code>.anduril.taskmanager.v1.Team team = 4 [json_name = "team"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.Team, com.anduril.taskmanager.v1.Team.Builder, com.anduril.taskmanager.v1.TeamOrBuilder> 
        getTeamFieldBuilder() {
      if (teamBuilder_ == null) {
        if (!(agentCase_ == 4)) {
          agent_ = com.anduril.taskmanager.v1.Team.getDefaultInstance();
        }
        teamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.taskmanager.v1.Team, com.anduril.taskmanager.v1.Team.Builder, com.anduril.taskmanager.v1.TeamOrBuilder>(
                (com.anduril.taskmanager.v1.Team) agent_,
                getParentForChildren(),
                isClean());
        agent_ = null;
      }
      agentCase_ = 4;
      onChanged();
      return teamBuilder_;
    }

    private com.anduril.taskmanager.v1.Principal onBehalfOf_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.Principal, com.anduril.taskmanager.v1.Principal.Builder, com.anduril.taskmanager.v1.PrincipalOrBuilder> onBehalfOfBuilder_;
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     * @return Whether the onBehalfOf field is set.
     */
    public boolean hasOnBehalfOf() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     * @return The onBehalfOf.
     */
    public com.anduril.taskmanager.v1.Principal getOnBehalfOf() {
      if (onBehalfOfBuilder_ == null) {
        return onBehalfOf_ == null ? com.anduril.taskmanager.v1.Principal.getDefaultInstance() : onBehalfOf_;
      } else {
        return onBehalfOfBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public Builder setOnBehalfOf(com.anduril.taskmanager.v1.Principal value) {
      if (onBehalfOfBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        onBehalfOf_ = value;
      } else {
        onBehalfOfBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public Builder setOnBehalfOf(
        com.anduril.taskmanager.v1.Principal.Builder builderForValue) {
      if (onBehalfOfBuilder_ == null) {
        onBehalfOf_ = builderForValue.build();
      } else {
        onBehalfOfBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public Builder mergeOnBehalfOf(com.anduril.taskmanager.v1.Principal value) {
      if (onBehalfOfBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          onBehalfOf_ != null &&
          onBehalfOf_ != com.anduril.taskmanager.v1.Principal.getDefaultInstance()) {
          getOnBehalfOfBuilder().mergeFrom(value);
        } else {
          onBehalfOf_ = value;
        }
      } else {
        onBehalfOfBuilder_.mergeFrom(value);
      }
      if (onBehalfOf_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public Builder clearOnBehalfOf() {
      bitField0_ = (bitField0_ & ~0x00000008);
      onBehalfOf_ = null;
      if (onBehalfOfBuilder_ != null) {
        onBehalfOfBuilder_.dispose();
        onBehalfOfBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public com.anduril.taskmanager.v1.Principal.Builder getOnBehalfOfBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getOnBehalfOfFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    public com.anduril.taskmanager.v1.PrincipalOrBuilder getOnBehalfOfOrBuilder() {
      if (onBehalfOfBuilder_ != null) {
        return onBehalfOfBuilder_.getMessageOrBuilder();
      } else {
        return onBehalfOf_ == null ?
            com.anduril.taskmanager.v1.Principal.getDefaultInstance() : onBehalfOf_;
      }
    }
    /**
     * <pre>
     * The Principal _this_ Principal is acting on behalf of. For example, if there is a Flux node connected to a non-Flux node,
     * and that Flux node wants to act "on behalf of" that non-Flux node, _this_ Principal would represent the Flux node, and
     * this "on_behalf_of" Principal would represent the non-Flux node.
     *
     * Likely only populated once in the nesting (i.e. the "on_behalf_of" Principal would not have another "on_behalf_of" in most cases).
     * </pre>
     *
     * <code>.anduril.taskmanager.v1.Principal on_behalf_of = 3 [json_name = "onBehalfOf"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.taskmanager.v1.Principal, com.anduril.taskmanager.v1.Principal.Builder, com.anduril.taskmanager.v1.PrincipalOrBuilder> 
        getOnBehalfOfFieldBuilder() {
      if (onBehalfOfBuilder_ == null) {
        onBehalfOfBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.taskmanager.v1.Principal, com.anduril.taskmanager.v1.Principal.Builder, com.anduril.taskmanager.v1.PrincipalOrBuilder>(
                getOnBehalfOf(),
                getParentForChildren(),
                isClean());
        onBehalfOf_ = null;
      }
      return onBehalfOfBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.taskmanager.v1.Principal)
  }

  // @@protoc_insertion_point(class_scope:anduril.taskmanager.v1.Principal)
  private static final com.anduril.taskmanager.v1.Principal DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.taskmanager.v1.Principal();
  }

  public static com.anduril.taskmanager.v1.Principal getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Principal>
      PARSER = new com.google.protobuf.AbstractParser<Principal>() {
    @java.lang.Override
    public Principal parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Principal> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Principal> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.taskmanager.v1.Principal getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/communicationsmanager/v1/common.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.communicationsmanager.v1;

/**
 * Protobuf type {@code anduril.communicationsmanager.v1.BlobDistributionRuleDetails}
 */
public final class BlobDistributionRuleDetails extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
    BlobDistributionRuleDetailsOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      BlobDistributionRuleDetails.class.getName());
  }
  // Use BlobDistributionRuleDetails.newBuilder() to construct.
  private BlobDistributionRuleDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private BlobDistributionRuleDetails() {
    blobFilters_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.communicationsmanager.v1.CommonPubProto.internal_static_anduril_communicationsmanager_v1_BlobDistributionRuleDetails_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.communicationsmanager.v1.CommonPubProto.internal_static_anduril_communicationsmanager_v1_BlobDistributionRuleDetails_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.class, com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.Builder.class);
  }

  private int bitField0_;
  public static final int BLOB_FILTER_FIELD_NUMBER = 1;
  private com.anduril.blobs.v1.Statement blobFilter_;
  /**
   * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
   * @deprecated anduril.communicationsmanager.v1.BlobDistributionRuleDetails.blob_filter is deprecated.
   *     See anduril/communicationsmanager/v1/common.pub.proto;l=168
   * @return Whether the blobFilter field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasBlobFilter() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
   * @deprecated anduril.communicationsmanager.v1.BlobDistributionRuleDetails.blob_filter is deprecated.
   *     See anduril/communicationsmanager/v1/common.pub.proto;l=168
   * @return The blobFilter.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.blobs.v1.Statement getBlobFilter() {
    return blobFilter_ == null ? com.anduril.blobs.v1.Statement.getDefaultInstance() : blobFilter_;
  }
  /**
   * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.blobs.v1.StatementOrBuilder getBlobFilterOrBuilder() {
    return blobFilter_ == null ? com.anduril.blobs.v1.Statement.getDefaultInstance() : blobFilter_;
  }

  public static final int BLOB_FILTERS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.blobs.v1.Statement> blobFilters_;
  /**
   * <pre>
   * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
   * </pre>
   *
   * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<com.anduril.blobs.v1.Statement> getBlobFiltersList() {
    return blobFilters_;
  }
  /**
   * <pre>
   * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
   * </pre>
   *
   * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.anduril.blobs.v1.StatementOrBuilder> 
      getBlobFiltersOrBuilderList() {
    return blobFilters_;
  }
  /**
   * <pre>
   * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
   * </pre>
   *
   * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
   */
  @java.lang.Override
  public int getBlobFiltersCount() {
    return blobFilters_.size();
  }
  /**
   * <pre>
   * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
   * </pre>
   *
   * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
   */
  @java.lang.Override
  public com.anduril.blobs.v1.Statement getBlobFilters(int index) {
    return blobFilters_.get(index);
  }
  /**
   * <pre>
   * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
   * </pre>
   *
   * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
   */
  @java.lang.Override
  public com.anduril.blobs.v1.StatementOrBuilder getBlobFiltersOrBuilder(
      int index) {
    return blobFilters_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getBlobFilter());
    }
    for (int i = 0; i < blobFilters_.size(); i++) {
      output.writeMessage(2, blobFilters_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBlobFilter());
    }
    for (int i = 0; i < blobFilters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, blobFilters_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails)) {
      return super.equals(obj);
    }
    com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails other = (com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails) obj;

    if (hasBlobFilter() != other.hasBlobFilter()) return false;
    if (hasBlobFilter()) {
      if (!getBlobFilter()
          .equals(other.getBlobFilter())) return false;
    }
    if (!getBlobFiltersList()
        .equals(other.getBlobFiltersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBlobFilter()) {
      hash = (37 * hash) + BLOB_FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getBlobFilter().hashCode();
    }
    if (getBlobFiltersCount() > 0) {
      hash = (37 * hash) + BLOB_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getBlobFiltersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code anduril.communicationsmanager.v1.BlobDistributionRuleDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
      com.anduril.communicationsmanager.v1.BlobDistributionRuleDetailsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.communicationsmanager.v1.CommonPubProto.internal_static_anduril_communicationsmanager_v1_BlobDistributionRuleDetails_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.communicationsmanager.v1.CommonPubProto.internal_static_anduril_communicationsmanager_v1_BlobDistributionRuleDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.class, com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.Builder.class);
    }

    // Construct using com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getBlobFilterFieldBuilder();
        getBlobFiltersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      blobFilter_ = null;
      if (blobFilterBuilder_ != null) {
        blobFilterBuilder_.dispose();
        blobFilterBuilder_ = null;
      }
      if (blobFiltersBuilder_ == null) {
        blobFilters_ = java.util.Collections.emptyList();
      } else {
        blobFilters_ = null;
        blobFiltersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.communicationsmanager.v1.CommonPubProto.internal_static_anduril_communicationsmanager_v1_BlobDistributionRuleDetails_descriptor;
    }

    @java.lang.Override
    public com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails getDefaultInstanceForType() {
      return com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails build() {
      com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails buildPartial() {
      com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails result = new com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails result) {
      if (blobFiltersBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          blobFilters_ = java.util.Collections.unmodifiableList(blobFilters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.blobFilters_ = blobFilters_;
      } else {
        result.blobFilters_ = blobFiltersBuilder_.build();
      }
    }

    private void buildPartial0(com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.blobFilter_ = blobFilterBuilder_ == null
            ? blobFilter_
            : blobFilterBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails) {
        return mergeFrom((com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails other) {
      if (other == com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails.getDefaultInstance()) return this;
      if (other.hasBlobFilter()) {
        mergeBlobFilter(other.getBlobFilter());
      }
      if (blobFiltersBuilder_ == null) {
        if (!other.blobFilters_.isEmpty()) {
          if (blobFilters_.isEmpty()) {
            blobFilters_ = other.blobFilters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBlobFiltersIsMutable();
            blobFilters_.addAll(other.blobFilters_);
          }
          onChanged();
        }
      } else {
        if (!other.blobFilters_.isEmpty()) {
          if (blobFiltersBuilder_.isEmpty()) {
            blobFiltersBuilder_.dispose();
            blobFiltersBuilder_ = null;
            blobFilters_ = other.blobFilters_;
            bitField0_ = (bitField0_ & ~0x00000002);
            blobFiltersBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getBlobFiltersFieldBuilder() : null;
          } else {
            blobFiltersBuilder_.addAllMessages(other.blobFilters_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBlobFilterFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.anduril.blobs.v1.Statement m =
                  input.readMessage(
                      com.anduril.blobs.v1.Statement.parser(),
                      extensionRegistry);
              if (blobFiltersBuilder_ == null) {
                ensureBlobFiltersIsMutable();
                blobFilters_.add(m);
              } else {
                blobFiltersBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.anduril.blobs.v1.Statement blobFilter_;
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder> blobFilterBuilder_;
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     * @deprecated anduril.communicationsmanager.v1.BlobDistributionRuleDetails.blob_filter is deprecated.
     *     See anduril/communicationsmanager/v1/common.pub.proto;l=168
     * @return Whether the blobFilter field is set.
     */
    @java.lang.Deprecated public boolean hasBlobFilter() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     * @deprecated anduril.communicationsmanager.v1.BlobDistributionRuleDetails.blob_filter is deprecated.
     *     See anduril/communicationsmanager/v1/common.pub.proto;l=168
     * @return The blobFilter.
     */
    @java.lang.Deprecated public com.anduril.blobs.v1.Statement getBlobFilter() {
      if (blobFilterBuilder_ == null) {
        return blobFilter_ == null ? com.anduril.blobs.v1.Statement.getDefaultInstance() : blobFilter_;
      } else {
        return blobFilterBuilder_.getMessage();
      }
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setBlobFilter(com.anduril.blobs.v1.Statement value) {
      if (blobFilterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobFilter_ = value;
      } else {
        blobFilterBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setBlobFilter(
        com.anduril.blobs.v1.Statement.Builder builderForValue) {
      if (blobFilterBuilder_ == null) {
        blobFilter_ = builderForValue.build();
      } else {
        blobFilterBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeBlobFilter(com.anduril.blobs.v1.Statement value) {
      if (blobFilterBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          blobFilter_ != null &&
          blobFilter_ != com.anduril.blobs.v1.Statement.getDefaultInstance()) {
          getBlobFilterBuilder().mergeFrom(value);
        } else {
          blobFilter_ = value;
        }
      } else {
        blobFilterBuilder_.mergeFrom(value);
      }
      if (blobFilter_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearBlobFilter() {
      bitField0_ = (bitField0_ & ~0x00000001);
      blobFilter_ = null;
      if (blobFilterBuilder_ != null) {
        blobFilterBuilder_.dispose();
        blobFilterBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.blobs.v1.Statement.Builder getBlobFilterBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBlobFilterFieldBuilder().getBuilder();
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.blobs.v1.StatementOrBuilder getBlobFilterOrBuilder() {
      if (blobFilterBuilder_ != null) {
        return blobFilterBuilder_.getMessageOrBuilder();
      } else {
        return blobFilter_ == null ?
            com.anduril.blobs.v1.Statement.getDefaultInstance() : blobFilter_;
      }
    }
    /**
     * <code>.anduril.blobs.v1.Statement blob_filter = 1 [json_name = "blobFilter", deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder> 
        getBlobFilterFieldBuilder() {
      if (blobFilterBuilder_ == null) {
        blobFilterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder>(
                getBlobFilter(),
                getParentForChildren(),
                isClean());
        blobFilter_ = null;
      }
      return blobFilterBuilder_;
    }

    private java.util.List<com.anduril.blobs.v1.Statement> blobFilters_ =
      java.util.Collections.emptyList();
    private void ensureBlobFiltersIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        blobFilters_ = new java.util.ArrayList<com.anduril.blobs.v1.Statement>(blobFilters_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder> blobFiltersBuilder_;

    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public java.util.List<com.anduril.blobs.v1.Statement> getBlobFiltersList() {
      if (blobFiltersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(blobFilters_);
      } else {
        return blobFiltersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public int getBlobFiltersCount() {
      if (blobFiltersBuilder_ == null) {
        return blobFilters_.size();
      } else {
        return blobFiltersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public com.anduril.blobs.v1.Statement getBlobFilters(int index) {
      if (blobFiltersBuilder_ == null) {
        return blobFilters_.get(index);
      } else {
        return blobFiltersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder setBlobFilters(
        int index, com.anduril.blobs.v1.Statement value) {
      if (blobFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlobFiltersIsMutable();
        blobFilters_.set(index, value);
        onChanged();
      } else {
        blobFiltersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder setBlobFilters(
        int index, com.anduril.blobs.v1.Statement.Builder builderForValue) {
      if (blobFiltersBuilder_ == null) {
        ensureBlobFiltersIsMutable();
        blobFilters_.set(index, builderForValue.build());
        onChanged();
      } else {
        blobFiltersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder addBlobFilters(com.anduril.blobs.v1.Statement value) {
      if (blobFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlobFiltersIsMutable();
        blobFilters_.add(value);
        onChanged();
      } else {
        blobFiltersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder addBlobFilters(
        int index, com.anduril.blobs.v1.Statement value) {
      if (blobFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlobFiltersIsMutable();
        blobFilters_.add(index, value);
        onChanged();
      } else {
        blobFiltersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder addBlobFilters(
        com.anduril.blobs.v1.Statement.Builder builderForValue) {
      if (blobFiltersBuilder_ == null) {
        ensureBlobFiltersIsMutable();
        blobFilters_.add(builderForValue.build());
        onChanged();
      } else {
        blobFiltersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder addBlobFilters(
        int index, com.anduril.blobs.v1.Statement.Builder builderForValue) {
      if (blobFiltersBuilder_ == null) {
        ensureBlobFiltersIsMutable();
        blobFilters_.add(index, builderForValue.build());
        onChanged();
      } else {
        blobFiltersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder addAllBlobFilters(
        java.lang.Iterable<? extends com.anduril.blobs.v1.Statement> values) {
      if (blobFiltersBuilder_ == null) {
        ensureBlobFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blobFilters_);
        onChanged();
      } else {
        blobFiltersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder clearBlobFilters() {
      if (blobFiltersBuilder_ == null) {
        blobFilters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        blobFiltersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public Builder removeBlobFilters(int index) {
      if (blobFiltersBuilder_ == null) {
        ensureBlobFiltersIsMutable();
        blobFilters_.remove(index);
        onChanged();
      } else {
        blobFiltersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public com.anduril.blobs.v1.Statement.Builder getBlobFiltersBuilder(
        int index) {
      return getBlobFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public com.anduril.blobs.v1.StatementOrBuilder getBlobFiltersOrBuilder(
        int index) {
      if (blobFiltersBuilder_ == null) {
        return blobFilters_.get(index);  } else {
        return blobFiltersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public java.util.List<? extends com.anduril.blobs.v1.StatementOrBuilder> 
         getBlobFiltersOrBuilderList() {
      if (blobFiltersBuilder_ != null) {
        return blobFiltersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(blobFilters_);
      }
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public com.anduril.blobs.v1.Statement.Builder addBlobFiltersBuilder() {
      return getBlobFiltersFieldBuilder().addBuilder(
          com.anduril.blobs.v1.Statement.getDefaultInstance());
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public com.anduril.blobs.v1.Statement.Builder addBlobFiltersBuilder(
        int index) {
      return getBlobFiltersFieldBuilder().addBuilder(
          index, com.anduril.blobs.v1.Statement.getDefaultInstance());
    }
    /**
     * <pre>
     * Controls blob filtering using disjoint matching, meaning only 1 statement needs to match.
     * </pre>
     *
     * <code>repeated .anduril.blobs.v1.Statement blob_filters = 2 [json_name = "blobFilters"];</code>
     */
    public java.util.List<com.anduril.blobs.v1.Statement.Builder> 
         getBlobFiltersBuilderList() {
      return getBlobFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder> 
        getBlobFiltersFieldBuilder() {
      if (blobFiltersBuilder_ == null) {
        blobFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.anduril.blobs.v1.Statement, com.anduril.blobs.v1.Statement.Builder, com.anduril.blobs.v1.StatementOrBuilder>(
                blobFilters_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        blobFilters_ = null;
      }
      return blobFiltersBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  }

  // @@protoc_insertion_point(class_scope:anduril.communicationsmanager.v1.BlobDistributionRuleDetails)
  private static final com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails();
  }

  public static com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BlobDistributionRuleDetails>
      PARSER = new com.google.protobuf.AbstractParser<BlobDistributionRuleDetails>() {
    @java.lang.Override
    public BlobDistributionRuleDetails parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BlobDistributionRuleDetails> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BlobDistributionRuleDetails> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.communicationsmanager.v1.BlobDistributionRuleDetails getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/geoentity.pub.proto

package com.anduril.entitymanager.v1;

/**
 * Protobuf enum {@code anduril.entitymanager.v1.ACMDetailType}
 */
public enum ACMDetailType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ACM_DETAIL_TYPE_INVALID = 0;</code>
   */
  ACM_DETAIL_TYPE_INVALID(0),
  /**
   * <code>ACM_DETAIL_TYPE_AIR_CORRIDOR = 1;</code>
   */
  ACM_DETAIL_TYPE_AIR_CORRIDOR(1),
  /**
   * <code>ACM_DETAIL_TYPE_MINIMUM_RISK_ROUTE = 2;</code>
   */
  ACM_DETAIL_TYPE_MINIMUM_RISK_ROUTE(2),
  /**
   * <code>ACM_DETAIL_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE = 3;</code>
   */
  ACM_DETAIL_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE(3),
  /**
   * <code>ACM_DETAIL_TYPE_TRANSIT_ROUTE = 4;</code>
   */
  ACM_DETAIL_TYPE_TRANSIT_ROUTE(4),
  /**
   * <code>ACM_DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE = 5;</code>
   */
  ACM_DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE(5),
  /**
   * <code>ACM_DETAIL_TYPE_SPECIAL_CORRIDOR = 6;</code>
   */
  ACM_DETAIL_TYPE_SPECIAL_CORRIDOR(6),
  /**
   * <code>ACM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAFT_FLIGHT_ROUTE = 7;</code>
   */
  ACM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAFT_FLIGHT_ROUTE(7),
  /**
   * <code>ACM_DETAIL_TYPE_RESTRICTED_OPERATIONS_ZONE = 8;</code>
   */
  ACM_DETAIL_TYPE_RESTRICTED_OPERATIONS_ZONE(8),
  /**
   * <code>ACM_DETAIL_TYPE_AIR_TO_AIR_REFUELING_AREA = 9;</code>
   */
  ACM_DETAIL_TYPE_AIR_TO_AIR_REFUELING_AREA(9),
  /**
   * <code>ACM_DETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_AREA = 10;</code>
   */
  ACM_DETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_AREA(10),
  /**
   * <code>ACM_DETAIL_TYPE_AIRBORNE_EARLY_WARNING_AREA = 11;</code>
   */
  ACM_DETAIL_TYPE_AIRBORNE_EARLY_WARNING_AREA(11),
  /**
   * <code>ACM_DETAIL_TYPE_CLOSE_AIR_SUPPORT_AREA = 12;</code>
   */
  ACM_DETAIL_TYPE_CLOSE_AIR_SUPPORT_AREA(12),
  /**
   * <code>ACM_DETAIL_TYPE_COMBAT_AIR_PATROL = 13;</code>
   */
  ACM_DETAIL_TYPE_COMBAT_AIR_PATROL(13),
  /**
   * <code>ACM_DETAIL_TYPE_DROP_ZONE = 14;</code>
   */
  ACM_DETAIL_TYPE_DROP_ZONE(14),
  /**
   * <code>ACM_DETAIL_TYPE_ELECTRONIC_COMBAT = 15;</code>
   */
  ACM_DETAIL_TYPE_ELECTRONIC_COMBAT(15),
  /**
   * <code>ACM_DETAIL_TYPE_LANDING_ZONE = 16;</code>
   */
  ACM_DETAIL_TYPE_LANDING_ZONE(16),
  /**
   * <code>ACM_DETAIL_TYPE_PICKUP_ZONE = 17;</code>
   */
  ACM_DETAIL_TYPE_PICKUP_ZONE(17),
  /**
   * <code>ACM_DETAIL_TYPE_RECONNAISSANCE_AREA = 18;</code>
   */
  ACM_DETAIL_TYPE_RECONNAISSANCE_AREA(18),
  /**
   * <code>ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE_AREA = 19;</code>
   */
  ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE_AREA(19),
  /**
   * <code>ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MISSILE_SYSTEM = 20;</code>
   */
  ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MISSILE_SYSTEM(20),
  /**
   * <code>ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MUNITIONS = 21;</code>
   */
  ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MUNITIONS(21),
  /**
   * <code>ACM_DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA = 22;</code>
   */
  ACM_DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA(22),
  /**
   * <code>ACM_DETAIL_TYPE_COORDINATING_ALTITUDE = 23;</code>
   */
  ACM_DETAIL_TYPE_COORDINATING_ALTITUDE(23),
  /**
   * <code>ACM_DETAIL_TYPE_COORDINATION_LEVEL = 24;</code>
   */
  ACM_DETAIL_TYPE_COORDINATION_LEVEL(24),
  /**
   * <code>ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE_CONTROL_ZONE = 25;</code>
   */
  ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE_CONTROL_ZONE(25),
  /**
   * <code>ACM_DETAIL_TYPE_NO_FLY_AREA = 26;</code>
   */
  ACM_DETAIL_TYPE_NO_FLY_AREA(26),
  /**
   * <code>ACM_DETAIL_TYPE_TRANSIT_CORRIDOR = 27;</code>
   */
  ACM_DETAIL_TYPE_TRANSIT_CORRIDOR(27),
  /**
   * <code>ACM_DETAIL_TYPE_RETURN_TO_FORCE = 28;</code>
   */
  ACM_DETAIL_TYPE_RETURN_TO_FORCE(28),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ACM_DETAIL_TYPE_INVALID = 0;</code>
   */
  public static final int ACM_DETAIL_TYPE_INVALID_VALUE = 0;
  /**
   * <code>ACM_DETAIL_TYPE_AIR_CORRIDOR = 1;</code>
   */
  public static final int ACM_DETAIL_TYPE_AIR_CORRIDOR_VALUE = 1;
  /**
   * <code>ACM_DETAIL_TYPE_MINIMUM_RISK_ROUTE = 2;</code>
   */
  public static final int ACM_DETAIL_TYPE_MINIMUM_RISK_ROUTE_VALUE = 2;
  /**
   * <code>ACM_DETAIL_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE = 3;</code>
   */
  public static final int ACM_DETAIL_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE_VALUE = 3;
  /**
   * <code>ACM_DETAIL_TYPE_TRANSIT_ROUTE = 4;</code>
   */
  public static final int ACM_DETAIL_TYPE_TRANSIT_ROUTE_VALUE = 4;
  /**
   * <code>ACM_DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE = 5;</code>
   */
  public static final int ACM_DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE_VALUE = 5;
  /**
   * <code>ACM_DETAIL_TYPE_SPECIAL_CORRIDOR = 6;</code>
   */
  public static final int ACM_DETAIL_TYPE_SPECIAL_CORRIDOR_VALUE = 6;
  /**
   * <code>ACM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAFT_FLIGHT_ROUTE = 7;</code>
   */
  public static final int ACM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAFT_FLIGHT_ROUTE_VALUE = 7;
  /**
   * <code>ACM_DETAIL_TYPE_RESTRICTED_OPERATIONS_ZONE = 8;</code>
   */
  public static final int ACM_DETAIL_TYPE_RESTRICTED_OPERATIONS_ZONE_VALUE = 8;
  /**
   * <code>ACM_DETAIL_TYPE_AIR_TO_AIR_REFUELING_AREA = 9;</code>
   */
  public static final int ACM_DETAIL_TYPE_AIR_TO_AIR_REFUELING_AREA_VALUE = 9;
  /**
   * <code>ACM_DETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_AREA = 10;</code>
   */
  public static final int ACM_DETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_AREA_VALUE = 10;
  /**
   * <code>ACM_DETAIL_TYPE_AIRBORNE_EARLY_WARNING_AREA = 11;</code>
   */
  public static final int ACM_DETAIL_TYPE_AIRBORNE_EARLY_WARNING_AREA_VALUE = 11;
  /**
   * <code>ACM_DETAIL_TYPE_CLOSE_AIR_SUPPORT_AREA = 12;</code>
   */
  public static final int ACM_DETAIL_TYPE_CLOSE_AIR_SUPPORT_AREA_VALUE = 12;
  /**
   * <code>ACM_DETAIL_TYPE_COMBAT_AIR_PATROL = 13;</code>
   */
  public static final int ACM_DETAIL_TYPE_COMBAT_AIR_PATROL_VALUE = 13;
  /**
   * <code>ACM_DETAIL_TYPE_DROP_ZONE = 14;</code>
   */
  public static final int ACM_DETAIL_TYPE_DROP_ZONE_VALUE = 14;
  /**
   * <code>ACM_DETAIL_TYPE_ELECTRONIC_COMBAT = 15;</code>
   */
  public static final int ACM_DETAIL_TYPE_ELECTRONIC_COMBAT_VALUE = 15;
  /**
   * <code>ACM_DETAIL_TYPE_LANDING_ZONE = 16;</code>
   */
  public static final int ACM_DETAIL_TYPE_LANDING_ZONE_VALUE = 16;
  /**
   * <code>ACM_DETAIL_TYPE_PICKUP_ZONE = 17;</code>
   */
  public static final int ACM_DETAIL_TYPE_PICKUP_ZONE_VALUE = 17;
  /**
   * <code>ACM_DETAIL_TYPE_RECONNAISSANCE_AREA = 18;</code>
   */
  public static final int ACM_DETAIL_TYPE_RECONNAISSANCE_AREA_VALUE = 18;
  /**
   * <code>ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE_AREA = 19;</code>
   */
  public static final int ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE_AREA_VALUE = 19;
  /**
   * <code>ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MISSILE_SYSTEM = 20;</code>
   */
  public static final int ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MISSILE_SYSTEM_VALUE = 20;
  /**
   * <code>ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MUNITIONS = 21;</code>
   */
  public static final int ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MUNITIONS_VALUE = 21;
  /**
   * <code>ACM_DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA = 22;</code>
   */
  public static final int ACM_DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA_VALUE = 22;
  /**
   * <code>ACM_DETAIL_TYPE_COORDINATING_ALTITUDE = 23;</code>
   */
  public static final int ACM_DETAIL_TYPE_COORDINATING_ALTITUDE_VALUE = 23;
  /**
   * <code>ACM_DETAIL_TYPE_COORDINATION_LEVEL = 24;</code>
   */
  public static final int ACM_DETAIL_TYPE_COORDINATION_LEVEL_VALUE = 24;
  /**
   * <code>ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE_CONTROL_ZONE = 25;</code>
   */
  public static final int ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE_CONTROL_ZONE_VALUE = 25;
  /**
   * <code>ACM_DETAIL_TYPE_NO_FLY_AREA = 26;</code>
   */
  public static final int ACM_DETAIL_TYPE_NO_FLY_AREA_VALUE = 26;
  /**
   * <code>ACM_DETAIL_TYPE_TRANSIT_CORRIDOR = 27;</code>
   */
  public static final int ACM_DETAIL_TYPE_TRANSIT_CORRIDOR_VALUE = 27;
  /**
   * <code>ACM_DETAIL_TYPE_RETURN_TO_FORCE = 28;</code>
   */
  public static final int ACM_DETAIL_TYPE_RETURN_TO_FORCE_VALUE = 28;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ACMDetailType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ACMDetailType forNumber(int value) {
    switch (value) {
      case 0: return ACM_DETAIL_TYPE_INVALID;
      case 1: return ACM_DETAIL_TYPE_AIR_CORRIDOR;
      case 2: return ACM_DETAIL_TYPE_MINIMUM_RISK_ROUTE;
      case 3: return ACM_DETAIL_TYPE_TEMPORARY_MINIMUM_RISK_ROUTE;
      case 4: return ACM_DETAIL_TYPE_TRANSIT_ROUTE;
      case 5: return ACM_DETAIL_TYPE_LOW_LEVEL_TRANSIT_ROUTE;
      case 6: return ACM_DETAIL_TYPE_SPECIAL_CORRIDOR;
      case 7: return ACM_DETAIL_TYPE_STANDARD_USE_ARMY_AIRCRAFT_FLIGHT_ROUTE;
      case 8: return ACM_DETAIL_TYPE_RESTRICTED_OPERATIONS_ZONE;
      case 9: return ACM_DETAIL_TYPE_AIR_TO_AIR_REFUELING_AREA;
      case 10: return ACM_DETAIL_TYPE_AIRBORNE_COMMAND_AND_CONTROL_AREA;
      case 11: return ACM_DETAIL_TYPE_AIRBORNE_EARLY_WARNING_AREA;
      case 12: return ACM_DETAIL_TYPE_CLOSE_AIR_SUPPORT_AREA;
      case 13: return ACM_DETAIL_TYPE_COMBAT_AIR_PATROL;
      case 14: return ACM_DETAIL_TYPE_DROP_ZONE;
      case 15: return ACM_DETAIL_TYPE_ELECTRONIC_COMBAT;
      case 16: return ACM_DETAIL_TYPE_LANDING_ZONE;
      case 17: return ACM_DETAIL_TYPE_PICKUP_ZONE;
      case 18: return ACM_DETAIL_TYPE_RECONNAISSANCE_AREA;
      case 19: return ACM_DETAIL_TYPE_SPECIAL_OPERATIONS_FORCE_AREA;
      case 20: return ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MISSILE_SYSTEM;
      case 21: return ACM_DETAIL_TYPE_SURFACE_TO_SURFACE_MUNITIONS;
      case 22: return ACM_DETAIL_TYPE_UNMANNED_AIRCRAFT_AREA;
      case 23: return ACM_DETAIL_TYPE_COORDINATING_ALTITUDE;
      case 24: return ACM_DETAIL_TYPE_COORDINATION_LEVEL;
      case 25: return ACM_DETAIL_TYPE_HIGH_DENSITY_AIRSPACE_CONTROL_ZONE;
      case 26: return ACM_DETAIL_TYPE_NO_FLY_AREA;
      case 27: return ACM_DETAIL_TYPE_TRANSIT_CORRIDOR;
      case 28: return ACM_DETAIL_TYPE_RETURN_TO_FORCE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ACMDetailType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ACMDetailType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ACMDetailType>() {
          public ACMDetailType findValueByNumber(int number) {
            return ACMDetailType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.GeoentityPubProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final ACMDetailType[] VALUES = values();

  public static ACMDetailType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ACMDetailType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:anduril.entitymanager.v1.ACMDetailType)
}


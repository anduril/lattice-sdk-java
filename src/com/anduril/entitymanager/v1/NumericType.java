// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/filter.pub.proto

// Protobuf Java Version: 3.25.3
package com.anduril.entitymanager.v1;

/**
 * <pre>
 * The NumericType represents static numeric values. It supports all numeric primitives supported
 * by the proto3 language specification.
 * </pre>
 *
 * Protobuf type {@code anduril.entitymanager.v1.NumericType}
 */
public final class NumericType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.NumericType)
    NumericTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NumericType.newBuilder() to construct.
  private NumericType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NumericType() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new NumericType();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.FilterPubProto.internal_static_anduril_entitymanager_v1_NumericType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.FilterPubProto.internal_static_anduril_entitymanager_v1_NumericType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.NumericType.class, com.anduril.entitymanager.v1.NumericType.Builder.class);
  }

  private int valueCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object value_;
  public enum ValueCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    DOUBLE_VALUE(1),
    FLOAT_VALUE(2),
    INT32_VALUE(3),
    INT64_VALUE(4),
    UINT32_VALUE(5),
    UINT64_VALUE(6),
    VALUE_NOT_SET(0);
    private final int value;
    private ValueCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ValueCase forNumber(int value) {
      switch (value) {
        case 1: return DOUBLE_VALUE;
        case 2: return FLOAT_VALUE;
        case 3: return INT32_VALUE;
        case 4: return INT64_VALUE;
        case 5: return UINT32_VALUE;
        case 6: return UINT64_VALUE;
        case 0: return VALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ValueCase
  getValueCase() {
    return ValueCase.forNumber(
        valueCase_);
  }

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 1;
  /**
   * <code>double double_value = 1 [json_name = "doubleValue"];</code>
   * @return Whether the doubleValue field is set.
   */
  @java.lang.Override
  public boolean hasDoubleValue() {
    return valueCase_ == 1;
  }
  /**
   * <code>double double_value = 1 [json_name = "doubleValue"];</code>
   * @return The doubleValue.
   */
  @java.lang.Override
  public double getDoubleValue() {
    if (valueCase_ == 1) {
      return (java.lang.Double) value_;
    }
    return 0D;
  }

  public static final int FLOAT_VALUE_FIELD_NUMBER = 2;
  /**
   * <code>float float_value = 2 [json_name = "floatValue"];</code>
   * @return Whether the floatValue field is set.
   */
  @java.lang.Override
  public boolean hasFloatValue() {
    return valueCase_ == 2;
  }
  /**
   * <code>float float_value = 2 [json_name = "floatValue"];</code>
   * @return The floatValue.
   */
  @java.lang.Override
  public float getFloatValue() {
    if (valueCase_ == 2) {
      return (java.lang.Float) value_;
    }
    return 0F;
  }

  public static final int INT32_VALUE_FIELD_NUMBER = 3;
  /**
   * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
   * @return Whether the int32Value field is set.
   */
  @java.lang.Override
  public boolean hasInt32Value() {
    return valueCase_ == 3;
  }
  /**
   * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
   * @return The int32Value.
   */
  @java.lang.Override
  public int getInt32Value() {
    if (valueCase_ == 3) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int INT64_VALUE_FIELD_NUMBER = 4;
  /**
   * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
   * @return Whether the int64Value field is set.
   */
  @java.lang.Override
  public boolean hasInt64Value() {
    return valueCase_ == 4;
  }
  /**
   * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
   * @return The int64Value.
   */
  @java.lang.Override
  public long getInt64Value() {
    if (valueCase_ == 4) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  public static final int UINT32_VALUE_FIELD_NUMBER = 5;
  /**
   * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
   * @return Whether the uint32Value field is set.
   */
  @java.lang.Override
  public boolean hasUint32Value() {
    return valueCase_ == 5;
  }
  /**
   * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
   * @return The uint32Value.
   */
  @java.lang.Override
  public int getUint32Value() {
    if (valueCase_ == 5) {
      return (java.lang.Integer) value_;
    }
    return 0;
  }

  public static final int UINT64_VALUE_FIELD_NUMBER = 6;
  /**
   * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
   * @return Whether the uint64Value field is set.
   */
  @java.lang.Override
  public boolean hasUint64Value() {
    return valueCase_ == 6;
  }
  /**
   * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
   * @return The uint64Value.
   */
  @java.lang.Override
  public long getUint64Value() {
    if (valueCase_ == 6) {
      return (java.lang.Long) value_;
    }
    return 0L;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (valueCase_ == 1) {
      output.writeDouble(
          1, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 2) {
      output.writeFloat(
          2, (float)((java.lang.Float) value_));
    }
    if (valueCase_ == 3) {
      output.writeInt32(
          3, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 4) {
      output.writeInt64(
          4, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 5) {
      output.writeUInt32(
          5, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 6) {
      output.writeUInt64(
          6, (long)((java.lang.Long) value_));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (valueCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            1, (double)((java.lang.Double) value_));
    }
    if (valueCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(
            2, (float)((java.lang.Float) value_));
    }
    if (valueCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            3, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            4, (long)((java.lang.Long) value_));
    }
    if (valueCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(
            5, (int)((java.lang.Integer) value_));
    }
    if (valueCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(
            6, (long)((java.lang.Long) value_));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.NumericType)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.NumericType other = (com.anduril.entitymanager.v1.NumericType) obj;

    if (!getValueCase().equals(other.getValueCase())) return false;
    switch (valueCase_) {
      case 1:
        if (java.lang.Double.doubleToLongBits(getDoubleValue())
            != java.lang.Double.doubleToLongBits(
                other.getDoubleValue())) return false;
        break;
      case 2:
        if (java.lang.Float.floatToIntBits(getFloatValue())
            != java.lang.Float.floatToIntBits(
                other.getFloatValue())) return false;
        break;
      case 3:
        if (getInt32Value()
            != other.getInt32Value()) return false;
        break;
      case 4:
        if (getInt64Value()
            != other.getInt64Value()) return false;
        break;
      case 5:
        if (getUint32Value()
            != other.getUint32Value()) return false;
        break;
      case 6:
        if (getUint64Value()
            != other.getUint64Value()) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (valueCase_) {
      case 1:
        hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDoubleValue()));
        break;
      case 2:
        hash = (37 * hash) + FLOAT_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getFloatValue());
        break;
      case 3:
        hash = (37 * hash) + INT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getInt32Value();
        break;
      case 4:
        hash = (37 * hash) + INT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInt64Value());
        break;
      case 5:
        hash = (37 * hash) + UINT32_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getUint32Value();
        break;
      case 6:
        hash = (37 * hash) + UINT64_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUint64Value());
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.entitymanager.v1.NumericType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.entitymanager.v1.NumericType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.NumericType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.NumericType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The NumericType represents static numeric values. It supports all numeric primitives supported
   * by the proto3 language specification.
   * </pre>
   *
   * Protobuf type {@code anduril.entitymanager.v1.NumericType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.NumericType)
      com.anduril.entitymanager.v1.NumericTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.FilterPubProto.internal_static_anduril_entitymanager_v1_NumericType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.FilterPubProto.internal_static_anduril_entitymanager_v1_NumericType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.NumericType.class, com.anduril.entitymanager.v1.NumericType.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.NumericType.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      valueCase_ = 0;
      value_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.FilterPubProto.internal_static_anduril_entitymanager_v1_NumericType_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.NumericType getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.NumericType.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.NumericType build() {
      com.anduril.entitymanager.v1.NumericType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.NumericType buildPartial() {
      com.anduril.entitymanager.v1.NumericType result = new com.anduril.entitymanager.v1.NumericType(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.entitymanager.v1.NumericType result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.anduril.entitymanager.v1.NumericType result) {
      result.valueCase_ = valueCase_;
      result.value_ = this.value_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.NumericType) {
        return mergeFrom((com.anduril.entitymanager.v1.NumericType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.NumericType other) {
      if (other == com.anduril.entitymanager.v1.NumericType.getDefaultInstance()) return this;
      switch (other.getValueCase()) {
        case DOUBLE_VALUE: {
          setDoubleValue(other.getDoubleValue());
          break;
        }
        case FLOAT_VALUE: {
          setFloatValue(other.getFloatValue());
          break;
        }
        case INT32_VALUE: {
          setInt32Value(other.getInt32Value());
          break;
        }
        case INT64_VALUE: {
          setInt64Value(other.getInt64Value());
          break;
        }
        case UINT32_VALUE: {
          setUint32Value(other.getUint32Value());
          break;
        }
        case UINT64_VALUE: {
          setUint64Value(other.getUint64Value());
          break;
        }
        case VALUE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              value_ = input.readDouble();
              valueCase_ = 1;
              break;
            } // case 9
            case 21: {
              value_ = input.readFloat();
              valueCase_ = 2;
              break;
            } // case 21
            case 24: {
              value_ = input.readInt32();
              valueCase_ = 3;
              break;
            } // case 24
            case 32: {
              value_ = input.readInt64();
              valueCase_ = 4;
              break;
            } // case 32
            case 40: {
              value_ = input.readUInt32();
              valueCase_ = 5;
              break;
            } // case 40
            case 48: {
              value_ = input.readUInt64();
              valueCase_ = 6;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public ValueCase
        getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public Builder clearValue() {
      valueCase_ = 0;
      value_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     * <code>double double_value = 1 [json_name = "doubleValue"];</code>
     * @return Whether the doubleValue field is set.
     */
    public boolean hasDoubleValue() {
      return valueCase_ == 1;
    }
    /**
     * <code>double double_value = 1 [json_name = "doubleValue"];</code>
     * @return The doubleValue.
     */
    public double getDoubleValue() {
      if (valueCase_ == 1) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }
    /**
     * <code>double double_value = 1 [json_name = "doubleValue"];</code>
     * @param value The doubleValue to set.
     * @return This builder for chaining.
     */
    public Builder setDoubleValue(double value) {

      valueCase_ = 1;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double double_value = 1 [json_name = "doubleValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDoubleValue() {
      if (valueCase_ == 1) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>float float_value = 2 [json_name = "floatValue"];</code>
     * @return Whether the floatValue field is set.
     */
    public boolean hasFloatValue() {
      return valueCase_ == 2;
    }
    /**
     * <code>float float_value = 2 [json_name = "floatValue"];</code>
     * @return The floatValue.
     */
    public float getFloatValue() {
      if (valueCase_ == 2) {
        return (java.lang.Float) value_;
      }
      return 0F;
    }
    /**
     * <code>float float_value = 2 [json_name = "floatValue"];</code>
     * @param value The floatValue to set.
     * @return This builder for chaining.
     */
    public Builder setFloatValue(float value) {

      valueCase_ = 2;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float float_value = 2 [json_name = "floatValue"];</code>
     * @return This builder for chaining.
     */
    public Builder clearFloatValue() {
      if (valueCase_ == 2) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
     * @return Whether the int32Value field is set.
     */
    public boolean hasInt32Value() {
      return valueCase_ == 3;
    }
    /**
     * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
     * @return The int32Value.
     */
    public int getInt32Value() {
      if (valueCase_ == 3) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
     * @param value The int32Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt32Value(int value) {

      valueCase_ = 3;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 int32_value = 3 [json_name = "int32Value"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInt32Value() {
      if (valueCase_ == 3) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
     * @return Whether the int64Value field is set.
     */
    public boolean hasInt64Value() {
      return valueCase_ == 4;
    }
    /**
     * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
     * @return The int64Value.
     */
    public long getInt64Value() {
      if (valueCase_ == 4) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
     * @param value The int64Value to set.
     * @return This builder for chaining.
     */
    public Builder setInt64Value(long value) {

      valueCase_ = 4;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 int64_value = 4 [json_name = "int64Value"];</code>
     * @return This builder for chaining.
     */
    public Builder clearInt64Value() {
      if (valueCase_ == 4) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
     * @return Whether the uint32Value field is set.
     */
    public boolean hasUint32Value() {
      return valueCase_ == 5;
    }
    /**
     * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
     * @return The uint32Value.
     */
    public int getUint32Value() {
      if (valueCase_ == 5) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }
    /**
     * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
     * @param value The uint32Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint32Value(int value) {

      valueCase_ = 5;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 uint32_value = 5 [json_name = "uint32Value"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUint32Value() {
      if (valueCase_ == 5) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
     * @return Whether the uint64Value field is set.
     */
    public boolean hasUint64Value() {
      return valueCase_ == 6;
    }
    /**
     * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
     * @return The uint64Value.
     */
    public long getUint64Value() {
      if (valueCase_ == 6) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }
    /**
     * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
     * @param value The uint64Value to set.
     * @return This builder for chaining.
     */
    public Builder setUint64Value(long value) {

      valueCase_ = 6;
      value_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 uint64_value = 6 [json_name = "uint64Value"];</code>
     * @return This builder for chaining.
     */
    public Builder clearUint64Value() {
      if (valueCase_ == 6) {
        valueCase_ = 0;
        value_ = null;
        onChanged();
      }
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.NumericType)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.NumericType)
  private static final com.anduril.entitymanager.v1.NumericType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.NumericType();
  }

  public static com.anduril.entitymanager.v1.NumericType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NumericType>
      PARSER = new com.google.protobuf.AbstractParser<NumericType>() {
    @java.lang.Override
    public NumericType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NumericType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NumericType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.NumericType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


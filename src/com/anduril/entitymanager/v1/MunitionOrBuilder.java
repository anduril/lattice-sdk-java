// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/supplies.pub.proto

package com.anduril.entitymanager.v1;

public interface MunitionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.entitymanager.v1.Munition)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique munition identifier (for the DoD would be called a munition code). It may be possible munitions with the same identifier
   * but different condition codes or quantities (e.g., qty 4 in condition A but qty 2 in condition F) to be included in the
   * repeated munitions field of the supplies message.
   * </pre>
   *
   * <code>string munition_id = 1 [json_name = "munitionId"];</code>
   * @return The munitionId.
   */
  java.lang.String getMunitionId();
  /**
   * <pre>
   * unique munition identifier (for the DoD would be called a munition code). It may be possible munitions with the same identifier
   * but different condition codes or quantities (e.g., qty 4 in condition A but qty 2 in condition F) to be included in the
   * repeated munitions field of the supplies message.
   * </pre>
   *
   * <code>string munition_id = 1 [json_name = "munitionId"];</code>
   * @return The bytes for munitionId.
   */
  com.google.protobuf.ByteString
      getMunitionIdBytes();

  /**
   * <pre>
   * long form name of the munition
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * long form name of the munition
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * status of the munition (U.S. DoD Specific)
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DODConditionCode dod_condition_code = 3 [json_name = "dodConditionCode"];</code>
   * @return Whether the dodConditionCode field is set.
   */
  boolean hasDodConditionCode();
  /**
   * <pre>
   * status of the munition (U.S. DoD Specific)
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DODConditionCode dod_condition_code = 3 [json_name = "dodConditionCode"];</code>
   * @return The enum numeric value on the wire for dodConditionCode.
   */
  int getDodConditionCodeValue();
  /**
   * <pre>
   * status of the munition (U.S. DoD Specific)
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DODConditionCode dod_condition_code = 3 [json_name = "dodConditionCode"];</code>
   * @return The dodConditionCode.
   */
  com.anduril.entitymanager.v1.DODConditionCode getDodConditionCode();

  /**
   * <pre>
   * number of units
   * </pre>
   *
   * <code>uint32 quantity_units = 4 [json_name = "quantityUnits"];</code>
   * @return The quantityUnits.
   */
  int getQuantityUnits();

  /**
   * <pre>
   * munitions in a single asset may have different levels of classification
   * use case: nukes on ballistic missile submarine may be TS/SCI while torpedoes may be SECRET
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Classification data_classification = 5 [json_name = "dataClassification"];</code>
   * @return Whether the dataClassification field is set.
   */
  boolean hasDataClassification();
  /**
   * <pre>
   * munitions in a single asset may have different levels of classification
   * use case: nukes on ballistic missile submarine may be TS/SCI while torpedoes may be SECRET
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Classification data_classification = 5 [json_name = "dataClassification"];</code>
   * @return The dataClassification.
   */
  com.anduril.entitymanager.v1.Classification getDataClassification();
  /**
   * <pre>
   * munitions in a single asset may have different levels of classification
   * use case: nukes on ballistic missile submarine may be TS/SCI while torpedoes may be SECRET
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.Classification data_classification = 5 [json_name = "dataClassification"];</code>
   */
  com.anduril.entitymanager.v1.ClassificationOrBuilder getDataClassificationOrBuilder();

  /**
   * <pre>
   * source of information
   * </pre>
   *
   * <code>string data_source = 6 [json_name = "dataSource"];</code>
   * @return The dataSource.
   */
  java.lang.String getDataSource();
  /**
   * <pre>
   * source of information
   * </pre>
   *
   * <code>string data_source = 6 [json_name = "dataSource"];</code>
   * @return The bytes for dataSource.
   */
  com.google.protobuf.ByteString
      getDataSourceBytes();

  com.anduril.entitymanager.v1.Munition.ConditionCase getConditionCase();
}

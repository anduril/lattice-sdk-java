// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/types.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.entitymanager.v1;

/**
 * <pre>
 * The source (provenance) of data.
 * </pre>
 *
 * Protobuf enum {@code anduril.entitymanager.v1.Source}
 */
public enum Source
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>SOURCE_INVALID = 0;</code>
   */
  SOURCE_INVALID(0),
  /**
   * <code>SOURCE_ANDURIL = 1;</code>
   */
  SOURCE_ANDURIL(1),
  /**
   * <code>SOURCE_LINK_16 = 2;</code>
   */
  SOURCE_LINK_16(2),
  /**
   * <code>SOURCE_VMF = 3;</code>
   */
  SOURCE_VMF(3),
  /**
   * <code>SOURCE_ADSB = 4;</code>
   */
  SOURCE_ADSB(4),
  /**
   * <code>SOURCE_CURSOR_ON_TARGET = 5;</code>
   */
  SOURCE_CURSOR_ON_TARGET(5),
  /**
   * <code>SOURCE_MAXAR = 6;</code>
   */
  SOURCE_MAXAR(6),
  /**
   * <code>SOURCE_MARTAC = 7;</code>
   */
  SOURCE_MARTAC(7),
  /**
   * <code>SOURCE_SAILDRONE = 8;</code>
   */
  SOURCE_SAILDRONE(8),
  /**
   * <code>SOURCE_HE_360 = 9;</code>
   */
  SOURCE_HE_360(9),
  /**
   * <code>SOURCE_OFX = 10;</code>
   */
  SOURCE_OFX(10),
  /**
   * <code>SOURCE_BAS_T = 11;</code>
   */
  SOURCE_BAS_T(11),
  /**
   * <code>SOURCE_KINETICA = 12;</code>
   */
  SOURCE_KINETICA(12),
  /**
   * <code>SOURCE_USER = 13;</code>
   */
  SOURCE_USER(13),
  /**
   * <code>SOURCE_NCCT = 14;</code>
   */
  SOURCE_NCCT(14),
  /**
   * <code>SOURCE_AIS = 15;</code>
   */
  SOURCE_AIS(15),
  /**
   * <code>SOURCE_KLV = 16;</code>
   */
  SOURCE_KLV(16),
  /**
   * <code>SOURCE_NITF = 17;</code>
   */
  SOURCE_NITF(17),
  /**
   * <code>SOURCE_TAK = 18;</code>
   */
  SOURCE_TAK(18),
  /**
   * <code>SOURCE_SPIRE_AIS = 19;</code>
   */
  SOURCE_SPIRE_AIS(19),
  /**
   * <code>SOURCE_SEFI = 20;</code>
   */
  SOURCE_SEFI(20),
  /**
   * <code>SOURCE_ADSB_EXCHANGE = 21;</code>
   */
  SOURCE_ADSB_EXCHANGE(21),
  /**
   * <code>SOURCE_LIVE_UA_MAP = 22;</code>
   */
  SOURCE_LIVE_UA_MAP(22),
  /**
   * <code>SOURCE_CRUCIBLE = 23;</code>
   */
  SOURCE_CRUCIBLE(23),
  /**
   * <code>SOURCE_IBS = 24;</code>
   */
  SOURCE_IBS(24),
  /**
   * <code>SOURCE_ADVANA = 25;</code>
   */
  SOURCE_ADVANA(25),
  /**
   * <code>SOURCE_THRESHER = 26;</code>
   */
  SOURCE_THRESHER(26),
  /**
   * <code>SOURCE_SEATRACKS = 27;</code>
   */
  SOURCE_SEATRACKS(27),
  /**
   * <code>SOURCE_TASS = 28;</code>
   */
  SOURCE_TASS(28),
  /**
   * <code>SOURCE_SMART_SENSOR = 30;</code>
   */
  SOURCE_SMART_SENSOR(30),
  /**
   * <code>SOURCE_STRIVEWORKS = 31;</code>
   */
  SOURCE_STRIVEWORKS(31),
  /**
   * <code>SOURCE_L3H_THEIA = 32;</code>
   */
  SOURCE_L3H_THEIA(32),
  /**
   * <code>SOURCE_TALON_POWDERHORN = 33;</code>
   */
  SOURCE_TALON_POWDERHORN(33),
  /**
   * <code>SOURCE_IDT_VIRTUAL_TWIN = 34;</code>
   */
  SOURCE_IDT_VIRTUAL_TWIN(34),
  /**
   * <code>SOURCE_MISSION_AUTONOMY = 35;</code>
   */
  SOURCE_MISSION_AUTONOMY(35),
  /**
   * <code>SOURCE_GCCS = 36;</code>
   */
  SOURCE_GCCS(36),
  /**
   * <code>SOURCE_FOUNDRY = 37;</code>
   */
  SOURCE_FOUNDRY(37),
  /**
   * <code>SOURCE_MIDB = 38;</code>
   */
  SOURCE_MIDB(38),
  /**
   * <code>SOURCE_FOM = 39;</code>
   */
  SOURCE_FOM(39),
  /**
   * <code>SOURCE_GALE = 40;</code>
   */
  SOURCE_GALE(40),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      Source.class.getName());
  }
  /**
   * <code>SOURCE_INVALID = 0;</code>
   */
  public static final int SOURCE_INVALID_VALUE = 0;
  /**
   * <code>SOURCE_ANDURIL = 1;</code>
   */
  public static final int SOURCE_ANDURIL_VALUE = 1;
  /**
   * <code>SOURCE_LINK_16 = 2;</code>
   */
  public static final int SOURCE_LINK_16_VALUE = 2;
  /**
   * <code>SOURCE_VMF = 3;</code>
   */
  public static final int SOURCE_VMF_VALUE = 3;
  /**
   * <code>SOURCE_ADSB = 4;</code>
   */
  public static final int SOURCE_ADSB_VALUE = 4;
  /**
   * <code>SOURCE_CURSOR_ON_TARGET = 5;</code>
   */
  public static final int SOURCE_CURSOR_ON_TARGET_VALUE = 5;
  /**
   * <code>SOURCE_MAXAR = 6;</code>
   */
  public static final int SOURCE_MAXAR_VALUE = 6;
  /**
   * <code>SOURCE_MARTAC = 7;</code>
   */
  public static final int SOURCE_MARTAC_VALUE = 7;
  /**
   * <code>SOURCE_SAILDRONE = 8;</code>
   */
  public static final int SOURCE_SAILDRONE_VALUE = 8;
  /**
   * <code>SOURCE_HE_360 = 9;</code>
   */
  public static final int SOURCE_HE_360_VALUE = 9;
  /**
   * <code>SOURCE_OFX = 10;</code>
   */
  public static final int SOURCE_OFX_VALUE = 10;
  /**
   * <code>SOURCE_BAS_T = 11;</code>
   */
  public static final int SOURCE_BAS_T_VALUE = 11;
  /**
   * <code>SOURCE_KINETICA = 12;</code>
   */
  public static final int SOURCE_KINETICA_VALUE = 12;
  /**
   * <code>SOURCE_USER = 13;</code>
   */
  public static final int SOURCE_USER_VALUE = 13;
  /**
   * <code>SOURCE_NCCT = 14;</code>
   */
  public static final int SOURCE_NCCT_VALUE = 14;
  /**
   * <code>SOURCE_AIS = 15;</code>
   */
  public static final int SOURCE_AIS_VALUE = 15;
  /**
   * <code>SOURCE_KLV = 16;</code>
   */
  public static final int SOURCE_KLV_VALUE = 16;
  /**
   * <code>SOURCE_NITF = 17;</code>
   */
  public static final int SOURCE_NITF_VALUE = 17;
  /**
   * <code>SOURCE_TAK = 18;</code>
   */
  public static final int SOURCE_TAK_VALUE = 18;
  /**
   * <code>SOURCE_SPIRE_AIS = 19;</code>
   */
  public static final int SOURCE_SPIRE_AIS_VALUE = 19;
  /**
   * <code>SOURCE_SEFI = 20;</code>
   */
  public static final int SOURCE_SEFI_VALUE = 20;
  /**
   * <code>SOURCE_ADSB_EXCHANGE = 21;</code>
   */
  public static final int SOURCE_ADSB_EXCHANGE_VALUE = 21;
  /**
   * <code>SOURCE_LIVE_UA_MAP = 22;</code>
   */
  public static final int SOURCE_LIVE_UA_MAP_VALUE = 22;
  /**
   * <code>SOURCE_CRUCIBLE = 23;</code>
   */
  public static final int SOURCE_CRUCIBLE_VALUE = 23;
  /**
   * <code>SOURCE_IBS = 24;</code>
   */
  public static final int SOURCE_IBS_VALUE = 24;
  /**
   * <code>SOURCE_ADVANA = 25;</code>
   */
  public static final int SOURCE_ADVANA_VALUE = 25;
  /**
   * <code>SOURCE_THRESHER = 26;</code>
   */
  public static final int SOURCE_THRESHER_VALUE = 26;
  /**
   * <code>SOURCE_SEATRACKS = 27;</code>
   */
  public static final int SOURCE_SEATRACKS_VALUE = 27;
  /**
   * <code>SOURCE_TASS = 28;</code>
   */
  public static final int SOURCE_TASS_VALUE = 28;
  /**
   * <code>SOURCE_SMART_SENSOR = 30;</code>
   */
  public static final int SOURCE_SMART_SENSOR_VALUE = 30;
  /**
   * <code>SOURCE_STRIVEWORKS = 31;</code>
   */
  public static final int SOURCE_STRIVEWORKS_VALUE = 31;
  /**
   * <code>SOURCE_L3H_THEIA = 32;</code>
   */
  public static final int SOURCE_L3H_THEIA_VALUE = 32;
  /**
   * <code>SOURCE_TALON_POWDERHORN = 33;</code>
   */
  public static final int SOURCE_TALON_POWDERHORN_VALUE = 33;
  /**
   * <code>SOURCE_IDT_VIRTUAL_TWIN = 34;</code>
   */
  public static final int SOURCE_IDT_VIRTUAL_TWIN_VALUE = 34;
  /**
   * <code>SOURCE_MISSION_AUTONOMY = 35;</code>
   */
  public static final int SOURCE_MISSION_AUTONOMY_VALUE = 35;
  /**
   * <code>SOURCE_GCCS = 36;</code>
   */
  public static final int SOURCE_GCCS_VALUE = 36;
  /**
   * <code>SOURCE_FOUNDRY = 37;</code>
   */
  public static final int SOURCE_FOUNDRY_VALUE = 37;
  /**
   * <code>SOURCE_MIDB = 38;</code>
   */
  public static final int SOURCE_MIDB_VALUE = 38;
  /**
   * <code>SOURCE_FOM = 39;</code>
   */
  public static final int SOURCE_FOM_VALUE = 39;
  /**
   * <code>SOURCE_GALE = 40;</code>
   */
  public static final int SOURCE_GALE_VALUE = 40;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Source valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Source forNumber(int value) {
    switch (value) {
      case 0: return SOURCE_INVALID;
      case 1: return SOURCE_ANDURIL;
      case 2: return SOURCE_LINK_16;
      case 3: return SOURCE_VMF;
      case 4: return SOURCE_ADSB;
      case 5: return SOURCE_CURSOR_ON_TARGET;
      case 6: return SOURCE_MAXAR;
      case 7: return SOURCE_MARTAC;
      case 8: return SOURCE_SAILDRONE;
      case 9: return SOURCE_HE_360;
      case 10: return SOURCE_OFX;
      case 11: return SOURCE_BAS_T;
      case 12: return SOURCE_KINETICA;
      case 13: return SOURCE_USER;
      case 14: return SOURCE_NCCT;
      case 15: return SOURCE_AIS;
      case 16: return SOURCE_KLV;
      case 17: return SOURCE_NITF;
      case 18: return SOURCE_TAK;
      case 19: return SOURCE_SPIRE_AIS;
      case 20: return SOURCE_SEFI;
      case 21: return SOURCE_ADSB_EXCHANGE;
      case 22: return SOURCE_LIVE_UA_MAP;
      case 23: return SOURCE_CRUCIBLE;
      case 24: return SOURCE_IBS;
      case 25: return SOURCE_ADVANA;
      case 26: return SOURCE_THRESHER;
      case 27: return SOURCE_SEATRACKS;
      case 28: return SOURCE_TASS;
      case 30: return SOURCE_SMART_SENSOR;
      case 31: return SOURCE_STRIVEWORKS;
      case 32: return SOURCE_L3H_THEIA;
      case 33: return SOURCE_TALON_POWDERHORN;
      case 34: return SOURCE_IDT_VIRTUAL_TWIN;
      case 35: return SOURCE_MISSION_AUTONOMY;
      case 36: return SOURCE_GCCS;
      case 37: return SOURCE_FOUNDRY;
      case 38: return SOURCE_MIDB;
      case 39: return SOURCE_FOM;
      case 40: return SOURCE_GALE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Source>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Source> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Source>() {
          public Source findValueByNumber(int number) {
            return Source.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.TypesPubProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final Source[] VALUES = values();

  public static Source valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Source(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:anduril.entitymanager.v1.Source)
}


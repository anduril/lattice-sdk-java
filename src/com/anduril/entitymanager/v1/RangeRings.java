// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/entity.pub.proto

package com.anduril.entitymanager.v1;

/**
 * <pre>
 * Range rings allow visual assessment of map distance at varying zoom levels.
 * </pre>
 *
 * Protobuf type {@code anduril.entitymanager.v1.RangeRings}
 */
public final class RangeRings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.RangeRings)
    RangeRingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RangeRings.newBuilder() to construct.
  private RangeRings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RangeRings() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RangeRings();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_RangeRings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_RangeRings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.RangeRings.class, com.anduril.entitymanager.v1.RangeRings.Builder.class);
  }

  public static final int MIN_DISTANCE_M_FIELD_NUMBER = 1;
  private com.google.protobuf.DoubleValue minDistanceM_;
  /**
   * <pre>
   * The minimum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
   * @return Whether the minDistanceM field is set.
   */
  @java.lang.Override
  public boolean hasMinDistanceM() {
    return minDistanceM_ != null;
  }
  /**
   * <pre>
   * The minimum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
   * @return The minDistanceM.
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValue getMinDistanceM() {
    return minDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : minDistanceM_;
  }
  /**
   * <pre>
   * The minimum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValueOrBuilder getMinDistanceMOrBuilder() {
    return minDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : minDistanceM_;
  }

  public static final int MAX_DISTANCE_M_FIELD_NUMBER = 2;
  private com.google.protobuf.DoubleValue maxDistanceM_;
  /**
   * <pre>
   * The maximum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
   * @return Whether the maxDistanceM field is set.
   */
  @java.lang.Override
  public boolean hasMaxDistanceM() {
    return maxDistanceM_ != null;
  }
  /**
   * <pre>
   * The maximum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
   * @return The maxDistanceM.
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValue getMaxDistanceM() {
    return maxDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : maxDistanceM_;
  }
  /**
   * <pre>
   * The maximum range ring distance, specified in meters.
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValueOrBuilder getMaxDistanceMOrBuilder() {
    return maxDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : maxDistanceM_;
  }

  public static final int RING_COUNT_FIELD_NUMBER = 3;
  private int ringCount_ = 0;
  /**
   * <pre>
   * The count of range rings.
   * </pre>
   *
   * <code>uint32 ring_count = 3 [json_name = "ringCount"];</code>
   * @return The ringCount.
   */
  @java.lang.Override
  public int getRingCount() {
    return ringCount_;
  }

  public static final int RING_LINE_COLOR_FIELD_NUMBER = 4;
  private com.anduril.type.Color ringLineColor_;
  /**
   * <pre>
   * The color of range rings, specified in hex string.
   * </pre>
   *
   * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
   * @return Whether the ringLineColor field is set.
   */
  @java.lang.Override
  public boolean hasRingLineColor() {
    return ringLineColor_ != null;
  }
  /**
   * <pre>
   * The color of range rings, specified in hex string.
   * </pre>
   *
   * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
   * @return The ringLineColor.
   */
  @java.lang.Override
  public com.anduril.type.Color getRingLineColor() {
    return ringLineColor_ == null ? com.anduril.type.Color.getDefaultInstance() : ringLineColor_;
  }
  /**
   * <pre>
   * The color of range rings, specified in hex string.
   * </pre>
   *
   * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
   */
  @java.lang.Override
  public com.anduril.type.ColorOrBuilder getRingLineColorOrBuilder() {
    return ringLineColor_ == null ? com.anduril.type.Color.getDefaultInstance() : ringLineColor_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (minDistanceM_ != null) {
      output.writeMessage(1, getMinDistanceM());
    }
    if (maxDistanceM_ != null) {
      output.writeMessage(2, getMaxDistanceM());
    }
    if (ringCount_ != 0) {
      output.writeUInt32(3, ringCount_);
    }
    if (ringLineColor_ != null) {
      output.writeMessage(4, getRingLineColor());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (minDistanceM_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMinDistanceM());
    }
    if (maxDistanceM_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMaxDistanceM());
    }
    if (ringCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, ringCount_);
    }
    if (ringLineColor_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRingLineColor());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.RangeRings)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.RangeRings other = (com.anduril.entitymanager.v1.RangeRings) obj;

    if (hasMinDistanceM() != other.hasMinDistanceM()) return false;
    if (hasMinDistanceM()) {
      if (!getMinDistanceM()
          .equals(other.getMinDistanceM())) return false;
    }
    if (hasMaxDistanceM() != other.hasMaxDistanceM()) return false;
    if (hasMaxDistanceM()) {
      if (!getMaxDistanceM()
          .equals(other.getMaxDistanceM())) return false;
    }
    if (getRingCount()
        != other.getRingCount()) return false;
    if (hasRingLineColor() != other.hasRingLineColor()) return false;
    if (hasRingLineColor()) {
      if (!getRingLineColor()
          .equals(other.getRingLineColor())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMinDistanceM()) {
      hash = (37 * hash) + MIN_DISTANCE_M_FIELD_NUMBER;
      hash = (53 * hash) + getMinDistanceM().hashCode();
    }
    if (hasMaxDistanceM()) {
      hash = (37 * hash) + MAX_DISTANCE_M_FIELD_NUMBER;
      hash = (53 * hash) + getMaxDistanceM().hashCode();
    }
    hash = (37 * hash) + RING_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getRingCount();
    if (hasRingLineColor()) {
      hash = (37 * hash) + RING_LINE_COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getRingLineColor().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.RangeRings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.RangeRings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Range rings allow visual assessment of map distance at varying zoom levels.
   * </pre>
   *
   * Protobuf type {@code anduril.entitymanager.v1.RangeRings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.RangeRings)
      com.anduril.entitymanager.v1.RangeRingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_RangeRings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_RangeRings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.RangeRings.class, com.anduril.entitymanager.v1.RangeRings.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.RangeRings.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      minDistanceM_ = null;
      if (minDistanceMBuilder_ != null) {
        minDistanceMBuilder_.dispose();
        minDistanceMBuilder_ = null;
      }
      maxDistanceM_ = null;
      if (maxDistanceMBuilder_ != null) {
        maxDistanceMBuilder_.dispose();
        maxDistanceMBuilder_ = null;
      }
      ringCount_ = 0;
      ringLineColor_ = null;
      if (ringLineColorBuilder_ != null) {
        ringLineColorBuilder_.dispose();
        ringLineColorBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_RangeRings_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RangeRings getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.RangeRings.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RangeRings build() {
      com.anduril.entitymanager.v1.RangeRings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RangeRings buildPartial() {
      com.anduril.entitymanager.v1.RangeRings result = new com.anduril.entitymanager.v1.RangeRings(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.entitymanager.v1.RangeRings result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.minDistanceM_ = minDistanceMBuilder_ == null
            ? minDistanceM_
            : minDistanceMBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxDistanceM_ = maxDistanceMBuilder_ == null
            ? maxDistanceM_
            : maxDistanceMBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.ringCount_ = ringCount_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.ringLineColor_ = ringLineColorBuilder_ == null
            ? ringLineColor_
            : ringLineColorBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.RangeRings) {
        return mergeFrom((com.anduril.entitymanager.v1.RangeRings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.RangeRings other) {
      if (other == com.anduril.entitymanager.v1.RangeRings.getDefaultInstance()) return this;
      if (other.hasMinDistanceM()) {
        mergeMinDistanceM(other.getMinDistanceM());
      }
      if (other.hasMaxDistanceM()) {
        mergeMaxDistanceM(other.getMaxDistanceM());
      }
      if (other.getRingCount() != 0) {
        setRingCount(other.getRingCount());
      }
      if (other.hasRingLineColor()) {
        mergeRingLineColor(other.getRingLineColor());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getMinDistanceMFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getMaxDistanceMFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              ringCount_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  getRingLineColorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.DoubleValue minDistanceM_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> minDistanceMBuilder_;
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     * @return Whether the minDistanceM field is set.
     */
    public boolean hasMinDistanceM() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     * @return The minDistanceM.
     */
    public com.google.protobuf.DoubleValue getMinDistanceM() {
      if (minDistanceMBuilder_ == null) {
        return minDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : minDistanceM_;
      } else {
        return minDistanceMBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public Builder setMinDistanceM(com.google.protobuf.DoubleValue value) {
      if (minDistanceMBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minDistanceM_ = value;
      } else {
        minDistanceMBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public Builder setMinDistanceM(
        com.google.protobuf.DoubleValue.Builder builderForValue) {
      if (minDistanceMBuilder_ == null) {
        minDistanceM_ = builderForValue.build();
      } else {
        minDistanceMBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public Builder mergeMinDistanceM(com.google.protobuf.DoubleValue value) {
      if (minDistanceMBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          minDistanceM_ != null &&
          minDistanceM_ != com.google.protobuf.DoubleValue.getDefaultInstance()) {
          getMinDistanceMBuilder().mergeFrom(value);
        } else {
          minDistanceM_ = value;
        }
      } else {
        minDistanceMBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public Builder clearMinDistanceM() {
      bitField0_ = (bitField0_ & ~0x00000001);
      minDistanceM_ = null;
      if (minDistanceMBuilder_ != null) {
        minDistanceMBuilder_.dispose();
        minDistanceMBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public com.google.protobuf.DoubleValue.Builder getMinDistanceMBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getMinDistanceMFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getMinDistanceMOrBuilder() {
      if (minDistanceMBuilder_ != null) {
        return minDistanceMBuilder_.getMessageOrBuilder();
      } else {
        return minDistanceM_ == null ?
            com.google.protobuf.DoubleValue.getDefaultInstance() : minDistanceM_;
      }
    }
    /**
     * <pre>
     * The minimum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue min_distance_m = 1 [json_name = "minDistanceM"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
        getMinDistanceMFieldBuilder() {
      if (minDistanceMBuilder_ == null) {
        minDistanceMBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                getMinDistanceM(),
                getParentForChildren(),
                isClean());
        minDistanceM_ = null;
      }
      return minDistanceMBuilder_;
    }

    private com.google.protobuf.DoubleValue maxDistanceM_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> maxDistanceMBuilder_;
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     * @return Whether the maxDistanceM field is set.
     */
    public boolean hasMaxDistanceM() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     * @return The maxDistanceM.
     */
    public com.google.protobuf.DoubleValue getMaxDistanceM() {
      if (maxDistanceMBuilder_ == null) {
        return maxDistanceM_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : maxDistanceM_;
      } else {
        return maxDistanceMBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public Builder setMaxDistanceM(com.google.protobuf.DoubleValue value) {
      if (maxDistanceMBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxDistanceM_ = value;
      } else {
        maxDistanceMBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public Builder setMaxDistanceM(
        com.google.protobuf.DoubleValue.Builder builderForValue) {
      if (maxDistanceMBuilder_ == null) {
        maxDistanceM_ = builderForValue.build();
      } else {
        maxDistanceMBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public Builder mergeMaxDistanceM(com.google.protobuf.DoubleValue value) {
      if (maxDistanceMBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          maxDistanceM_ != null &&
          maxDistanceM_ != com.google.protobuf.DoubleValue.getDefaultInstance()) {
          getMaxDistanceMBuilder().mergeFrom(value);
        } else {
          maxDistanceM_ = value;
        }
      } else {
        maxDistanceMBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public Builder clearMaxDistanceM() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxDistanceM_ = null;
      if (maxDistanceMBuilder_ != null) {
        maxDistanceMBuilder_.dispose();
        maxDistanceMBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public com.google.protobuf.DoubleValue.Builder getMaxDistanceMBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getMaxDistanceMFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getMaxDistanceMOrBuilder() {
      if (maxDistanceMBuilder_ != null) {
        return maxDistanceMBuilder_.getMessageOrBuilder();
      } else {
        return maxDistanceM_ == null ?
            com.google.protobuf.DoubleValue.getDefaultInstance() : maxDistanceM_;
      }
    }
    /**
     * <pre>
     * The maximum range ring distance, specified in meters.
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue max_distance_m = 2 [json_name = "maxDistanceM"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
        getMaxDistanceMFieldBuilder() {
      if (maxDistanceMBuilder_ == null) {
        maxDistanceMBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                getMaxDistanceM(),
                getParentForChildren(),
                isClean());
        maxDistanceM_ = null;
      }
      return maxDistanceMBuilder_;
    }

    private int ringCount_ ;
    /**
     * <pre>
     * The count of range rings.
     * </pre>
     *
     * <code>uint32 ring_count = 3 [json_name = "ringCount"];</code>
     * @return The ringCount.
     */
    @java.lang.Override
    public int getRingCount() {
      return ringCount_;
    }
    /**
     * <pre>
     * The count of range rings.
     * </pre>
     *
     * <code>uint32 ring_count = 3 [json_name = "ringCount"];</code>
     * @param value The ringCount to set.
     * @return This builder for chaining.
     */
    public Builder setRingCount(int value) {

      ringCount_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The count of range rings.
     * </pre>
     *
     * <code>uint32 ring_count = 3 [json_name = "ringCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRingCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      ringCount_ = 0;
      onChanged();
      return this;
    }

    private com.anduril.type.Color ringLineColor_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.Color, com.anduril.type.Color.Builder, com.anduril.type.ColorOrBuilder> ringLineColorBuilder_;
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     * @return Whether the ringLineColor field is set.
     */
    public boolean hasRingLineColor() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     * @return The ringLineColor.
     */
    public com.anduril.type.Color getRingLineColor() {
      if (ringLineColorBuilder_ == null) {
        return ringLineColor_ == null ? com.anduril.type.Color.getDefaultInstance() : ringLineColor_;
      } else {
        return ringLineColorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public Builder setRingLineColor(com.anduril.type.Color value) {
      if (ringLineColorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ringLineColor_ = value;
      } else {
        ringLineColorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public Builder setRingLineColor(
        com.anduril.type.Color.Builder builderForValue) {
      if (ringLineColorBuilder_ == null) {
        ringLineColor_ = builderForValue.build();
      } else {
        ringLineColorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public Builder mergeRingLineColor(com.anduril.type.Color value) {
      if (ringLineColorBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          ringLineColor_ != null &&
          ringLineColor_ != com.anduril.type.Color.getDefaultInstance()) {
          getRingLineColorBuilder().mergeFrom(value);
        } else {
          ringLineColor_ = value;
        }
      } else {
        ringLineColorBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public Builder clearRingLineColor() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ringLineColor_ = null;
      if (ringLineColorBuilder_ != null) {
        ringLineColorBuilder_.dispose();
        ringLineColorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public com.anduril.type.Color.Builder getRingLineColorBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getRingLineColorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    public com.anduril.type.ColorOrBuilder getRingLineColorOrBuilder() {
      if (ringLineColorBuilder_ != null) {
        return ringLineColorBuilder_.getMessageOrBuilder();
      } else {
        return ringLineColor_ == null ?
            com.anduril.type.Color.getDefaultInstance() : ringLineColor_;
      }
    }
    /**
     * <pre>
     * The color of range rings, specified in hex string.
     * </pre>
     *
     * <code>.anduril.type.Color ring_line_color = 4 [json_name = "ringLineColor"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.Color, com.anduril.type.Color.Builder, com.anduril.type.ColorOrBuilder> 
        getRingLineColorFieldBuilder() {
      if (ringLineColorBuilder_ == null) {
        ringLineColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.type.Color, com.anduril.type.Color.Builder, com.anduril.type.ColorOrBuilder>(
                getRingLineColor(),
                getParentForChildren(),
                isClean());
        ringLineColor_ = null;
      }
      return ringLineColorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.RangeRings)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.RangeRings)
  private static final com.anduril.entitymanager.v1.RangeRings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.RangeRings();
  }

  public static com.anduril.entitymanager.v1.RangeRings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RangeRings>
      PARSER = new com.google.protobuf.AbstractParser<RangeRings>() {
    @java.lang.Override
    public RangeRings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RangeRings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RangeRings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.RangeRings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/sensors.pub.proto

// Protobuf Java Version: 3.25.3
package com.anduril.entitymanager.v1;

/**
 * <pre>
 * Represents RF configurations supported on this sensor.
 * </pre>
 *
 * Protobuf type {@code anduril.entitymanager.v1.RFConfiguration}
 */
public final class RFConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.RFConfiguration)
    RFConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RFConfiguration.newBuilder() to construct.
  private RFConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RFConfiguration() {
    frequencyRange_ = java.util.Collections.emptyList();
    bandwidthRange_ = java.util.Collections.emptyList();
    frequencyRangeHz_ = java.util.Collections.emptyList();
    bandwidthRangeHz_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RFConfiguration();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.SensorsPubProto.internal_static_anduril_entitymanager_v1_RFConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.SensorsPubProto.internal_static_anduril_entitymanager_v1_RFConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.RFConfiguration.class, com.anduril.entitymanager.v1.RFConfiguration.Builder.class);
  }

  public static final int FREQUENCY_RANGE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.FloatRange> frequencyRange_;
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange> getFrequencyRangeList() {
    return frequencyRange_;
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
      getFrequencyRangeOrBuilderList() {
    return frequencyRange_;
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getFrequencyRangeCount() {
    return frequencyRange_.size();
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange getFrequencyRange(int index) {
    return frequencyRange_.get(index);
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRangeOrBuilder getFrequencyRangeOrBuilder(
      int index) {
    return frequencyRange_.get(index);
  }

  public static final int BANDWIDTH_RANGE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.FloatRange> bandwidthRange_;
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange> getBandwidthRangeList() {
    return bandwidthRange_;
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<? extends com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
      getBandwidthRangeOrBuilderList() {
    return bandwidthRange_;
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public int getBandwidthRangeCount() {
    return bandwidthRange_.size();
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange getBandwidthRange(int index) {
    return bandwidthRange_.get(index);
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRangeOrBuilder getBandwidthRangeOrBuilder(
      int index) {
    return bandwidthRange_.get(index);
  }

  public static final int FREQUENCY_RANGE_HZ_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.FrequencyRange> frequencyRangeHz_;
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
   */
  @java.lang.Override
  public java.util.List<com.anduril.entitymanager.v1.FrequencyRange> getFrequencyRangeHzList() {
    return frequencyRangeHz_;
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.anduril.entitymanager.v1.FrequencyRangeOrBuilder> 
      getFrequencyRangeHzOrBuilderList() {
    return frequencyRangeHz_;
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
   */
  @java.lang.Override
  public int getFrequencyRangeHzCount() {
    return frequencyRangeHz_.size();
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.FrequencyRange getFrequencyRangeHz(int index) {
    return frequencyRangeHz_.get(index);
  }
  /**
   * <pre>
   * Frequency ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.FrequencyRangeOrBuilder getFrequencyRangeHzOrBuilder(
      int index) {
    return frequencyRangeHz_.get(index);
  }

  public static final int BANDWIDTH_RANGE_HZ_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.BandwidthRange> bandwidthRangeHz_;
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
   */
  @java.lang.Override
  public java.util.List<com.anduril.entitymanager.v1.BandwidthRange> getBandwidthRangeHzList() {
    return bandwidthRangeHz_;
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.anduril.entitymanager.v1.BandwidthRangeOrBuilder> 
      getBandwidthRangeHzOrBuilderList() {
    return bandwidthRangeHz_;
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
   */
  @java.lang.Override
  public int getBandwidthRangeHzCount() {
    return bandwidthRangeHz_.size();
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.BandwidthRange getBandwidthRangeHz(int index) {
    return bandwidthRangeHz_.get(index);
  }
  /**
   * <pre>
   * Bandwidth ranges that are available for this sensor.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.BandwidthRangeOrBuilder getBandwidthRangeHzOrBuilder(
      int index) {
    return bandwidthRangeHz_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < frequencyRange_.size(); i++) {
      output.writeMessage(1, frequencyRange_.get(i));
    }
    for (int i = 0; i < bandwidthRange_.size(); i++) {
      output.writeMessage(2, bandwidthRange_.get(i));
    }
    for (int i = 0; i < frequencyRangeHz_.size(); i++) {
      output.writeMessage(3, frequencyRangeHz_.get(i));
    }
    for (int i = 0; i < bandwidthRangeHz_.size(); i++) {
      output.writeMessage(4, bandwidthRangeHz_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < frequencyRange_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, frequencyRange_.get(i));
    }
    for (int i = 0; i < bandwidthRange_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, bandwidthRange_.get(i));
    }
    for (int i = 0; i < frequencyRangeHz_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, frequencyRangeHz_.get(i));
    }
    for (int i = 0; i < bandwidthRangeHz_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, bandwidthRangeHz_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.RFConfiguration)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.RFConfiguration other = (com.anduril.entitymanager.v1.RFConfiguration) obj;

    if (!getFrequencyRangeList()
        .equals(other.getFrequencyRangeList())) return false;
    if (!getBandwidthRangeList()
        .equals(other.getBandwidthRangeList())) return false;
    if (!getFrequencyRangeHzList()
        .equals(other.getFrequencyRangeHzList())) return false;
    if (!getBandwidthRangeHzList()
        .equals(other.getBandwidthRangeHzList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFrequencyRangeCount() > 0) {
      hash = (37 * hash) + FREQUENCY_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getFrequencyRangeList().hashCode();
    }
    if (getBandwidthRangeCount() > 0) {
      hash = (37 * hash) + BANDWIDTH_RANGE_FIELD_NUMBER;
      hash = (53 * hash) + getBandwidthRangeList().hashCode();
    }
    if (getFrequencyRangeHzCount() > 0) {
      hash = (37 * hash) + FREQUENCY_RANGE_HZ_FIELD_NUMBER;
      hash = (53 * hash) + getFrequencyRangeHzList().hashCode();
    }
    if (getBandwidthRangeHzCount() > 0) {
      hash = (37 * hash) + BANDWIDTH_RANGE_HZ_FIELD_NUMBER;
      hash = (53 * hash) + getBandwidthRangeHzList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.entitymanager.v1.RFConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.entitymanager.v1.RFConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.RFConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.RFConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents RF configurations supported on this sensor.
   * </pre>
   *
   * Protobuf type {@code anduril.entitymanager.v1.RFConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.RFConfiguration)
      com.anduril.entitymanager.v1.RFConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.SensorsPubProto.internal_static_anduril_entitymanager_v1_RFConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.SensorsPubProto.internal_static_anduril_entitymanager_v1_RFConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.RFConfiguration.class, com.anduril.entitymanager.v1.RFConfiguration.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.RFConfiguration.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (frequencyRangeBuilder_ == null) {
        frequencyRange_ = java.util.Collections.emptyList();
      } else {
        frequencyRange_ = null;
        frequencyRangeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (bandwidthRangeBuilder_ == null) {
        bandwidthRange_ = java.util.Collections.emptyList();
      } else {
        bandwidthRange_ = null;
        bandwidthRangeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (frequencyRangeHzBuilder_ == null) {
        frequencyRangeHz_ = java.util.Collections.emptyList();
      } else {
        frequencyRangeHz_ = null;
        frequencyRangeHzBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (bandwidthRangeHzBuilder_ == null) {
        bandwidthRangeHz_ = java.util.Collections.emptyList();
      } else {
        bandwidthRangeHz_ = null;
        bandwidthRangeHzBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.SensorsPubProto.internal_static_anduril_entitymanager_v1_RFConfiguration_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RFConfiguration getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.RFConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RFConfiguration build() {
      com.anduril.entitymanager.v1.RFConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.RFConfiguration buildPartial() {
      com.anduril.entitymanager.v1.RFConfiguration result = new com.anduril.entitymanager.v1.RFConfiguration(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.anduril.entitymanager.v1.RFConfiguration result) {
      if (frequencyRangeBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          frequencyRange_ = java.util.Collections.unmodifiableList(frequencyRange_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.frequencyRange_ = frequencyRange_;
      } else {
        result.frequencyRange_ = frequencyRangeBuilder_.build();
      }
      if (bandwidthRangeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          bandwidthRange_ = java.util.Collections.unmodifiableList(bandwidthRange_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.bandwidthRange_ = bandwidthRange_;
      } else {
        result.bandwidthRange_ = bandwidthRangeBuilder_.build();
      }
      if (frequencyRangeHzBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          frequencyRangeHz_ = java.util.Collections.unmodifiableList(frequencyRangeHz_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.frequencyRangeHz_ = frequencyRangeHz_;
      } else {
        result.frequencyRangeHz_ = frequencyRangeHzBuilder_.build();
      }
      if (bandwidthRangeHzBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          bandwidthRangeHz_ = java.util.Collections.unmodifiableList(bandwidthRangeHz_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.bandwidthRangeHz_ = bandwidthRangeHz_;
      } else {
        result.bandwidthRangeHz_ = bandwidthRangeHzBuilder_.build();
      }
    }

    private void buildPartial0(com.anduril.entitymanager.v1.RFConfiguration result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.RFConfiguration) {
        return mergeFrom((com.anduril.entitymanager.v1.RFConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.RFConfiguration other) {
      if (other == com.anduril.entitymanager.v1.RFConfiguration.getDefaultInstance()) return this;
      if (frequencyRangeBuilder_ == null) {
        if (!other.frequencyRange_.isEmpty()) {
          if (frequencyRange_.isEmpty()) {
            frequencyRange_ = other.frequencyRange_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFrequencyRangeIsMutable();
            frequencyRange_.addAll(other.frequencyRange_);
          }
          onChanged();
        }
      } else {
        if (!other.frequencyRange_.isEmpty()) {
          if (frequencyRangeBuilder_.isEmpty()) {
            frequencyRangeBuilder_.dispose();
            frequencyRangeBuilder_ = null;
            frequencyRange_ = other.frequencyRange_;
            bitField0_ = (bitField0_ & ~0x00000001);
            frequencyRangeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFrequencyRangeFieldBuilder() : null;
          } else {
            frequencyRangeBuilder_.addAllMessages(other.frequencyRange_);
          }
        }
      }
      if (bandwidthRangeBuilder_ == null) {
        if (!other.bandwidthRange_.isEmpty()) {
          if (bandwidthRange_.isEmpty()) {
            bandwidthRange_ = other.bandwidthRange_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBandwidthRangeIsMutable();
            bandwidthRange_.addAll(other.bandwidthRange_);
          }
          onChanged();
        }
      } else {
        if (!other.bandwidthRange_.isEmpty()) {
          if (bandwidthRangeBuilder_.isEmpty()) {
            bandwidthRangeBuilder_.dispose();
            bandwidthRangeBuilder_ = null;
            bandwidthRange_ = other.bandwidthRange_;
            bitField0_ = (bitField0_ & ~0x00000002);
            bandwidthRangeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBandwidthRangeFieldBuilder() : null;
          } else {
            bandwidthRangeBuilder_.addAllMessages(other.bandwidthRange_);
          }
        }
      }
      if (frequencyRangeHzBuilder_ == null) {
        if (!other.frequencyRangeHz_.isEmpty()) {
          if (frequencyRangeHz_.isEmpty()) {
            frequencyRangeHz_ = other.frequencyRangeHz_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureFrequencyRangeHzIsMutable();
            frequencyRangeHz_.addAll(other.frequencyRangeHz_);
          }
          onChanged();
        }
      } else {
        if (!other.frequencyRangeHz_.isEmpty()) {
          if (frequencyRangeHzBuilder_.isEmpty()) {
            frequencyRangeHzBuilder_.dispose();
            frequencyRangeHzBuilder_ = null;
            frequencyRangeHz_ = other.frequencyRangeHz_;
            bitField0_ = (bitField0_ & ~0x00000004);
            frequencyRangeHzBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFrequencyRangeHzFieldBuilder() : null;
          } else {
            frequencyRangeHzBuilder_.addAllMessages(other.frequencyRangeHz_);
          }
        }
      }
      if (bandwidthRangeHzBuilder_ == null) {
        if (!other.bandwidthRangeHz_.isEmpty()) {
          if (bandwidthRangeHz_.isEmpty()) {
            bandwidthRangeHz_ = other.bandwidthRangeHz_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBandwidthRangeHzIsMutable();
            bandwidthRangeHz_.addAll(other.bandwidthRangeHz_);
          }
          onChanged();
        }
      } else {
        if (!other.bandwidthRangeHz_.isEmpty()) {
          if (bandwidthRangeHzBuilder_.isEmpty()) {
            bandwidthRangeHzBuilder_.dispose();
            bandwidthRangeHzBuilder_ = null;
            bandwidthRangeHz_ = other.bandwidthRangeHz_;
            bitField0_ = (bitField0_ & ~0x00000008);
            bandwidthRangeHzBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBandwidthRangeHzFieldBuilder() : null;
          } else {
            bandwidthRangeHzBuilder_.addAllMessages(other.bandwidthRangeHz_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.anduril.entitymanager.v1.FloatRange m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.FloatRange.parser(),
                      extensionRegistry);
              if (frequencyRangeBuilder_ == null) {
                ensureFrequencyRangeIsMutable();
                frequencyRange_.add(m);
              } else {
                frequencyRangeBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              com.anduril.entitymanager.v1.FloatRange m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.FloatRange.parser(),
                      extensionRegistry);
              if (bandwidthRangeBuilder_ == null) {
                ensureBandwidthRangeIsMutable();
                bandwidthRange_.add(m);
              } else {
                bandwidthRangeBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              com.anduril.entitymanager.v1.FrequencyRange m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.FrequencyRange.parser(),
                      extensionRegistry);
              if (frequencyRangeHzBuilder_ == null) {
                ensureFrequencyRangeHzIsMutable();
                frequencyRangeHz_.add(m);
              } else {
                frequencyRangeHzBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              com.anduril.entitymanager.v1.BandwidthRange m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.BandwidthRange.parser(),
                      extensionRegistry);
              if (bandwidthRangeHzBuilder_ == null) {
                ensureBandwidthRangeHzIsMutable();
                bandwidthRangeHz_.add(m);
              } else {
                bandwidthRangeHzBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.anduril.entitymanager.v1.FloatRange> frequencyRange_ =
      java.util.Collections.emptyList();
    private void ensureFrequencyRangeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        frequencyRange_ = new java.util.ArrayList<com.anduril.entitymanager.v1.FloatRange>(frequencyRange_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder> frequencyRangeBuilder_;

    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange> getFrequencyRangeList() {
      if (frequencyRangeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(frequencyRange_);
      } else {
        return frequencyRangeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public int getFrequencyRangeCount() {
      if (frequencyRangeBuilder_ == null) {
        return frequencyRange_.size();
      } else {
        return frequencyRangeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange getFrequencyRange(int index) {
      if (frequencyRangeBuilder_ == null) {
        return frequencyRange_.get(index);
      } else {
        return frequencyRangeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setFrequencyRange(
        int index, com.anduril.entitymanager.v1.FloatRange value) {
      if (frequencyRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeIsMutable();
        frequencyRange_.set(index, value);
        onChanged();
      } else {
        frequencyRangeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setFrequencyRange(
        int index, com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (frequencyRangeBuilder_ == null) {
        ensureFrequencyRangeIsMutable();
        frequencyRange_.set(index, builderForValue.build());
        onChanged();
      } else {
        frequencyRangeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addFrequencyRange(com.anduril.entitymanager.v1.FloatRange value) {
      if (frequencyRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeIsMutable();
        frequencyRange_.add(value);
        onChanged();
      } else {
        frequencyRangeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addFrequencyRange(
        int index, com.anduril.entitymanager.v1.FloatRange value) {
      if (frequencyRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeIsMutable();
        frequencyRange_.add(index, value);
        onChanged();
      } else {
        frequencyRangeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addFrequencyRange(
        com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (frequencyRangeBuilder_ == null) {
        ensureFrequencyRangeIsMutable();
        frequencyRange_.add(builderForValue.build());
        onChanged();
      } else {
        frequencyRangeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addFrequencyRange(
        int index, com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (frequencyRangeBuilder_ == null) {
        ensureFrequencyRangeIsMutable();
        frequencyRange_.add(index, builderForValue.build());
        onChanged();
      } else {
        frequencyRangeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllFrequencyRange(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.FloatRange> values) {
      if (frequencyRangeBuilder_ == null) {
        ensureFrequencyRangeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frequencyRange_);
        onChanged();
      } else {
        frequencyRangeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearFrequencyRange() {
      if (frequencyRangeBuilder_ == null) {
        frequencyRange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        frequencyRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeFrequencyRange(int index) {
      if (frequencyRangeBuilder_ == null) {
        ensureFrequencyRangeIsMutable();
        frequencyRange_.remove(index);
        onChanged();
      } else {
        frequencyRangeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder getFrequencyRangeBuilder(
        int index) {
      return getFrequencyRangeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRangeOrBuilder getFrequencyRangeOrBuilder(
        int index) {
      if (frequencyRangeBuilder_ == null) {
        return frequencyRange_.get(index);  } else {
        return frequencyRangeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
         getFrequencyRangeOrBuilderList() {
      if (frequencyRangeBuilder_ != null) {
        return frequencyRangeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(frequencyRange_);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder addFrequencyRangeBuilder() {
      return getFrequencyRangeFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.FloatRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder addFrequencyRangeBuilder(
        int index) {
      return getFrequencyRangeFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.FloatRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange frequency_range = 1 [json_name = "frequencyRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange.Builder> 
         getFrequencyRangeBuilderList() {
      return getFrequencyRangeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
        getFrequencyRangeFieldBuilder() {
      if (frequencyRangeBuilder_ == null) {
        frequencyRangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder>(
                frequencyRange_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        frequencyRange_ = null;
      }
      return frequencyRangeBuilder_;
    }

    private java.util.List<com.anduril.entitymanager.v1.FloatRange> bandwidthRange_ =
      java.util.Collections.emptyList();
    private void ensureBandwidthRangeIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        bandwidthRange_ = new java.util.ArrayList<com.anduril.entitymanager.v1.FloatRange>(bandwidthRange_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder> bandwidthRangeBuilder_;

    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange> getBandwidthRangeList() {
      if (bandwidthRangeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bandwidthRange_);
      } else {
        return bandwidthRangeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public int getBandwidthRangeCount() {
      if (bandwidthRangeBuilder_ == null) {
        return bandwidthRange_.size();
      } else {
        return bandwidthRangeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange getBandwidthRange(int index) {
      if (bandwidthRangeBuilder_ == null) {
        return bandwidthRange_.get(index);
      } else {
        return bandwidthRangeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setBandwidthRange(
        int index, com.anduril.entitymanager.v1.FloatRange value) {
      if (bandwidthRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.set(index, value);
        onChanged();
      } else {
        bandwidthRangeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setBandwidthRange(
        int index, com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (bandwidthRangeBuilder_ == null) {
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.set(index, builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addBandwidthRange(com.anduril.entitymanager.v1.FloatRange value) {
      if (bandwidthRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.add(value);
        onChanged();
      } else {
        bandwidthRangeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addBandwidthRange(
        int index, com.anduril.entitymanager.v1.FloatRange value) {
      if (bandwidthRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.add(index, value);
        onChanged();
      } else {
        bandwidthRangeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addBandwidthRange(
        com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (bandwidthRangeBuilder_ == null) {
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.add(builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addBandwidthRange(
        int index, com.anduril.entitymanager.v1.FloatRange.Builder builderForValue) {
      if (bandwidthRangeBuilder_ == null) {
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.add(index, builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder addAllBandwidthRange(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.FloatRange> values) {
      if (bandwidthRangeBuilder_ == null) {
        ensureBandwidthRangeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bandwidthRange_);
        onChanged();
      } else {
        bandwidthRangeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearBandwidthRange() {
      if (bandwidthRangeBuilder_ == null) {
        bandwidthRange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        bandwidthRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder removeBandwidthRange(int index) {
      if (bandwidthRangeBuilder_ == null) {
        ensureBandwidthRangeIsMutable();
        bandwidthRange_.remove(index);
        onChanged();
      } else {
        bandwidthRangeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder getBandwidthRangeBuilder(
        int index) {
      return getBandwidthRangeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRangeOrBuilder getBandwidthRangeOrBuilder(
        int index) {
      if (bandwidthRangeBuilder_ == null) {
        return bandwidthRange_.get(index);  } else {
        return bandwidthRangeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<? extends com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
         getBandwidthRangeOrBuilderList() {
      if (bandwidthRangeBuilder_ != null) {
        return bandwidthRangeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bandwidthRange_);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder addBandwidthRangeBuilder() {
      return getBandwidthRangeFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.FloatRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.anduril.entitymanager.v1.FloatRange.Builder addBandwidthRangeBuilder(
        int index) {
      return getBandwidthRangeFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.FloatRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FloatRange bandwidth_range = 2 [json_name = "bandwidthRange", deprecated = true];</code>
     */
    @java.lang.Deprecated public java.util.List<com.anduril.entitymanager.v1.FloatRange.Builder> 
         getBandwidthRangeBuilderList() {
      return getBandwidthRangeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder> 
        getBandwidthRangeFieldBuilder() {
      if (bandwidthRangeBuilder_ == null) {
        bandwidthRangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.anduril.entitymanager.v1.FloatRange, com.anduril.entitymanager.v1.FloatRange.Builder, com.anduril.entitymanager.v1.FloatRangeOrBuilder>(
                bandwidthRange_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        bandwidthRange_ = null;
      }
      return bandwidthRangeBuilder_;
    }

    private java.util.List<com.anduril.entitymanager.v1.FrequencyRange> frequencyRangeHz_ =
      java.util.Collections.emptyList();
    private void ensureFrequencyRangeHzIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        frequencyRangeHz_ = new java.util.ArrayList<com.anduril.entitymanager.v1.FrequencyRange>(frequencyRangeHz_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FrequencyRange, com.anduril.entitymanager.v1.FrequencyRange.Builder, com.anduril.entitymanager.v1.FrequencyRangeOrBuilder> frequencyRangeHzBuilder_;

    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.FrequencyRange> getFrequencyRangeHzList() {
      if (frequencyRangeHzBuilder_ == null) {
        return java.util.Collections.unmodifiableList(frequencyRangeHz_);
      } else {
        return frequencyRangeHzBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public int getFrequencyRangeHzCount() {
      if (frequencyRangeHzBuilder_ == null) {
        return frequencyRangeHz_.size();
      } else {
        return frequencyRangeHzBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.FrequencyRange getFrequencyRangeHz(int index) {
      if (frequencyRangeHzBuilder_ == null) {
        return frequencyRangeHz_.get(index);
      } else {
        return frequencyRangeHzBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder setFrequencyRangeHz(
        int index, com.anduril.entitymanager.v1.FrequencyRange value) {
      if (frequencyRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.set(index, value);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder setFrequencyRangeHz(
        int index, com.anduril.entitymanager.v1.FrequencyRange.Builder builderForValue) {
      if (frequencyRangeHzBuilder_ == null) {
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.set(index, builderForValue.build());
        onChanged();
      } else {
        frequencyRangeHzBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder addFrequencyRangeHz(com.anduril.entitymanager.v1.FrequencyRange value) {
      if (frequencyRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.add(value);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder addFrequencyRangeHz(
        int index, com.anduril.entitymanager.v1.FrequencyRange value) {
      if (frequencyRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.add(index, value);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder addFrequencyRangeHz(
        com.anduril.entitymanager.v1.FrequencyRange.Builder builderForValue) {
      if (frequencyRangeHzBuilder_ == null) {
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.add(builderForValue.build());
        onChanged();
      } else {
        frequencyRangeHzBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder addFrequencyRangeHz(
        int index, com.anduril.entitymanager.v1.FrequencyRange.Builder builderForValue) {
      if (frequencyRangeHzBuilder_ == null) {
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.add(index, builderForValue.build());
        onChanged();
      } else {
        frequencyRangeHzBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder addAllFrequencyRangeHz(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.FrequencyRange> values) {
      if (frequencyRangeHzBuilder_ == null) {
        ensureFrequencyRangeHzIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frequencyRangeHz_);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder clearFrequencyRangeHz() {
      if (frequencyRangeHzBuilder_ == null) {
        frequencyRangeHz_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public Builder removeFrequencyRangeHz(int index) {
      if (frequencyRangeHzBuilder_ == null) {
        ensureFrequencyRangeHzIsMutable();
        frequencyRangeHz_.remove(index);
        onChanged();
      } else {
        frequencyRangeHzBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.FrequencyRange.Builder getFrequencyRangeHzBuilder(
        int index) {
      return getFrequencyRangeHzFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.FrequencyRangeOrBuilder getFrequencyRangeHzOrBuilder(
        int index) {
      if (frequencyRangeHzBuilder_ == null) {
        return frequencyRangeHz_.get(index);  } else {
        return frequencyRangeHzBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public java.util.List<? extends com.anduril.entitymanager.v1.FrequencyRangeOrBuilder> 
         getFrequencyRangeHzOrBuilderList() {
      if (frequencyRangeHzBuilder_ != null) {
        return frequencyRangeHzBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(frequencyRangeHz_);
      }
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.FrequencyRange.Builder addFrequencyRangeHzBuilder() {
      return getFrequencyRangeHzFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.FrequencyRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.FrequencyRange.Builder addFrequencyRangeHzBuilder(
        int index) {
      return getFrequencyRangeHzFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.FrequencyRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Frequency ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.FrequencyRange frequency_range_hz = 3 [json_name = "frequencyRangeHz"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.FrequencyRange.Builder> 
         getFrequencyRangeHzBuilderList() {
      return getFrequencyRangeHzFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.FrequencyRange, com.anduril.entitymanager.v1.FrequencyRange.Builder, com.anduril.entitymanager.v1.FrequencyRangeOrBuilder> 
        getFrequencyRangeHzFieldBuilder() {
      if (frequencyRangeHzBuilder_ == null) {
        frequencyRangeHzBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.anduril.entitymanager.v1.FrequencyRange, com.anduril.entitymanager.v1.FrequencyRange.Builder, com.anduril.entitymanager.v1.FrequencyRangeOrBuilder>(
                frequencyRangeHz_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        frequencyRangeHz_ = null;
      }
      return frequencyRangeHzBuilder_;
    }

    private java.util.List<com.anduril.entitymanager.v1.BandwidthRange> bandwidthRangeHz_ =
      java.util.Collections.emptyList();
    private void ensureBandwidthRangeHzIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        bandwidthRangeHz_ = new java.util.ArrayList<com.anduril.entitymanager.v1.BandwidthRange>(bandwidthRangeHz_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.BandwidthRange, com.anduril.entitymanager.v1.BandwidthRange.Builder, com.anduril.entitymanager.v1.BandwidthRangeOrBuilder> bandwidthRangeHzBuilder_;

    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.BandwidthRange> getBandwidthRangeHzList() {
      if (bandwidthRangeHzBuilder_ == null) {
        return java.util.Collections.unmodifiableList(bandwidthRangeHz_);
      } else {
        return bandwidthRangeHzBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public int getBandwidthRangeHzCount() {
      if (bandwidthRangeHzBuilder_ == null) {
        return bandwidthRangeHz_.size();
      } else {
        return bandwidthRangeHzBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.BandwidthRange getBandwidthRangeHz(int index) {
      if (bandwidthRangeHzBuilder_ == null) {
        return bandwidthRangeHz_.get(index);
      } else {
        return bandwidthRangeHzBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder setBandwidthRangeHz(
        int index, com.anduril.entitymanager.v1.BandwidthRange value) {
      if (bandwidthRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.set(index, value);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder setBandwidthRangeHz(
        int index, com.anduril.entitymanager.v1.BandwidthRange.Builder builderForValue) {
      if (bandwidthRangeHzBuilder_ == null) {
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.set(index, builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder addBandwidthRangeHz(com.anduril.entitymanager.v1.BandwidthRange value) {
      if (bandwidthRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.add(value);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder addBandwidthRangeHz(
        int index, com.anduril.entitymanager.v1.BandwidthRange value) {
      if (bandwidthRangeHzBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.add(index, value);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder addBandwidthRangeHz(
        com.anduril.entitymanager.v1.BandwidthRange.Builder builderForValue) {
      if (bandwidthRangeHzBuilder_ == null) {
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.add(builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder addBandwidthRangeHz(
        int index, com.anduril.entitymanager.v1.BandwidthRange.Builder builderForValue) {
      if (bandwidthRangeHzBuilder_ == null) {
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.add(index, builderForValue.build());
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder addAllBandwidthRangeHz(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.BandwidthRange> values) {
      if (bandwidthRangeHzBuilder_ == null) {
        ensureBandwidthRangeHzIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bandwidthRangeHz_);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder clearBandwidthRangeHz() {
      if (bandwidthRangeHzBuilder_ == null) {
        bandwidthRangeHz_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public Builder removeBandwidthRangeHz(int index) {
      if (bandwidthRangeHzBuilder_ == null) {
        ensureBandwidthRangeHzIsMutable();
        bandwidthRangeHz_.remove(index);
        onChanged();
      } else {
        bandwidthRangeHzBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.BandwidthRange.Builder getBandwidthRangeHzBuilder(
        int index) {
      return getBandwidthRangeHzFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.BandwidthRangeOrBuilder getBandwidthRangeHzOrBuilder(
        int index) {
      if (bandwidthRangeHzBuilder_ == null) {
        return bandwidthRangeHz_.get(index);  } else {
        return bandwidthRangeHzBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public java.util.List<? extends com.anduril.entitymanager.v1.BandwidthRangeOrBuilder> 
         getBandwidthRangeHzOrBuilderList() {
      if (bandwidthRangeHzBuilder_ != null) {
        return bandwidthRangeHzBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(bandwidthRangeHz_);
      }
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.BandwidthRange.Builder addBandwidthRangeHzBuilder() {
      return getBandwidthRangeHzFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.BandwidthRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public com.anduril.entitymanager.v1.BandwidthRange.Builder addBandwidthRangeHzBuilder(
        int index) {
      return getBandwidthRangeHzFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.BandwidthRange.getDefaultInstance());
    }
    /**
     * <pre>
     * Bandwidth ranges that are available for this sensor.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.BandwidthRange bandwidth_range_hz = 4 [json_name = "bandwidthRangeHz"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.BandwidthRange.Builder> 
         getBandwidthRangeHzBuilderList() {
      return getBandwidthRangeHzFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.BandwidthRange, com.anduril.entitymanager.v1.BandwidthRange.Builder, com.anduril.entitymanager.v1.BandwidthRangeOrBuilder> 
        getBandwidthRangeHzFieldBuilder() {
      if (bandwidthRangeHzBuilder_ == null) {
        bandwidthRangeHzBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.anduril.entitymanager.v1.BandwidthRange, com.anduril.entitymanager.v1.BandwidthRange.Builder, com.anduril.entitymanager.v1.BandwidthRangeOrBuilder>(
                bandwidthRangeHz_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        bandwidthRangeHz_ = null;
      }
      return bandwidthRangeHzBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.RFConfiguration)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.RFConfiguration)
  private static final com.anduril.entitymanager.v1.RFConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.RFConfiguration();
  }

  public static com.anduril.entitymanager.v1.RFConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RFConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<RFConfiguration>() {
    @java.lang.Override
    public RFConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RFConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RFConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.RFConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


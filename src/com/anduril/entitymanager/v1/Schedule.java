// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/entitymanager/v1/schedule.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.entitymanager.v1;

/**
 * <pre>
 * A Schedule associated with this entity
 * </pre>
 *
 * Protobuf type {@code anduril.entitymanager.v1.Schedule}
 */
public final class Schedule extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.Schedule)
    ScheduleOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      Schedule.class.getName());
  }
  // Use Schedule.newBuilder() to construct.
  private Schedule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Schedule() {
    windows_ = java.util.Collections.emptyList();
    scheduleId_ = "";
    scheduleType_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.SchedulePubProto.internal_static_anduril_entitymanager_v1_Schedule_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.SchedulePubProto.internal_static_anduril_entitymanager_v1_Schedule_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.Schedule.class, com.anduril.entitymanager.v1.Schedule.Builder.class);
  }

  public static final int WINDOWS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.CronWindow> windows_;
  /**
   * <pre>
   * expression that represents this schedule's "ON" state
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
   */
  @java.lang.Override
  public java.util.List<com.anduril.entitymanager.v1.CronWindow> getWindowsList() {
    return windows_;
  }
  /**
   * <pre>
   * expression that represents this schedule's "ON" state
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.anduril.entitymanager.v1.CronWindowOrBuilder> 
      getWindowsOrBuilderList() {
    return windows_;
  }
  /**
   * <pre>
   * expression that represents this schedule's "ON" state
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
   */
  @java.lang.Override
  public int getWindowsCount() {
    return windows_.size();
  }
  /**
   * <pre>
   * expression that represents this schedule's "ON" state
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.CronWindow getWindows(int index) {
    return windows_.get(index);
  }
  /**
   * <pre>
   * expression that represents this schedule's "ON" state
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.CronWindowOrBuilder getWindowsOrBuilder(
      int index) {
    return windows_.get(index);
  }

  public static final int SCHEDULE_ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object scheduleId_ = "";
  /**
   * <pre>
   * A unique identifier for this schedule.
   * </pre>
   *
   * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
   * @return The scheduleId.
   */
  @java.lang.Override
  public java.lang.String getScheduleId() {
    java.lang.Object ref = scheduleId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      scheduleId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A unique identifier for this schedule.
   * </pre>
   *
   * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
   * @return The bytes for scheduleId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getScheduleIdBytes() {
    java.lang.Object ref = scheduleId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      scheduleId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEDULE_TYPE_FIELD_NUMBER = 3;
  private int scheduleType_ = 0;
  /**
   * <pre>
   * The schedule type
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
   * @return The enum numeric value on the wire for scheduleType.
   */
  @java.lang.Override public int getScheduleTypeValue() {
    return scheduleType_;
  }
  /**
   * <pre>
   * The schedule type
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
   * @return The scheduleType.
   */
  @java.lang.Override public com.anduril.entitymanager.v1.ScheduleType getScheduleType() {
    com.anduril.entitymanager.v1.ScheduleType result = com.anduril.entitymanager.v1.ScheduleType.forNumber(scheduleType_);
    return result == null ? com.anduril.entitymanager.v1.ScheduleType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < windows_.size(); i++) {
      output.writeMessage(1, windows_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(scheduleId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, scheduleId_);
    }
    if (scheduleType_ != com.anduril.entitymanager.v1.ScheduleType.SCHEDULE_TYPE_INVALID.getNumber()) {
      output.writeEnum(3, scheduleType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < windows_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, windows_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(scheduleId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, scheduleId_);
    }
    if (scheduleType_ != com.anduril.entitymanager.v1.ScheduleType.SCHEDULE_TYPE_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, scheduleType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.Schedule)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.Schedule other = (com.anduril.entitymanager.v1.Schedule) obj;

    if (!getWindowsList()
        .equals(other.getWindowsList())) return false;
    if (!getScheduleId()
        .equals(other.getScheduleId())) return false;
    if (scheduleType_ != other.scheduleType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getWindowsCount() > 0) {
      hash = (37 * hash) + WINDOWS_FIELD_NUMBER;
      hash = (53 * hash) + getWindowsList().hashCode();
    }
    hash = (37 * hash) + SCHEDULE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getScheduleId().hashCode();
    hash = (37 * hash) + SCHEDULE_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + scheduleType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.entitymanager.v1.Schedule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.entitymanager.v1.Schedule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Schedule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.Schedule prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Schedule associated with this entity
   * </pre>
   *
   * Protobuf type {@code anduril.entitymanager.v1.Schedule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.Schedule)
      com.anduril.entitymanager.v1.ScheduleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.SchedulePubProto.internal_static_anduril_entitymanager_v1_Schedule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.SchedulePubProto.internal_static_anduril_entitymanager_v1_Schedule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.Schedule.class, com.anduril.entitymanager.v1.Schedule.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.Schedule.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (windowsBuilder_ == null) {
        windows_ = java.util.Collections.emptyList();
      } else {
        windows_ = null;
        windowsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      scheduleId_ = "";
      scheduleType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.SchedulePubProto.internal_static_anduril_entitymanager_v1_Schedule_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Schedule getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.Schedule.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Schedule build() {
      com.anduril.entitymanager.v1.Schedule result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Schedule buildPartial() {
      com.anduril.entitymanager.v1.Schedule result = new com.anduril.entitymanager.v1.Schedule(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.anduril.entitymanager.v1.Schedule result) {
      if (windowsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          windows_ = java.util.Collections.unmodifiableList(windows_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.windows_ = windows_;
      } else {
        result.windows_ = windowsBuilder_.build();
      }
    }

    private void buildPartial0(com.anduril.entitymanager.v1.Schedule result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.scheduleId_ = scheduleId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.scheduleType_ = scheduleType_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.Schedule) {
        return mergeFrom((com.anduril.entitymanager.v1.Schedule)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.Schedule other) {
      if (other == com.anduril.entitymanager.v1.Schedule.getDefaultInstance()) return this;
      if (windowsBuilder_ == null) {
        if (!other.windows_.isEmpty()) {
          if (windows_.isEmpty()) {
            windows_ = other.windows_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureWindowsIsMutable();
            windows_.addAll(other.windows_);
          }
          onChanged();
        }
      } else {
        if (!other.windows_.isEmpty()) {
          if (windowsBuilder_.isEmpty()) {
            windowsBuilder_.dispose();
            windowsBuilder_ = null;
            windows_ = other.windows_;
            bitField0_ = (bitField0_ & ~0x00000001);
            windowsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getWindowsFieldBuilder() : null;
          } else {
            windowsBuilder_.addAllMessages(other.windows_);
          }
        }
      }
      if (!other.getScheduleId().isEmpty()) {
        scheduleId_ = other.scheduleId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.scheduleType_ != 0) {
        setScheduleTypeValue(other.getScheduleTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.anduril.entitymanager.v1.CronWindow m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.CronWindow.parser(),
                      extensionRegistry);
              if (windowsBuilder_ == null) {
                ensureWindowsIsMutable();
                windows_.add(m);
              } else {
                windowsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              scheduleId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              scheduleType_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.anduril.entitymanager.v1.CronWindow> windows_ =
      java.util.Collections.emptyList();
    private void ensureWindowsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        windows_ = new java.util.ArrayList<com.anduril.entitymanager.v1.CronWindow>(windows_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.anduril.entitymanager.v1.CronWindow, com.anduril.entitymanager.v1.CronWindow.Builder, com.anduril.entitymanager.v1.CronWindowOrBuilder> windowsBuilder_;

    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.CronWindow> getWindowsList() {
      if (windowsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(windows_);
      } else {
        return windowsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public int getWindowsCount() {
      if (windowsBuilder_ == null) {
        return windows_.size();
      } else {
        return windowsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public com.anduril.entitymanager.v1.CronWindow getWindows(int index) {
      if (windowsBuilder_ == null) {
        return windows_.get(index);
      } else {
        return windowsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder setWindows(
        int index, com.anduril.entitymanager.v1.CronWindow value) {
      if (windowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowsIsMutable();
        windows_.set(index, value);
        onChanged();
      } else {
        windowsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder setWindows(
        int index, com.anduril.entitymanager.v1.CronWindow.Builder builderForValue) {
      if (windowsBuilder_ == null) {
        ensureWindowsIsMutable();
        windows_.set(index, builderForValue.build());
        onChanged();
      } else {
        windowsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder addWindows(com.anduril.entitymanager.v1.CronWindow value) {
      if (windowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowsIsMutable();
        windows_.add(value);
        onChanged();
      } else {
        windowsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder addWindows(
        int index, com.anduril.entitymanager.v1.CronWindow value) {
      if (windowsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureWindowsIsMutable();
        windows_.add(index, value);
        onChanged();
      } else {
        windowsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder addWindows(
        com.anduril.entitymanager.v1.CronWindow.Builder builderForValue) {
      if (windowsBuilder_ == null) {
        ensureWindowsIsMutable();
        windows_.add(builderForValue.build());
        onChanged();
      } else {
        windowsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder addWindows(
        int index, com.anduril.entitymanager.v1.CronWindow.Builder builderForValue) {
      if (windowsBuilder_ == null) {
        ensureWindowsIsMutable();
        windows_.add(index, builderForValue.build());
        onChanged();
      } else {
        windowsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder addAllWindows(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.CronWindow> values) {
      if (windowsBuilder_ == null) {
        ensureWindowsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, windows_);
        onChanged();
      } else {
        windowsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder clearWindows() {
      if (windowsBuilder_ == null) {
        windows_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        windowsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public Builder removeWindows(int index) {
      if (windowsBuilder_ == null) {
        ensureWindowsIsMutable();
        windows_.remove(index);
        onChanged();
      } else {
        windowsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public com.anduril.entitymanager.v1.CronWindow.Builder getWindowsBuilder(
        int index) {
      return getWindowsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public com.anduril.entitymanager.v1.CronWindowOrBuilder getWindowsOrBuilder(
        int index) {
      if (windowsBuilder_ == null) {
        return windows_.get(index);  } else {
        return windowsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public java.util.List<? extends com.anduril.entitymanager.v1.CronWindowOrBuilder> 
         getWindowsOrBuilderList() {
      if (windowsBuilder_ != null) {
        return windowsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(windows_);
      }
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public com.anduril.entitymanager.v1.CronWindow.Builder addWindowsBuilder() {
      return getWindowsFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.CronWindow.getDefaultInstance());
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public com.anduril.entitymanager.v1.CronWindow.Builder addWindowsBuilder(
        int index) {
      return getWindowsFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.CronWindow.getDefaultInstance());
    }
    /**
     * <pre>
     * expression that represents this schedule's "ON" state
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.CronWindow windows = 1 [json_name = "windows"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.CronWindow.Builder> 
         getWindowsBuilderList() {
      return getWindowsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.anduril.entitymanager.v1.CronWindow, com.anduril.entitymanager.v1.CronWindow.Builder, com.anduril.entitymanager.v1.CronWindowOrBuilder> 
        getWindowsFieldBuilder() {
      if (windowsBuilder_ == null) {
        windowsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.anduril.entitymanager.v1.CronWindow, com.anduril.entitymanager.v1.CronWindow.Builder, com.anduril.entitymanager.v1.CronWindowOrBuilder>(
                windows_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        windows_ = null;
      }
      return windowsBuilder_;
    }

    private java.lang.Object scheduleId_ = "";
    /**
     * <pre>
     * A unique identifier for this schedule.
     * </pre>
     *
     * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
     * @return The scheduleId.
     */
    public java.lang.String getScheduleId() {
      java.lang.Object ref = scheduleId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scheduleId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for this schedule.
     * </pre>
     *
     * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
     * @return The bytes for scheduleId.
     */
    public com.google.protobuf.ByteString
        getScheduleIdBytes() {
      java.lang.Object ref = scheduleId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scheduleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for this schedule.
     * </pre>
     *
     * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
     * @param value The scheduleId to set.
     * @return This builder for chaining.
     */
    public Builder setScheduleId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      scheduleId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for this schedule.
     * </pre>
     *
     * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearScheduleId() {
      scheduleId_ = getDefaultInstance().getScheduleId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for this schedule.
     * </pre>
     *
     * <code>string schedule_id = 2 [json_name = "scheduleId"];</code>
     * @param value The bytes for scheduleId to set.
     * @return This builder for chaining.
     */
    public Builder setScheduleIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      scheduleId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int scheduleType_ = 0;
    /**
     * <pre>
     * The schedule type
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
     * @return The enum numeric value on the wire for scheduleType.
     */
    @java.lang.Override public int getScheduleTypeValue() {
      return scheduleType_;
    }
    /**
     * <pre>
     * The schedule type
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
     * @param value The enum numeric value on the wire for scheduleType to set.
     * @return This builder for chaining.
     */
    public Builder setScheduleTypeValue(int value) {
      scheduleType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule type
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
     * @return The scheduleType.
     */
    @java.lang.Override
    public com.anduril.entitymanager.v1.ScheduleType getScheduleType() {
      com.anduril.entitymanager.v1.ScheduleType result = com.anduril.entitymanager.v1.ScheduleType.forNumber(scheduleType_);
      return result == null ? com.anduril.entitymanager.v1.ScheduleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The schedule type
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
     * @param value The scheduleType to set.
     * @return This builder for chaining.
     */
    public Builder setScheduleType(com.anduril.entitymanager.v1.ScheduleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      scheduleType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The schedule type
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.ScheduleType schedule_type = 3 [json_name = "scheduleType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearScheduleType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      scheduleType_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.Schedule)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Schedule)
  private static final com.anduril.entitymanager.v1.Schedule DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.Schedule();
  }

  public static com.anduril.entitymanager.v1.Schedule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Schedule>
      PARSER = new com.google.protobuf.AbstractParser<Schedule>() {
    @java.lang.Override
    public Schedule parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Schedule> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Schedule> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.Schedule getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


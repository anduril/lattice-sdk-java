// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/entity.pub.proto

package com.anduril.entitymanager.v1;

/**
 * Protobuf type {@code anduril.entitymanager.v1.Decorrelation}
 */
public final class Decorrelation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.Decorrelation)
    DecorrelationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Decorrelation.newBuilder() to construct.
  private Decorrelation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Decorrelation() {
    decorrelatedEntities_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Decorrelation();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_Decorrelation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_Decorrelation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.Decorrelation.class, com.anduril.entitymanager.v1.Decorrelation.Builder.class);
  }

  public static final int ALL_FIELD_NUMBER = 1;
  private com.anduril.entitymanager.v1.DecorrelatedAll all_;
  /**
   * <pre>
   * This will be specified if this entity was decorrelated against all other entities.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
   * @return Whether the all field is set.
   */
  @java.lang.Override
  public boolean hasAll() {
    return all_ != null;
  }
  /**
   * <pre>
   * This will be specified if this entity was decorrelated against all other entities.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
   * @return The all.
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.DecorrelatedAll getAll() {
    return all_ == null ? com.anduril.entitymanager.v1.DecorrelatedAll.getDefaultInstance() : all_;
  }
  /**
   * <pre>
   * This will be specified if this entity was decorrelated against all other entities.
   * </pre>
   *
   * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.DecorrelatedAllOrBuilder getAllOrBuilder() {
    return all_ == null ? com.anduril.entitymanager.v1.DecorrelatedAll.getDefaultInstance() : all_;
  }

  public static final int DECORRELATED_ENTITIES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<com.anduril.entitymanager.v1.DecorrelatedSingle> decorrelatedEntities_;
  /**
   * <pre>
   * A list of decorrelated entities that have been explicitly decorrelated against this entity
   * which prevents lower precedence correlations from overriding it in the future.
   * For example, if an operator in the UI decorrelated tracks A and B, any automated
   * correlators would be unable to correlate them since manual decorrelations have
   * higher precedence than automatic ones. Precedence is determined by both correlation
   * type and replication mode.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
   */
  @java.lang.Override
  public java.util.List<com.anduril.entitymanager.v1.DecorrelatedSingle> getDecorrelatedEntitiesList() {
    return decorrelatedEntities_;
  }
  /**
   * <pre>
   * A list of decorrelated entities that have been explicitly decorrelated against this entity
   * which prevents lower precedence correlations from overriding it in the future.
   * For example, if an operator in the UI decorrelated tracks A and B, any automated
   * correlators would be unable to correlate them since manual decorrelations have
   * higher precedence than automatic ones. Precedence is determined by both correlation
   * type and replication mode.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder> 
      getDecorrelatedEntitiesOrBuilderList() {
    return decorrelatedEntities_;
  }
  /**
   * <pre>
   * A list of decorrelated entities that have been explicitly decorrelated against this entity
   * which prevents lower precedence correlations from overriding it in the future.
   * For example, if an operator in the UI decorrelated tracks A and B, any automated
   * correlators would be unable to correlate them since manual decorrelations have
   * higher precedence than automatic ones. Precedence is determined by both correlation
   * type and replication mode.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
   */
  @java.lang.Override
  public int getDecorrelatedEntitiesCount() {
    return decorrelatedEntities_.size();
  }
  /**
   * <pre>
   * A list of decorrelated entities that have been explicitly decorrelated against this entity
   * which prevents lower precedence correlations from overriding it in the future.
   * For example, if an operator in the UI decorrelated tracks A and B, any automated
   * correlators would be unable to correlate them since manual decorrelations have
   * higher precedence than automatic ones. Precedence is determined by both correlation
   * type and replication mode.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.DecorrelatedSingle getDecorrelatedEntities(int index) {
    return decorrelatedEntities_.get(index);
  }
  /**
   * <pre>
   * A list of decorrelated entities that have been explicitly decorrelated against this entity
   * which prevents lower precedence correlations from overriding it in the future.
   * For example, if an operator in the UI decorrelated tracks A and B, any automated
   * correlators would be unable to correlate them since manual decorrelations have
   * higher precedence than automatic ones. Precedence is determined by both correlation
   * type and replication mode.
   * </pre>
   *
   * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
   */
  @java.lang.Override
  public com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder getDecorrelatedEntitiesOrBuilder(
      int index) {
    return decorrelatedEntities_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (all_ != null) {
      output.writeMessage(1, getAll());
    }
    for (int i = 0; i < decorrelatedEntities_.size(); i++) {
      output.writeMessage(2, decorrelatedEntities_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (all_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAll());
    }
    for (int i = 0; i < decorrelatedEntities_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, decorrelatedEntities_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.Decorrelation)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.Decorrelation other = (com.anduril.entitymanager.v1.Decorrelation) obj;

    if (hasAll() != other.hasAll()) return false;
    if (hasAll()) {
      if (!getAll()
          .equals(other.getAll())) return false;
    }
    if (!getDecorrelatedEntitiesList()
        .equals(other.getDecorrelatedEntitiesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAll()) {
      hash = (37 * hash) + ALL_FIELD_NUMBER;
      hash = (53 * hash) + getAll().hashCode();
    }
    if (getDecorrelatedEntitiesCount() > 0) {
      hash = (37 * hash) + DECORRELATED_ENTITIES_FIELD_NUMBER;
      hash = (53 * hash) + getDecorrelatedEntitiesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Decorrelation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.Decorrelation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code anduril.entitymanager.v1.Decorrelation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.Decorrelation)
      com.anduril.entitymanager.v1.DecorrelationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_Decorrelation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_Decorrelation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.Decorrelation.class, com.anduril.entitymanager.v1.Decorrelation.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.Decorrelation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      all_ = null;
      if (allBuilder_ != null) {
        allBuilder_.dispose();
        allBuilder_ = null;
      }
      if (decorrelatedEntitiesBuilder_ == null) {
        decorrelatedEntities_ = java.util.Collections.emptyList();
      } else {
        decorrelatedEntities_ = null;
        decorrelatedEntitiesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.EntityPubProto.internal_static_anduril_entitymanager_v1_Decorrelation_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Decorrelation getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.Decorrelation.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Decorrelation build() {
      com.anduril.entitymanager.v1.Decorrelation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Decorrelation buildPartial() {
      com.anduril.entitymanager.v1.Decorrelation result = new com.anduril.entitymanager.v1.Decorrelation(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.anduril.entitymanager.v1.Decorrelation result) {
      if (decorrelatedEntitiesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          decorrelatedEntities_ = java.util.Collections.unmodifiableList(decorrelatedEntities_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.decorrelatedEntities_ = decorrelatedEntities_;
      } else {
        result.decorrelatedEntities_ = decorrelatedEntitiesBuilder_.build();
      }
    }

    private void buildPartial0(com.anduril.entitymanager.v1.Decorrelation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.all_ = allBuilder_ == null
            ? all_
            : allBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.Decorrelation) {
        return mergeFrom((com.anduril.entitymanager.v1.Decorrelation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.Decorrelation other) {
      if (other == com.anduril.entitymanager.v1.Decorrelation.getDefaultInstance()) return this;
      if (other.hasAll()) {
        mergeAll(other.getAll());
      }
      if (decorrelatedEntitiesBuilder_ == null) {
        if (!other.decorrelatedEntities_.isEmpty()) {
          if (decorrelatedEntities_.isEmpty()) {
            decorrelatedEntities_ = other.decorrelatedEntities_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDecorrelatedEntitiesIsMutable();
            decorrelatedEntities_.addAll(other.decorrelatedEntities_);
          }
          onChanged();
        }
      } else {
        if (!other.decorrelatedEntities_.isEmpty()) {
          if (decorrelatedEntitiesBuilder_.isEmpty()) {
            decorrelatedEntitiesBuilder_.dispose();
            decorrelatedEntitiesBuilder_ = null;
            decorrelatedEntities_ = other.decorrelatedEntities_;
            bitField0_ = (bitField0_ & ~0x00000002);
            decorrelatedEntitiesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDecorrelatedEntitiesFieldBuilder() : null;
          } else {
            decorrelatedEntitiesBuilder_.addAllMessages(other.decorrelatedEntities_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getAllFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.anduril.entitymanager.v1.DecorrelatedSingle m =
                  input.readMessage(
                      com.anduril.entitymanager.v1.DecorrelatedSingle.parser(),
                      extensionRegistry);
              if (decorrelatedEntitiesBuilder_ == null) {
                ensureDecorrelatedEntitiesIsMutable();
                decorrelatedEntities_.add(m);
              } else {
                decorrelatedEntitiesBuilder_.addMessage(m);
              }
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.anduril.entitymanager.v1.DecorrelatedAll all_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.entitymanager.v1.DecorrelatedAll, com.anduril.entitymanager.v1.DecorrelatedAll.Builder, com.anduril.entitymanager.v1.DecorrelatedAllOrBuilder> allBuilder_;
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     * @return Whether the all field is set.
     */
    public boolean hasAll() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     * @return The all.
     */
    public com.anduril.entitymanager.v1.DecorrelatedAll getAll() {
      if (allBuilder_ == null) {
        return all_ == null ? com.anduril.entitymanager.v1.DecorrelatedAll.getDefaultInstance() : all_;
      } else {
        return allBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public Builder setAll(com.anduril.entitymanager.v1.DecorrelatedAll value) {
      if (allBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        all_ = value;
      } else {
        allBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public Builder setAll(
        com.anduril.entitymanager.v1.DecorrelatedAll.Builder builderForValue) {
      if (allBuilder_ == null) {
        all_ = builderForValue.build();
      } else {
        allBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public Builder mergeAll(com.anduril.entitymanager.v1.DecorrelatedAll value) {
      if (allBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          all_ != null &&
          all_ != com.anduril.entitymanager.v1.DecorrelatedAll.getDefaultInstance()) {
          getAllBuilder().mergeFrom(value);
        } else {
          all_ = value;
        }
      } else {
        allBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public Builder clearAll() {
      bitField0_ = (bitField0_ & ~0x00000001);
      all_ = null;
      if (allBuilder_ != null) {
        allBuilder_.dispose();
        allBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedAll.Builder getAllBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getAllFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedAllOrBuilder getAllOrBuilder() {
      if (allBuilder_ != null) {
        return allBuilder_.getMessageOrBuilder();
      } else {
        return all_ == null ?
            com.anduril.entitymanager.v1.DecorrelatedAll.getDefaultInstance() : all_;
      }
    }
    /**
     * <pre>
     * This will be specified if this entity was decorrelated against all other entities.
     * </pre>
     *
     * <code>.anduril.entitymanager.v1.DecorrelatedAll all = 1 [json_name = "all"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.entitymanager.v1.DecorrelatedAll, com.anduril.entitymanager.v1.DecorrelatedAll.Builder, com.anduril.entitymanager.v1.DecorrelatedAllOrBuilder> 
        getAllFieldBuilder() {
      if (allBuilder_ == null) {
        allBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.entitymanager.v1.DecorrelatedAll, com.anduril.entitymanager.v1.DecorrelatedAll.Builder, com.anduril.entitymanager.v1.DecorrelatedAllOrBuilder>(
                getAll(),
                getParentForChildren(),
                isClean());
        all_ = null;
      }
      return allBuilder_;
    }

    private java.util.List<com.anduril.entitymanager.v1.DecorrelatedSingle> decorrelatedEntities_ =
      java.util.Collections.emptyList();
    private void ensureDecorrelatedEntitiesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        decorrelatedEntities_ = new java.util.ArrayList<com.anduril.entitymanager.v1.DecorrelatedSingle>(decorrelatedEntities_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.DecorrelatedSingle, com.anduril.entitymanager.v1.DecorrelatedSingle.Builder, com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder> decorrelatedEntitiesBuilder_;

    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.DecorrelatedSingle> getDecorrelatedEntitiesList() {
      if (decorrelatedEntitiesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(decorrelatedEntities_);
      } else {
        return decorrelatedEntitiesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public int getDecorrelatedEntitiesCount() {
      if (decorrelatedEntitiesBuilder_ == null) {
        return decorrelatedEntities_.size();
      } else {
        return decorrelatedEntitiesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedSingle getDecorrelatedEntities(int index) {
      if (decorrelatedEntitiesBuilder_ == null) {
        return decorrelatedEntities_.get(index);
      } else {
        return decorrelatedEntitiesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder setDecorrelatedEntities(
        int index, com.anduril.entitymanager.v1.DecorrelatedSingle value) {
      if (decorrelatedEntitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.set(index, value);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder setDecorrelatedEntities(
        int index, com.anduril.entitymanager.v1.DecorrelatedSingle.Builder builderForValue) {
      if (decorrelatedEntitiesBuilder_ == null) {
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.set(index, builderForValue.build());
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder addDecorrelatedEntities(com.anduril.entitymanager.v1.DecorrelatedSingle value) {
      if (decorrelatedEntitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.add(value);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder addDecorrelatedEntities(
        int index, com.anduril.entitymanager.v1.DecorrelatedSingle value) {
      if (decorrelatedEntitiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.add(index, value);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder addDecorrelatedEntities(
        com.anduril.entitymanager.v1.DecorrelatedSingle.Builder builderForValue) {
      if (decorrelatedEntitiesBuilder_ == null) {
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.add(builderForValue.build());
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder addDecorrelatedEntities(
        int index, com.anduril.entitymanager.v1.DecorrelatedSingle.Builder builderForValue) {
      if (decorrelatedEntitiesBuilder_ == null) {
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.add(index, builderForValue.build());
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder addAllDecorrelatedEntities(
        java.lang.Iterable<? extends com.anduril.entitymanager.v1.DecorrelatedSingle> values) {
      if (decorrelatedEntitiesBuilder_ == null) {
        ensureDecorrelatedEntitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, decorrelatedEntities_);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder clearDecorrelatedEntities() {
      if (decorrelatedEntitiesBuilder_ == null) {
        decorrelatedEntities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public Builder removeDecorrelatedEntities(int index) {
      if (decorrelatedEntitiesBuilder_ == null) {
        ensureDecorrelatedEntitiesIsMutable();
        decorrelatedEntities_.remove(index);
        onChanged();
      } else {
        decorrelatedEntitiesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedSingle.Builder getDecorrelatedEntitiesBuilder(
        int index) {
      return getDecorrelatedEntitiesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder getDecorrelatedEntitiesOrBuilder(
        int index) {
      if (decorrelatedEntitiesBuilder_ == null) {
        return decorrelatedEntities_.get(index);  } else {
        return decorrelatedEntitiesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public java.util.List<? extends com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder> 
         getDecorrelatedEntitiesOrBuilderList() {
      if (decorrelatedEntitiesBuilder_ != null) {
        return decorrelatedEntitiesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(decorrelatedEntities_);
      }
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedSingle.Builder addDecorrelatedEntitiesBuilder() {
      return getDecorrelatedEntitiesFieldBuilder().addBuilder(
          com.anduril.entitymanager.v1.DecorrelatedSingle.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public com.anduril.entitymanager.v1.DecorrelatedSingle.Builder addDecorrelatedEntitiesBuilder(
        int index) {
      return getDecorrelatedEntitiesFieldBuilder().addBuilder(
          index, com.anduril.entitymanager.v1.DecorrelatedSingle.getDefaultInstance());
    }
    /**
     * <pre>
     * A list of decorrelated entities that have been explicitly decorrelated against this entity
     * which prevents lower precedence correlations from overriding it in the future.
     * For example, if an operator in the UI decorrelated tracks A and B, any automated
     * correlators would be unable to correlate them since manual decorrelations have
     * higher precedence than automatic ones. Precedence is determined by both correlation
     * type and replication mode.
     * </pre>
     *
     * <code>repeated .anduril.entitymanager.v1.DecorrelatedSingle decorrelated_entities = 2 [json_name = "decorrelatedEntities"];</code>
     */
    public java.util.List<com.anduril.entitymanager.v1.DecorrelatedSingle.Builder> 
         getDecorrelatedEntitiesBuilderList() {
      return getDecorrelatedEntitiesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.anduril.entitymanager.v1.DecorrelatedSingle, com.anduril.entitymanager.v1.DecorrelatedSingle.Builder, com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder> 
        getDecorrelatedEntitiesFieldBuilder() {
      if (decorrelatedEntitiesBuilder_ == null) {
        decorrelatedEntitiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.anduril.entitymanager.v1.DecorrelatedSingle, com.anduril.entitymanager.v1.DecorrelatedSingle.Builder, com.anduril.entitymanager.v1.DecorrelatedSingleOrBuilder>(
                decorrelatedEntities_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        decorrelatedEntities_ = null;
      }
      return decorrelatedEntitiesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.Decorrelation)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Decorrelation)
  private static final com.anduril.entitymanager.v1.Decorrelation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.Decorrelation();
  }

  public static com.anduril.entitymanager.v1.Decorrelation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Decorrelation>
      PARSER = new com.google.protobuf.AbstractParser<Decorrelation>() {
    @java.lang.Override
    public Decorrelation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Decorrelation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Decorrelation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.Decorrelation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


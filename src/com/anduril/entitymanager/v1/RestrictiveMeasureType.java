// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/geoentity.pub.proto

package com.anduril.entitymanager.v1;

/**
 * Protobuf enum {@code anduril.entitymanager.v1.RestrictiveMeasureType}
 */
public enum RestrictiveMeasureType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_INVALID = 0;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_INVALID(0),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_INSIDE_AREA = 1;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_INSIDE_AREA(1),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_OUTSIDE_AREA = 2;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_OUTSIDE_AREA(2),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_ABOVE_AREA = 3;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_ABOVE_AREA(3),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA = 4;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA(4),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_NORTH_OF_LINE = 5;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_NORTH_OF_LINE(5),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_EAST_OF_LINE = 6;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_EAST_OF_LINE(6),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_SOUTH_OF_LINE = 7;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_SOUTH_OF_LINE(7),
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_WEST_OF_LINE = 8;</code>
   */
  RESTRICTIVE_MEASURE_TYPE_STAY_WEST_OF_LINE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_INVALID = 0;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_INVALID_VALUE = 0;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_INSIDE_AREA = 1;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_INSIDE_AREA_VALUE = 1;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_OUTSIDE_AREA = 2;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_OUTSIDE_AREA_VALUE = 2;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_ABOVE_AREA = 3;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_ABOVE_AREA_VALUE = 3;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA = 4;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA_VALUE = 4;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_NORTH_OF_LINE = 5;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_NORTH_OF_LINE_VALUE = 5;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_EAST_OF_LINE = 6;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_EAST_OF_LINE_VALUE = 6;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_SOUTH_OF_LINE = 7;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_SOUTH_OF_LINE_VALUE = 7;
  /**
   * <code>RESTRICTIVE_MEASURE_TYPE_STAY_WEST_OF_LINE = 8;</code>
   */
  public static final int RESTRICTIVE_MEASURE_TYPE_STAY_WEST_OF_LINE_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RestrictiveMeasureType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static RestrictiveMeasureType forNumber(int value) {
    switch (value) {
      case 0: return RESTRICTIVE_MEASURE_TYPE_INVALID;
      case 1: return RESTRICTIVE_MEASURE_TYPE_STAY_INSIDE_AREA;
      case 2: return RESTRICTIVE_MEASURE_TYPE_STAY_OUTSIDE_AREA;
      case 3: return RESTRICTIVE_MEASURE_TYPE_STAY_ABOVE_AREA;
      case 4: return RESTRICTIVE_MEASURE_TYPE_STAY_BELOW_AREA;
      case 5: return RESTRICTIVE_MEASURE_TYPE_STAY_NORTH_OF_LINE;
      case 6: return RESTRICTIVE_MEASURE_TYPE_STAY_EAST_OF_LINE;
      case 7: return RESTRICTIVE_MEASURE_TYPE_STAY_SOUTH_OF_LINE;
      case 8: return RESTRICTIVE_MEASURE_TYPE_STAY_WEST_OF_LINE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RestrictiveMeasureType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RestrictiveMeasureType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RestrictiveMeasureType>() {
          public RestrictiveMeasureType findValueByNumber(int number) {
            return RestrictiveMeasureType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.GeoentityPubProto.getDescriptor().getEnumTypes().get(6);
  }

  private static final RestrictiveMeasureType[] VALUES = values();

  public static RestrictiveMeasureType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RestrictiveMeasureType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:anduril.entitymanager.v1.RestrictiveMeasureType)
}


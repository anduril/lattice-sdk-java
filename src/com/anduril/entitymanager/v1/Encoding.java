// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/entitymanager/v1/signal.pub.proto

package com.anduril.entitymanager.v1;

/**
 * <pre>
 * A component that describes the formatting of the information in a signal
 * </pre>
 *
 * Protobuf type {@code anduril.entitymanager.v1.Encoding}
 */
public final class Encoding extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.entitymanager.v1.Encoding)
    EncodingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Encoding.newBuilder() to construct.
  private Encoding(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Encoding() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Encoding();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.entitymanager.v1.SignalPubProto.internal_static_anduril_entitymanager_v1_Encoding_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.entitymanager.v1.SignalPubProto.internal_static_anduril_entitymanager_v1_Encoding_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.entitymanager.v1.Encoding.class, com.anduril.entitymanager.v1.Encoding.Builder.class);
  }

  public static final int CHIP_HOP_RATE_NUM_SEC_FIELD_NUMBER = 1;
  private com.google.protobuf.DoubleValue chipHopRateNumSec_;
  /**
   * <pre>
   * rate at which the spreading code is changing
   * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
   * @return Whether the chipHopRateNumSec field is set.
   */
  @java.lang.Override
  public boolean hasChipHopRateNumSec() {
    return chipHopRateNumSec_ != null;
  }
  /**
   * <pre>
   * rate at which the spreading code is changing
   * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
   * @return The chipHopRateNumSec.
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValue getChipHopRateNumSec() {
    return chipHopRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : chipHopRateNumSec_;
  }
  /**
   * <pre>
   * rate at which the spreading code is changing
   * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValueOrBuilder getChipHopRateNumSecOrBuilder() {
    return chipHopRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : chipHopRateNumSec_;
  }

  public static final int HOP_DWELL_TIME_SEC_FIELD_NUMBER = 2;
  private com.google.protobuf.DoubleValue hopDwellTimeSec_;
  /**
   * <pre>
   * time a transmitter remains at a particular frequency before hopping to the next on
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
   * @return Whether the hopDwellTimeSec field is set.
   */
  @java.lang.Override
  public boolean hasHopDwellTimeSec() {
    return hopDwellTimeSec_ != null;
  }
  /**
   * <pre>
   * time a transmitter remains at a particular frequency before hopping to the next on
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
   * @return The hopDwellTimeSec.
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValue getHopDwellTimeSec() {
    return hopDwellTimeSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : hopDwellTimeSec_;
  }
  /**
   * <pre>
   * time a transmitter remains at a particular frequency before hopping to the next on
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValueOrBuilder getHopDwellTimeSecOrBuilder() {
    return hopDwellTimeSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : hopDwellTimeSec_;
  }

  public static final int BAUD_RATE_NUM_SEC_FIELD_NUMBER = 3;
  private com.google.protobuf.DoubleValue baudRateNumSec_;
  /**
   * <pre>
   * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
   * @return Whether the baudRateNumSec field is set.
   */
  @java.lang.Override
  public boolean hasBaudRateNumSec() {
    return baudRateNumSec_ != null;
  }
  /**
   * <pre>
   * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
   * @return The baudRateNumSec.
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValue getBaudRateNumSec() {
    return baudRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : baudRateNumSec_;
  }
  /**
   * <pre>
   * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.DoubleValueOrBuilder getBaudRateNumSecOrBuilder() {
    return baudRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : baudRateNumSec_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (chipHopRateNumSec_ != null) {
      output.writeMessage(1, getChipHopRateNumSec());
    }
    if (hopDwellTimeSec_ != null) {
      output.writeMessage(2, getHopDwellTimeSec());
    }
    if (baudRateNumSec_ != null) {
      output.writeMessage(3, getBaudRateNumSec());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (chipHopRateNumSec_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getChipHopRateNumSec());
    }
    if (hopDwellTimeSec_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getHopDwellTimeSec());
    }
    if (baudRateNumSec_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBaudRateNumSec());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.entitymanager.v1.Encoding)) {
      return super.equals(obj);
    }
    com.anduril.entitymanager.v1.Encoding other = (com.anduril.entitymanager.v1.Encoding) obj;

    if (hasChipHopRateNumSec() != other.hasChipHopRateNumSec()) return false;
    if (hasChipHopRateNumSec()) {
      if (!getChipHopRateNumSec()
          .equals(other.getChipHopRateNumSec())) return false;
    }
    if (hasHopDwellTimeSec() != other.hasHopDwellTimeSec()) return false;
    if (hasHopDwellTimeSec()) {
      if (!getHopDwellTimeSec()
          .equals(other.getHopDwellTimeSec())) return false;
    }
    if (hasBaudRateNumSec() != other.hasBaudRateNumSec()) return false;
    if (hasBaudRateNumSec()) {
      if (!getBaudRateNumSec()
          .equals(other.getBaudRateNumSec())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasChipHopRateNumSec()) {
      hash = (37 * hash) + CHIP_HOP_RATE_NUM_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getChipHopRateNumSec().hashCode();
    }
    if (hasHopDwellTimeSec()) {
      hash = (37 * hash) + HOP_DWELL_TIME_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getHopDwellTimeSec().hashCode();
    }
    if (hasBaudRateNumSec()) {
      hash = (37 * hash) + BAUD_RATE_NUM_SEC_FIELD_NUMBER;
      hash = (53 * hash) + getBaudRateNumSec().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Encoding parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Encoding parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.entitymanager.v1.Encoding parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.entitymanager.v1.Encoding prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A component that describes the formatting of the information in a signal
   * </pre>
   *
   * Protobuf type {@code anduril.entitymanager.v1.Encoding}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.entitymanager.v1.Encoding)
      com.anduril.entitymanager.v1.EncodingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.entitymanager.v1.SignalPubProto.internal_static_anduril_entitymanager_v1_Encoding_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.entitymanager.v1.SignalPubProto.internal_static_anduril_entitymanager_v1_Encoding_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.entitymanager.v1.Encoding.class, com.anduril.entitymanager.v1.Encoding.Builder.class);
    }

    // Construct using com.anduril.entitymanager.v1.Encoding.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      chipHopRateNumSec_ = null;
      if (chipHopRateNumSecBuilder_ != null) {
        chipHopRateNumSecBuilder_.dispose();
        chipHopRateNumSecBuilder_ = null;
      }
      hopDwellTimeSec_ = null;
      if (hopDwellTimeSecBuilder_ != null) {
        hopDwellTimeSecBuilder_.dispose();
        hopDwellTimeSecBuilder_ = null;
      }
      baudRateNumSec_ = null;
      if (baudRateNumSecBuilder_ != null) {
        baudRateNumSecBuilder_.dispose();
        baudRateNumSecBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.entitymanager.v1.SignalPubProto.internal_static_anduril_entitymanager_v1_Encoding_descriptor;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Encoding getDefaultInstanceForType() {
      return com.anduril.entitymanager.v1.Encoding.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Encoding build() {
      com.anduril.entitymanager.v1.Encoding result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.entitymanager.v1.Encoding buildPartial() {
      com.anduril.entitymanager.v1.Encoding result = new com.anduril.entitymanager.v1.Encoding(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.entitymanager.v1.Encoding result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.chipHopRateNumSec_ = chipHopRateNumSecBuilder_ == null
            ? chipHopRateNumSec_
            : chipHopRateNumSecBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.hopDwellTimeSec_ = hopDwellTimeSecBuilder_ == null
            ? hopDwellTimeSec_
            : hopDwellTimeSecBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.baudRateNumSec_ = baudRateNumSecBuilder_ == null
            ? baudRateNumSec_
            : baudRateNumSecBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.entitymanager.v1.Encoding) {
        return mergeFrom((com.anduril.entitymanager.v1.Encoding)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.entitymanager.v1.Encoding other) {
      if (other == com.anduril.entitymanager.v1.Encoding.getDefaultInstance()) return this;
      if (other.hasChipHopRateNumSec()) {
        mergeChipHopRateNumSec(other.getChipHopRateNumSec());
      }
      if (other.hasHopDwellTimeSec()) {
        mergeHopDwellTimeSec(other.getHopDwellTimeSec());
      }
      if (other.hasBaudRateNumSec()) {
        mergeBaudRateNumSec(other.getBaudRateNumSec());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getChipHopRateNumSecFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getHopDwellTimeSecFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBaudRateNumSecFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.DoubleValue chipHopRateNumSec_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> chipHopRateNumSecBuilder_;
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     * @return Whether the chipHopRateNumSec field is set.
     */
    public boolean hasChipHopRateNumSec() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     * @return The chipHopRateNumSec.
     */
    public com.google.protobuf.DoubleValue getChipHopRateNumSec() {
      if (chipHopRateNumSecBuilder_ == null) {
        return chipHopRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : chipHopRateNumSec_;
      } else {
        return chipHopRateNumSecBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public Builder setChipHopRateNumSec(com.google.protobuf.DoubleValue value) {
      if (chipHopRateNumSecBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        chipHopRateNumSec_ = value;
      } else {
        chipHopRateNumSecBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public Builder setChipHopRateNumSec(
        com.google.protobuf.DoubleValue.Builder builderForValue) {
      if (chipHopRateNumSecBuilder_ == null) {
        chipHopRateNumSec_ = builderForValue.build();
      } else {
        chipHopRateNumSecBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public Builder mergeChipHopRateNumSec(com.google.protobuf.DoubleValue value) {
      if (chipHopRateNumSecBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          chipHopRateNumSec_ != null &&
          chipHopRateNumSec_ != com.google.protobuf.DoubleValue.getDefaultInstance()) {
          getChipHopRateNumSecBuilder().mergeFrom(value);
        } else {
          chipHopRateNumSec_ = value;
        }
      } else {
        chipHopRateNumSecBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public Builder clearChipHopRateNumSec() {
      bitField0_ = (bitField0_ & ~0x00000001);
      chipHopRateNumSec_ = null;
      if (chipHopRateNumSecBuilder_ != null) {
        chipHopRateNumSecBuilder_.dispose();
        chipHopRateNumSecBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public com.google.protobuf.DoubleValue.Builder getChipHopRateNumSecBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getChipHopRateNumSecFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getChipHopRateNumSecOrBuilder() {
      if (chipHopRateNumSecBuilder_ != null) {
        return chipHopRateNumSecBuilder_.getMessageOrBuilder();
      } else {
        return chipHopRateNumSec_ == null ?
            com.google.protobuf.DoubleValue.getDefaultInstance() : chipHopRateNumSec_;
      }
    }
    /**
     * <pre>
     * rate at which the spreading code is changing
     * a chip is a pulse of a spread spectrum code. Each data bit is spread across multiple chips (smaller time slots) using a spreading code
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue chip_hop_rate_num_sec = 1 [json_name = "chipHopRateNumSec"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
        getChipHopRateNumSecFieldBuilder() {
      if (chipHopRateNumSecBuilder_ == null) {
        chipHopRateNumSecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                getChipHopRateNumSec(),
                getParentForChildren(),
                isClean());
        chipHopRateNumSec_ = null;
      }
      return chipHopRateNumSecBuilder_;
    }

    private com.google.protobuf.DoubleValue hopDwellTimeSec_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> hopDwellTimeSecBuilder_;
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     * @return Whether the hopDwellTimeSec field is set.
     */
    public boolean hasHopDwellTimeSec() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     * @return The hopDwellTimeSec.
     */
    public com.google.protobuf.DoubleValue getHopDwellTimeSec() {
      if (hopDwellTimeSecBuilder_ == null) {
        return hopDwellTimeSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : hopDwellTimeSec_;
      } else {
        return hopDwellTimeSecBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public Builder setHopDwellTimeSec(com.google.protobuf.DoubleValue value) {
      if (hopDwellTimeSecBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hopDwellTimeSec_ = value;
      } else {
        hopDwellTimeSecBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public Builder setHopDwellTimeSec(
        com.google.protobuf.DoubleValue.Builder builderForValue) {
      if (hopDwellTimeSecBuilder_ == null) {
        hopDwellTimeSec_ = builderForValue.build();
      } else {
        hopDwellTimeSecBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public Builder mergeHopDwellTimeSec(com.google.protobuf.DoubleValue value) {
      if (hopDwellTimeSecBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          hopDwellTimeSec_ != null &&
          hopDwellTimeSec_ != com.google.protobuf.DoubleValue.getDefaultInstance()) {
          getHopDwellTimeSecBuilder().mergeFrom(value);
        } else {
          hopDwellTimeSec_ = value;
        }
      } else {
        hopDwellTimeSecBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public Builder clearHopDwellTimeSec() {
      bitField0_ = (bitField0_ & ~0x00000002);
      hopDwellTimeSec_ = null;
      if (hopDwellTimeSecBuilder_ != null) {
        hopDwellTimeSecBuilder_.dispose();
        hopDwellTimeSecBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public com.google.protobuf.DoubleValue.Builder getHopDwellTimeSecBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getHopDwellTimeSecFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getHopDwellTimeSecOrBuilder() {
      if (hopDwellTimeSecBuilder_ != null) {
        return hopDwellTimeSecBuilder_.getMessageOrBuilder();
      } else {
        return hopDwellTimeSec_ == null ?
            com.google.protobuf.DoubleValue.getDefaultInstance() : hopDwellTimeSec_;
      }
    }
    /**
     * <pre>
     * time a transmitter remains at a particular frequency before hopping to the next on
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue hop_dwell_time_sec = 2 [json_name = "hopDwellTimeSec"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
        getHopDwellTimeSecFieldBuilder() {
      if (hopDwellTimeSecBuilder_ == null) {
        hopDwellTimeSecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                getHopDwellTimeSec(),
                getParentForChildren(),
                isClean());
        hopDwellTimeSec_ = null;
      }
      return hopDwellTimeSecBuilder_;
    }

    private com.google.protobuf.DoubleValue baudRateNumSec_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> baudRateNumSecBuilder_;
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     * @return Whether the baudRateNumSec field is set.
     */
    public boolean hasBaudRateNumSec() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     * @return The baudRateNumSec.
     */
    public com.google.protobuf.DoubleValue getBaudRateNumSec() {
      if (baudRateNumSecBuilder_ == null) {
        return baudRateNumSec_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : baudRateNumSec_;
      } else {
        return baudRateNumSecBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public Builder setBaudRateNumSec(com.google.protobuf.DoubleValue value) {
      if (baudRateNumSecBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baudRateNumSec_ = value;
      } else {
        baudRateNumSecBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public Builder setBaudRateNumSec(
        com.google.protobuf.DoubleValue.Builder builderForValue) {
      if (baudRateNumSecBuilder_ == null) {
        baudRateNumSec_ = builderForValue.build();
      } else {
        baudRateNumSecBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public Builder mergeBaudRateNumSec(com.google.protobuf.DoubleValue value) {
      if (baudRateNumSecBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          baudRateNumSec_ != null &&
          baudRateNumSec_ != com.google.protobuf.DoubleValue.getDefaultInstance()) {
          getBaudRateNumSecBuilder().mergeFrom(value);
        } else {
          baudRateNumSec_ = value;
        }
      } else {
        baudRateNumSecBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public Builder clearBaudRateNumSec() {
      bitField0_ = (bitField0_ & ~0x00000004);
      baudRateNumSec_ = null;
      if (baudRateNumSecBuilder_ != null) {
        baudRateNumSecBuilder_.dispose();
        baudRateNumSecBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public com.google.protobuf.DoubleValue.Builder getBaudRateNumSecBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getBaudRateNumSecFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    public com.google.protobuf.DoubleValueOrBuilder getBaudRateNumSecOrBuilder() {
      if (baudRateNumSecBuilder_ != null) {
        return baudRateNumSecBuilder_.getMessageOrBuilder();
      } else {
        return baudRateNumSec_ == null ?
            com.google.protobuf.DoubleValue.getDefaultInstance() : baudRateNumSec_;
      }
    }
    /**
     * <pre>
     * symbols per sec. A symbol is distinct from a bit where one symbol could be composed of multiple bits
     * </pre>
     *
     * <code>.google.protobuf.DoubleValue baud_rate_num_sec = 3 [json_name = "baudRateNumSec"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
        getBaudRateNumSecFieldBuilder() {
      if (baudRateNumSecBuilder_ == null) {
        baudRateNumSecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                getBaudRateNumSec(),
                getParentForChildren(),
                isClean());
        baudRateNumSec_ = null;
      }
      return baudRateNumSecBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.entitymanager.v1.Encoding)
  }

  // @@protoc_insertion_point(class_scope:anduril.entitymanager.v1.Encoding)
  private static final com.anduril.entitymanager.v1.Encoding DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.entitymanager.v1.Encoding();
  }

  public static com.anduril.entitymanager.v1.Encoding getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Encoding>
      PARSER = new com.google.protobuf.AbstractParser<Encoding>() {
    @java.lang.Override
    public Encoding parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Encoding> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Encoding> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.entitymanager.v1.Encoding getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


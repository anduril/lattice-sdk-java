// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/tasks/v2/shared/isr.pub.proto

// Protobuf Java Version: 3.25.3
package com.anduril.tasks.v2;

/**
 * <pre>
 * Common parameters for ISR Tasks.
 * </pre>
 *
 * Protobuf type {@code anduril.tasks.v2.ISRParameters}
 */
public final class ISRParameters extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.tasks.v2.ISRParameters)
    ISRParametersOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ISRParameters.newBuilder() to construct.
  private ISRParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ISRParameters() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ISRParameters();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.tasks.v2.IsrPubProto.internal_static_anduril_tasks_v2_ISRParameters_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.tasks.v2.IsrPubProto.internal_static_anduril_tasks_v2_ISRParameters_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.tasks.v2.ISRParameters.class, com.anduril.tasks.v2.ISRParameters.Builder.class);
  }

  private int bitField0_;
  public static final int SPEED_FIELD_NUMBER = 1;
  private com.google.protobuf.FloatValue speed_;
  /**
   * <pre>
   * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
   * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
   * @deprecated anduril.tasks.v2.ISRParameters.speed is deprecated.
   *     See anduril/tasks/v2/shared/isr.pub.proto;l=144
   * @return Whether the speed field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasSpeed() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
   * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
   * @deprecated anduril.tasks.v2.ISRParameters.speed is deprecated.
   *     See anduril/tasks/v2/shared/isr.pub.proto;l=144
   * @return The speed.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.FloatValue getSpeed() {
    return speed_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speed_;
  }
  /**
   * <pre>
   * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
   * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.FloatValueOrBuilder getSpeedOrBuilder() {
    return speed_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speed_;
  }

  public static final int SPEED_M_S_FIELD_NUMBER = 2;
  private com.google.protobuf.FloatValue speedMS_;
  /**
   * <pre>
   * Indicates the target speed of the asset. Units are meters per second.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
   * @return Whether the speedMS field is set.
   */
  @java.lang.Override
  public boolean hasSpeedMS() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Indicates the target speed of the asset. Units are meters per second.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
   * @return The speedMS.
   */
  @java.lang.Override
  public com.google.protobuf.FloatValue getSpeedMS() {
    return speedMS_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speedMS_;
  }
  /**
   * <pre>
   * Indicates the target speed of the asset. Units are meters per second.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.FloatValueOrBuilder getSpeedMSOrBuilder() {
    return speedMS_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speedMS_;
  }

  public static final int STANDOFF_DISTANCE_M_FIELD_NUMBER = 3;
  private com.google.protobuf.FloatValue standoffDistanceM_;
  /**
   * <pre>
   * Indicates the standoff distance from the objective. The units are in meters.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
   * @return Whether the standoffDistanceM field is set.
   */
  @java.lang.Override
  public boolean hasStandoffDistanceM() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Indicates the standoff distance from the objective. The units are in meters.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
   * @return The standoffDistanceM.
   */
  @java.lang.Override
  public com.google.protobuf.FloatValue getStandoffDistanceM() {
    return standoffDistanceM_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistanceM_;
  }
  /**
   * <pre>
   * Indicates the standoff distance from the objective. The units are in meters.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.FloatValueOrBuilder getStandoffDistanceMOrBuilder() {
    return standoffDistanceM_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistanceM_;
  }

  public static final int STANDOFF_DISTANCE_FIELD_NUMBER = 4;
  private com.google.protobuf.FloatValue standoffDistance_;
  /**
   * <pre>
   * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
   *  since we might have legacy integrations not conforming to the meters unit.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
   * @deprecated anduril.tasks.v2.ISRParameters.standoff_distance is deprecated.
   *     See anduril/tasks/v2/shared/isr.pub.proto;l=151
   * @return Whether the standoffDistance field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasStandoffDistance() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
   *  since we might have legacy integrations not conforming to the meters unit.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
   * @deprecated anduril.tasks.v2.ISRParameters.standoff_distance is deprecated.
   *     See anduril/tasks/v2/shared/isr.pub.proto;l=151
   * @return The standoffDistance.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.FloatValue getStandoffDistance() {
    return standoffDistance_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistance_;
  }
  /**
   * <pre>
   * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
   *  since we might have legacy integrations not conforming to the meters unit.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.FloatValueOrBuilder getStandoffDistanceOrBuilder() {
    return standoffDistance_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistance_;
  }

  public static final int STANDOFF_ANGLE_FIELD_NUMBER = 5;
  private com.google.protobuf.FloatValue standoffAngle_;
  /**
   * <pre>
   * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
   * In particular, the asset should approach target from this angle. Units in degrees.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
   * @return Whether the standoffAngle field is set.
   */
  @java.lang.Override
  public boolean hasStandoffAngle() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
   * In particular, the asset should approach target from this angle. Units in degrees.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
   * @return The standoffAngle.
   */
  @java.lang.Override
  public com.google.protobuf.FloatValue getStandoffAngle() {
    return standoffAngle_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffAngle_;
  }
  /**
   * <pre>
   * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
   * In particular, the asset should approach target from this angle. Units in degrees.
   * </pre>
   *
   * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.FloatValueOrBuilder getStandoffAngleOrBuilder() {
    return standoffAngle_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffAngle_;
  }

  public static final int EXPIRATION_TIME_MS_FIELD_NUMBER = 6;
  private com.google.protobuf.UInt64Value expirationTimeMs_;
  /**
   * <pre>
   * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
   * expiration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
   * @return Whether the expirationTimeMs field is set.
   */
  @java.lang.Override
  public boolean hasExpirationTimeMs() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
   * expiration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
   * @return The expirationTimeMs.
   */
  @java.lang.Override
  public com.google.protobuf.UInt64Value getExpirationTimeMs() {
    return expirationTimeMs_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : expirationTimeMs_;
  }
  /**
   * <pre>
   * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
   * expiration.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt64ValueOrBuilder getExpirationTimeMsOrBuilder() {
    return expirationTimeMs_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : expirationTimeMs_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getSpeed());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getSpeedMS());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getStandoffDistanceM());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getStandoffDistance());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getStandoffAngle());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(6, getExpirationTimeMs());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSpeed());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSpeedMS());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getStandoffDistanceM());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getStandoffDistance());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getStandoffAngle());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getExpirationTimeMs());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.tasks.v2.ISRParameters)) {
      return super.equals(obj);
    }
    com.anduril.tasks.v2.ISRParameters other = (com.anduril.tasks.v2.ISRParameters) obj;

    if (hasSpeed() != other.hasSpeed()) return false;
    if (hasSpeed()) {
      if (!getSpeed()
          .equals(other.getSpeed())) return false;
    }
    if (hasSpeedMS() != other.hasSpeedMS()) return false;
    if (hasSpeedMS()) {
      if (!getSpeedMS()
          .equals(other.getSpeedMS())) return false;
    }
    if (hasStandoffDistanceM() != other.hasStandoffDistanceM()) return false;
    if (hasStandoffDistanceM()) {
      if (!getStandoffDistanceM()
          .equals(other.getStandoffDistanceM())) return false;
    }
    if (hasStandoffDistance() != other.hasStandoffDistance()) return false;
    if (hasStandoffDistance()) {
      if (!getStandoffDistance()
          .equals(other.getStandoffDistance())) return false;
    }
    if (hasStandoffAngle() != other.hasStandoffAngle()) return false;
    if (hasStandoffAngle()) {
      if (!getStandoffAngle()
          .equals(other.getStandoffAngle())) return false;
    }
    if (hasExpirationTimeMs() != other.hasExpirationTimeMs()) return false;
    if (hasExpirationTimeMs()) {
      if (!getExpirationTimeMs()
          .equals(other.getExpirationTimeMs())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSpeed()) {
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getSpeed().hashCode();
    }
    if (hasSpeedMS()) {
      hash = (37 * hash) + SPEED_M_S_FIELD_NUMBER;
      hash = (53 * hash) + getSpeedMS().hashCode();
    }
    if (hasStandoffDistanceM()) {
      hash = (37 * hash) + STANDOFF_DISTANCE_M_FIELD_NUMBER;
      hash = (53 * hash) + getStandoffDistanceM().hashCode();
    }
    if (hasStandoffDistance()) {
      hash = (37 * hash) + STANDOFF_DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getStandoffDistance().hashCode();
    }
    if (hasStandoffAngle()) {
      hash = (37 * hash) + STANDOFF_ANGLE_FIELD_NUMBER;
      hash = (53 * hash) + getStandoffAngle().hashCode();
    }
    if (hasExpirationTimeMs()) {
      hash = (37 * hash) + EXPIRATION_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + getExpirationTimeMs().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.anduril.tasks.v2.ISRParameters parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.anduril.tasks.v2.ISRParameters parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.tasks.v2.ISRParameters parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.tasks.v2.ISRParameters prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Common parameters for ISR Tasks.
   * </pre>
   *
   * Protobuf type {@code anduril.tasks.v2.ISRParameters}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.tasks.v2.ISRParameters)
      com.anduril.tasks.v2.ISRParametersOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.tasks.v2.IsrPubProto.internal_static_anduril_tasks_v2_ISRParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.tasks.v2.IsrPubProto.internal_static_anduril_tasks_v2_ISRParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.tasks.v2.ISRParameters.class, com.anduril.tasks.v2.ISRParameters.Builder.class);
    }

    // Construct using com.anduril.tasks.v2.ISRParameters.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSpeedFieldBuilder();
        getSpeedMSFieldBuilder();
        getStandoffDistanceMFieldBuilder();
        getStandoffDistanceFieldBuilder();
        getStandoffAngleFieldBuilder();
        getExpirationTimeMsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      speed_ = null;
      if (speedBuilder_ != null) {
        speedBuilder_.dispose();
        speedBuilder_ = null;
      }
      speedMS_ = null;
      if (speedMSBuilder_ != null) {
        speedMSBuilder_.dispose();
        speedMSBuilder_ = null;
      }
      standoffDistanceM_ = null;
      if (standoffDistanceMBuilder_ != null) {
        standoffDistanceMBuilder_.dispose();
        standoffDistanceMBuilder_ = null;
      }
      standoffDistance_ = null;
      if (standoffDistanceBuilder_ != null) {
        standoffDistanceBuilder_.dispose();
        standoffDistanceBuilder_ = null;
      }
      standoffAngle_ = null;
      if (standoffAngleBuilder_ != null) {
        standoffAngleBuilder_.dispose();
        standoffAngleBuilder_ = null;
      }
      expirationTimeMs_ = null;
      if (expirationTimeMsBuilder_ != null) {
        expirationTimeMsBuilder_.dispose();
        expirationTimeMsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.tasks.v2.IsrPubProto.internal_static_anduril_tasks_v2_ISRParameters_descriptor;
    }

    @java.lang.Override
    public com.anduril.tasks.v2.ISRParameters getDefaultInstanceForType() {
      return com.anduril.tasks.v2.ISRParameters.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.tasks.v2.ISRParameters build() {
      com.anduril.tasks.v2.ISRParameters result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.tasks.v2.ISRParameters buildPartial() {
      com.anduril.tasks.v2.ISRParameters result = new com.anduril.tasks.v2.ISRParameters(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.tasks.v2.ISRParameters result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.speed_ = speedBuilder_ == null
            ? speed_
            : speedBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.speedMS_ = speedMSBuilder_ == null
            ? speedMS_
            : speedMSBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.standoffDistanceM_ = standoffDistanceMBuilder_ == null
            ? standoffDistanceM_
            : standoffDistanceMBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.standoffDistance_ = standoffDistanceBuilder_ == null
            ? standoffDistance_
            : standoffDistanceBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.standoffAngle_ = standoffAngleBuilder_ == null
            ? standoffAngle_
            : standoffAngleBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.expirationTimeMs_ = expirationTimeMsBuilder_ == null
            ? expirationTimeMs_
            : expirationTimeMsBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.tasks.v2.ISRParameters) {
        return mergeFrom((com.anduril.tasks.v2.ISRParameters)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.tasks.v2.ISRParameters other) {
      if (other == com.anduril.tasks.v2.ISRParameters.getDefaultInstance()) return this;
      if (other.hasSpeed()) {
        mergeSpeed(other.getSpeed());
      }
      if (other.hasSpeedMS()) {
        mergeSpeedMS(other.getSpeedMS());
      }
      if (other.hasStandoffDistanceM()) {
        mergeStandoffDistanceM(other.getStandoffDistanceM());
      }
      if (other.hasStandoffDistance()) {
        mergeStandoffDistance(other.getStandoffDistance());
      }
      if (other.hasStandoffAngle()) {
        mergeStandoffAngle(other.getStandoffAngle());
      }
      if (other.hasExpirationTimeMs()) {
        mergeExpirationTimeMs(other.getExpirationTimeMs());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getSpeedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getSpeedMSFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getStandoffDistanceMFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getStandoffDistanceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getStandoffAngleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getExpirationTimeMsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.FloatValue speed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> speedBuilder_;
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     * @deprecated anduril.tasks.v2.ISRParameters.speed is deprecated.
     *     See anduril/tasks/v2/shared/isr.pub.proto;l=144
     * @return Whether the speed field is set.
     */
    @java.lang.Deprecated public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     * @deprecated anduril.tasks.v2.ISRParameters.speed is deprecated.
     *     See anduril/tasks/v2/shared/isr.pub.proto;l=144
     * @return The speed.
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValue getSpeed() {
      if (speedBuilder_ == null) {
        return speed_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speed_;
      } else {
        return speedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSpeed(com.google.protobuf.FloatValue value) {
      if (speedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        speed_ = value;
      } else {
        speedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setSpeed(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (speedBuilder_ == null) {
        speed_ = builderForValue.build();
      } else {
        speedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeSpeed(com.google.protobuf.FloatValue value) {
      if (speedBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          speed_ != null &&
          speed_ != com.google.protobuf.FloatValue.getDefaultInstance()) {
          getSpeedBuilder().mergeFrom(value);
        } else {
          speed_ = value;
        }
      } else {
        speedBuilder_.mergeFrom(value);
      }
      if (speed_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearSpeed() {
      bitField0_ = (bitField0_ & ~0x00000001);
      speed_ = null;
      if (speedBuilder_ != null) {
        speedBuilder_.dispose();
        speedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValue.Builder getSpeedBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getSpeedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValueOrBuilder getSpeedOrBuilder() {
      if (speedBuilder_ != null) {
        return speedBuilder_.getMessageOrBuilder();
      } else {
        return speed_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : speed_;
      }
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. DEPRECATION NOTE: deprecated in favor
     * of speed_ms since we might have legacy integrations not conforming to the meters per second units.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed = 1 [json_name = "speed", deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getSpeedFieldBuilder() {
      if (speedBuilder_ == null) {
        speedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getSpeed(),
                getParentForChildren(),
                isClean());
        speed_ = null;
      }
      return speedBuilder_;
    }

    private com.google.protobuf.FloatValue speedMS_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> speedMSBuilder_;
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     * @return Whether the speedMS field is set.
     */
    public boolean hasSpeedMS() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     * @return The speedMS.
     */
    public com.google.protobuf.FloatValue getSpeedMS() {
      if (speedMSBuilder_ == null) {
        return speedMS_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : speedMS_;
      } else {
        return speedMSBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public Builder setSpeedMS(com.google.protobuf.FloatValue value) {
      if (speedMSBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        speedMS_ = value;
      } else {
        speedMSBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public Builder setSpeedMS(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (speedMSBuilder_ == null) {
        speedMS_ = builderForValue.build();
      } else {
        speedMSBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public Builder mergeSpeedMS(com.google.protobuf.FloatValue value) {
      if (speedMSBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          speedMS_ != null &&
          speedMS_ != com.google.protobuf.FloatValue.getDefaultInstance()) {
          getSpeedMSBuilder().mergeFrom(value);
        } else {
          speedMS_ = value;
        }
      } else {
        speedMSBuilder_.mergeFrom(value);
      }
      if (speedMS_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public Builder clearSpeedMS() {
      bitField0_ = (bitField0_ & ~0x00000002);
      speedMS_ = null;
      if (speedMSBuilder_ != null) {
        speedMSBuilder_.dispose();
        speedMSBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public com.google.protobuf.FloatValue.Builder getSpeedMSBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getSpeedMSFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getSpeedMSOrBuilder() {
      if (speedMSBuilder_ != null) {
        return speedMSBuilder_.getMessageOrBuilder();
      } else {
        return speedMS_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : speedMS_;
      }
    }
    /**
     * <pre>
     * Indicates the target speed of the asset. Units are meters per second.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue speed_m_s = 2 [json_name = "speedMS"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getSpeedMSFieldBuilder() {
      if (speedMSBuilder_ == null) {
        speedMSBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getSpeedMS(),
                getParentForChildren(),
                isClean());
        speedMS_ = null;
      }
      return speedMSBuilder_;
    }

    private com.google.protobuf.FloatValue standoffDistanceM_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> standoffDistanceMBuilder_;
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     * @return Whether the standoffDistanceM field is set.
     */
    public boolean hasStandoffDistanceM() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     * @return The standoffDistanceM.
     */
    public com.google.protobuf.FloatValue getStandoffDistanceM() {
      if (standoffDistanceMBuilder_ == null) {
        return standoffDistanceM_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistanceM_;
      } else {
        return standoffDistanceMBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public Builder setStandoffDistanceM(com.google.protobuf.FloatValue value) {
      if (standoffDistanceMBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        standoffDistanceM_ = value;
      } else {
        standoffDistanceMBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public Builder setStandoffDistanceM(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (standoffDistanceMBuilder_ == null) {
        standoffDistanceM_ = builderForValue.build();
      } else {
        standoffDistanceMBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public Builder mergeStandoffDistanceM(com.google.protobuf.FloatValue value) {
      if (standoffDistanceMBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          standoffDistanceM_ != null &&
          standoffDistanceM_ != com.google.protobuf.FloatValue.getDefaultInstance()) {
          getStandoffDistanceMBuilder().mergeFrom(value);
        } else {
          standoffDistanceM_ = value;
        }
      } else {
        standoffDistanceMBuilder_.mergeFrom(value);
      }
      if (standoffDistanceM_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public Builder clearStandoffDistanceM() {
      bitField0_ = (bitField0_ & ~0x00000004);
      standoffDistanceM_ = null;
      if (standoffDistanceMBuilder_ != null) {
        standoffDistanceMBuilder_.dispose();
        standoffDistanceMBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public com.google.protobuf.FloatValue.Builder getStandoffDistanceMBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getStandoffDistanceMFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getStandoffDistanceMOrBuilder() {
      if (standoffDistanceMBuilder_ != null) {
        return standoffDistanceMBuilder_.getMessageOrBuilder();
      } else {
        return standoffDistanceM_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistanceM_;
      }
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. The units are in meters.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance_m = 3 [json_name = "standoffDistanceM"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getStandoffDistanceMFieldBuilder() {
      if (standoffDistanceMBuilder_ == null) {
        standoffDistanceMBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getStandoffDistanceM(),
                getParentForChildren(),
                isClean());
        standoffDistanceM_ = null;
      }
      return standoffDistanceMBuilder_;
    }

    private com.google.protobuf.FloatValue standoffDistance_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> standoffDistanceBuilder_;
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     * @deprecated anduril.tasks.v2.ISRParameters.standoff_distance is deprecated.
     *     See anduril/tasks/v2/shared/isr.pub.proto;l=151
     * @return Whether the standoffDistance field is set.
     */
    @java.lang.Deprecated public boolean hasStandoffDistance() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     * @deprecated anduril.tasks.v2.ISRParameters.standoff_distance is deprecated.
     *     See anduril/tasks/v2/shared/isr.pub.proto;l=151
     * @return The standoffDistance.
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValue getStandoffDistance() {
      if (standoffDistanceBuilder_ == null) {
        return standoffDistance_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistance_;
      } else {
        return standoffDistanceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setStandoffDistance(com.google.protobuf.FloatValue value) {
      if (standoffDistanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        standoffDistance_ = value;
      } else {
        standoffDistanceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setStandoffDistance(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (standoffDistanceBuilder_ == null) {
        standoffDistance_ = builderForValue.build();
      } else {
        standoffDistanceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder mergeStandoffDistance(com.google.protobuf.FloatValue value) {
      if (standoffDistanceBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          standoffDistance_ != null &&
          standoffDistance_ != com.google.protobuf.FloatValue.getDefaultInstance()) {
          getStandoffDistanceBuilder().mergeFrom(value);
        } else {
          standoffDistance_ = value;
        }
      } else {
        standoffDistanceBuilder_.mergeFrom(value);
      }
      if (standoffDistance_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearStandoffDistance() {
      bitField0_ = (bitField0_ & ~0x00000008);
      standoffDistance_ = null;
      if (standoffDistanceBuilder_ != null) {
        standoffDistanceBuilder_.dispose();
        standoffDistanceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValue.Builder getStandoffDistanceBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getStandoffDistanceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.FloatValueOrBuilder getStandoffDistanceOrBuilder() {
      if (standoffDistanceBuilder_ != null) {
        return standoffDistanceBuilder_.getMessageOrBuilder();
      } else {
        return standoffDistance_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : standoffDistance_;
      }
    }
    /**
     * <pre>
     * Indicates the standoff distance from the objective. DEPRECATION NOTE: deprecated in favor of standoff_distance_m
     *  since we might have legacy integrations not conforming to the meters unit.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_distance = 4 [json_name = "standoffDistance", deprecated = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getStandoffDistanceFieldBuilder() {
      if (standoffDistanceBuilder_ == null) {
        standoffDistanceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getStandoffDistance(),
                getParentForChildren(),
                isClean());
        standoffDistance_ = null;
      }
      return standoffDistanceBuilder_;
    }

    private com.google.protobuf.FloatValue standoffAngle_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> standoffAngleBuilder_;
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     * @return Whether the standoffAngle field is set.
     */
    public boolean hasStandoffAngle() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     * @return The standoffAngle.
     */
    public com.google.protobuf.FloatValue getStandoffAngle() {
      if (standoffAngleBuilder_ == null) {
        return standoffAngle_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : standoffAngle_;
      } else {
        return standoffAngleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public Builder setStandoffAngle(com.google.protobuf.FloatValue value) {
      if (standoffAngleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        standoffAngle_ = value;
      } else {
        standoffAngleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public Builder setStandoffAngle(
        com.google.protobuf.FloatValue.Builder builderForValue) {
      if (standoffAngleBuilder_ == null) {
        standoffAngle_ = builderForValue.build();
      } else {
        standoffAngleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public Builder mergeStandoffAngle(com.google.protobuf.FloatValue value) {
      if (standoffAngleBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          standoffAngle_ != null &&
          standoffAngle_ != com.google.protobuf.FloatValue.getDefaultInstance()) {
          getStandoffAngleBuilder().mergeFrom(value);
        } else {
          standoffAngle_ = value;
        }
      } else {
        standoffAngleBuilder_.mergeFrom(value);
      }
      if (standoffAngle_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public Builder clearStandoffAngle() {
      bitField0_ = (bitField0_ & ~0x00000010);
      standoffAngle_ = null;
      if (standoffAngleBuilder_ != null) {
        standoffAngleBuilder_.dispose();
        standoffAngleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public com.google.protobuf.FloatValue.Builder getStandoffAngleBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getStandoffAngleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    public com.google.protobuf.FloatValueOrBuilder getStandoffAngleOrBuilder() {
      if (standoffAngleBuilder_ != null) {
        return standoffAngleBuilder_.getMessageOrBuilder();
      } else {
        return standoffAngle_ == null ?
            com.google.protobuf.FloatValue.getDefaultInstance() : standoffAngle_;
      }
    }
    /**
     * <pre>
     * Indicates the standoff angle relative to the objective's bearing orientation (defaults to north).
     * In particular, the asset should approach target from this angle. Units in degrees.
     * </pre>
     *
     * <code>.google.protobuf.FloatValue standoff_angle = 5 [json_name = "standoffAngle"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
        getStandoffAngleFieldBuilder() {
      if (standoffAngleBuilder_ == null) {
        standoffAngleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                getStandoffAngle(),
                getParentForChildren(),
                isClean());
        standoffAngle_ = null;
      }
      return standoffAngleBuilder_;
    }

    private com.google.protobuf.UInt64Value expirationTimeMs_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> expirationTimeMsBuilder_;
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     * @return Whether the expirationTimeMs field is set.
     */
    public boolean hasExpirationTimeMs() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     * @return The expirationTimeMs.
     */
    public com.google.protobuf.UInt64Value getExpirationTimeMs() {
      if (expirationTimeMsBuilder_ == null) {
        return expirationTimeMs_ == null ? com.google.protobuf.UInt64Value.getDefaultInstance() : expirationTimeMs_;
      } else {
        return expirationTimeMsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public Builder setExpirationTimeMs(com.google.protobuf.UInt64Value value) {
      if (expirationTimeMsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expirationTimeMs_ = value;
      } else {
        expirationTimeMsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public Builder setExpirationTimeMs(
        com.google.protobuf.UInt64Value.Builder builderForValue) {
      if (expirationTimeMsBuilder_ == null) {
        expirationTimeMs_ = builderForValue.build();
      } else {
        expirationTimeMsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public Builder mergeExpirationTimeMs(com.google.protobuf.UInt64Value value) {
      if (expirationTimeMsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          expirationTimeMs_ != null &&
          expirationTimeMs_ != com.google.protobuf.UInt64Value.getDefaultInstance()) {
          getExpirationTimeMsBuilder().mergeFrom(value);
        } else {
          expirationTimeMs_ = value;
        }
      } else {
        expirationTimeMsBuilder_.mergeFrom(value);
      }
      if (expirationTimeMs_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public Builder clearExpirationTimeMs() {
      bitField0_ = (bitField0_ & ~0x00000020);
      expirationTimeMs_ = null;
      if (expirationTimeMsBuilder_ != null) {
        expirationTimeMsBuilder_.dispose();
        expirationTimeMsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public com.google.protobuf.UInt64Value.Builder getExpirationTimeMsBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getExpirationTimeMsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    public com.google.protobuf.UInt64ValueOrBuilder getExpirationTimeMsOrBuilder() {
      if (expirationTimeMsBuilder_ != null) {
        return expirationTimeMsBuilder_.getMessageOrBuilder();
      } else {
        return expirationTimeMs_ == null ?
            com.google.protobuf.UInt64Value.getDefaultInstance() : expirationTimeMs_;
      }
    }
    /**
     * <pre>
     * Indicates the amount of time in milliseconds to execute an ISR task before expiring. 0 value indicates no
     * expiration.
     * </pre>
     *
     * <code>.google.protobuf.UInt64Value expiration_time_ms = 6 [json_name = "expirationTimeMs"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder> 
        getExpirationTimeMsFieldBuilder() {
      if (expirationTimeMsBuilder_ == null) {
        expirationTimeMsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt64Value, com.google.protobuf.UInt64Value.Builder, com.google.protobuf.UInt64ValueOrBuilder>(
                getExpirationTimeMs(),
                getParentForChildren(),
                isClean());
        expirationTimeMs_ = null;
      }
      return expirationTimeMsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.tasks.v2.ISRParameters)
  }

  // @@protoc_insertion_point(class_scope:anduril.tasks.v2.ISRParameters)
  private static final com.anduril.tasks.v2.ISRParameters DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.tasks.v2.ISRParameters();
  }

  public static com.anduril.tasks.v2.ISRParameters getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ISRParameters>
      PARSER = new com.google.protobuf.AbstractParser<ISRParameters>() {
    @java.lang.Override
    public ISRParameters parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ISRParameters> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ISRParameters> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.tasks.v2.ISRParameters getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


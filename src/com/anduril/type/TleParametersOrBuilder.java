// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/type/orbit.pub.proto

package com.anduril.type;

public interface TleParametersOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.type.TleParameters)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Integer specifying TLE ephemeris type
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value ephemeris_type = 1 [json_name = "ephemerisType"];</code>
   * @return Whether the ephemerisType field is set.
   */
  boolean hasEphemerisType();
  /**
   * <pre>
   * Integer specifying TLE ephemeris type
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value ephemeris_type = 1 [json_name = "ephemerisType"];</code>
   * @return The ephemerisType.
   */
  com.google.protobuf.UInt32Value getEphemerisType();
  /**
   * <pre>
   * Integer specifying TLE ephemeris type
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value ephemeris_type = 1 [json_name = "ephemerisType"];</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getEphemerisTypeOrBuilder();

  /**
   * <pre>
   * User-defined free-text message classification/caveats of this TLE
   * </pre>
   *
   * <code>.google.protobuf.StringValue classification_type = 2 [json_name = "classificationType"];</code>
   * @return Whether the classificationType field is set.
   */
  boolean hasClassificationType();
  /**
   * <pre>
   * User-defined free-text message classification/caveats of this TLE
   * </pre>
   *
   * <code>.google.protobuf.StringValue classification_type = 2 [json_name = "classificationType"];</code>
   * @return The classificationType.
   */
  com.google.protobuf.StringValue getClassificationType();
  /**
   * <pre>
   * User-defined free-text message classification/caveats of this TLE
   * </pre>
   *
   * <code>.google.protobuf.StringValue classification_type = 2 [json_name = "classificationType"];</code>
   */
  com.google.protobuf.StringValueOrBuilder getClassificationTypeOrBuilder();

  /**
   * <pre>
   * Norad catalog number: integer up to nine digits.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value norad_cat_id = 3 [json_name = "noradCatId"];</code>
   * @return Whether the noradCatId field is set.
   */
  boolean hasNoradCatId();
  /**
   * <pre>
   * Norad catalog number: integer up to nine digits.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value norad_cat_id = 3 [json_name = "noradCatId"];</code>
   * @return The noradCatId.
   */
  com.google.protobuf.UInt32Value getNoradCatId();
  /**
   * <pre>
   * Norad catalog number: integer up to nine digits.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value norad_cat_id = 3 [json_name = "noradCatId"];</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getNoradCatIdOrBuilder();

  /**
   * <code>.google.protobuf.UInt32Value element_set_no = 4 [json_name = "elementSetNo"];</code>
   * @return Whether the elementSetNo field is set.
   */
  boolean hasElementSetNo();
  /**
   * <code>.google.protobuf.UInt32Value element_set_no = 4 [json_name = "elementSetNo"];</code>
   * @return The elementSetNo.
   */
  com.google.protobuf.UInt32Value getElementSetNo();
  /**
   * <code>.google.protobuf.UInt32Value element_set_no = 4 [json_name = "elementSetNo"];</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getElementSetNoOrBuilder();

  /**
   * <pre>
   * Optional: revolution number
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value rev_at_epoch = 5 [json_name = "revAtEpoch"];</code>
   * @return Whether the revAtEpoch field is set.
   */
  boolean hasRevAtEpoch();
  /**
   * <pre>
   * Optional: revolution number
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value rev_at_epoch = 5 [json_name = "revAtEpoch"];</code>
   * @return The revAtEpoch.
   */
  com.google.protobuf.UInt32Value getRevAtEpoch();
  /**
   * <pre>
   * Optional: revolution number
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value rev_at_epoch = 5 [json_name = "revAtEpoch"];</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getRevAtEpochOrBuilder();

  /**
   * <pre>
   * Drag parameter for SGP-4 in units 1 / Earth radii
   * </pre>
   *
   * <code>double bstar = 6 [json_name = "bstar"];</code>
   * @return Whether the bstar field is set.
   */
  boolean hasBstar();
  /**
   * <pre>
   * Drag parameter for SGP-4 in units 1 / Earth radii
   * </pre>
   *
   * <code>double bstar = 6 [json_name = "bstar"];</code>
   * @return The bstar.
   */
  double getBstar();

  /**
   * <pre>
   * Drag parameter for SGP4-XP in units m^2 / kg
   * </pre>
   *
   * <code>double bterm = 7 [json_name = "bterm"];</code>
   * @return Whether the bterm field is set.
   */
  boolean hasBterm();
  /**
   * <pre>
   * Drag parameter for SGP4-XP in units m^2 / kg
   * </pre>
   *
   * <code>double bterm = 7 [json_name = "bterm"];</code>
   * @return The bterm.
   */
  double getBterm();

  /**
   * <pre>
   * First time derivative of mean motion in rev / day^2
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue mean_motion_dot = 8 [json_name = "meanMotionDot"];</code>
   * @return Whether the meanMotionDot field is set.
   */
  boolean hasMeanMotionDot();
  /**
   * <pre>
   * First time derivative of mean motion in rev / day^2
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue mean_motion_dot = 8 [json_name = "meanMotionDot"];</code>
   * @return The meanMotionDot.
   */
  com.google.protobuf.DoubleValue getMeanMotionDot();
  /**
   * <pre>
   * First time derivative of mean motion in rev / day^2
   * </pre>
   *
   * <code>.google.protobuf.DoubleValue mean_motion_dot = 8 [json_name = "meanMotionDot"];</code>
   */
  com.google.protobuf.DoubleValueOrBuilder getMeanMotionDotOrBuilder();

  /**
   * <pre>
   * Second time derivative of mean motion in rev / day^3. For use with SGP or PPT3.
   * </pre>
   *
   * <code>double mean_motion_ddot = 9 [json_name = "meanMotionDdot"];</code>
   * @return Whether the meanMotionDdot field is set.
   */
  boolean hasMeanMotionDdot();
  /**
   * <pre>
   * Second time derivative of mean motion in rev / day^3. For use with SGP or PPT3.
   * </pre>
   *
   * <code>double mean_motion_ddot = 9 [json_name = "meanMotionDdot"];</code>
   * @return The meanMotionDdot.
   */
  double getMeanMotionDdot();

  /**
   * <pre>
   * Solar radiation pressure coefficient A_gamma / m in m^2 / kg. For use with SGP4-XP.
   * </pre>
   *
   * <code>double agom = 10 [json_name = "agom"];</code>
   * @return Whether the agom field is set.
   */
  boolean hasAgom();
  /**
   * <pre>
   * Solar radiation pressure coefficient A_gamma / m in m^2 / kg. For use with SGP4-XP.
   * </pre>
   *
   * <code>double agom = 10 [json_name = "agom"];</code>
   * @return The agom.
   */
  double getAgom();

  com.anduril.type.TleParameters.Line1Field11Case getLine1Field11Case();

  com.anduril.type.TleParameters.Line1Field10Case getLine1Field10Case();
}

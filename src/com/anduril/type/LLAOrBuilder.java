// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/type/coords.pub.proto

package com.anduril.type;

public interface LLAOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.type.LLA)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * WGS84 longitude in decimal degrees
   * </pre>
   *
   * <code>double lon = 1 [json_name = "lon"];</code>
   * @return The lon.
   */
  double getLon();

  /**
   * <pre>
   * WGS84 geodetic latitude in decimal degrees
   * </pre>
   *
   * <code>double lat = 2 [json_name = "lat"];</code>
   * @return The lat.
   */
  double getLat();

  /**
   * <pre>
   * altitude in meters above either WGS84 or EGM96 (see altitude_reference)
   * </pre>
   *
   * <code>double alt = 3 [json_name = "alt"];</code>
   * @return The alt.
   */
  double getAlt();

  /**
   * <pre>
   * [default=false] indicates that altitude is either unset or so uncertain that it is meaningless
   * </pre>
   *
   * <code>bool is2d = 4 [json_name = "is2d"];</code>
   * @return The is2d.
   */
  boolean getIs2D();

  /**
   * <pre>
   * Meaning of alt.
   * altitude in meters above either WGS84 or EGM96, use altitude_reference to
   * determine what zero means.
   * </pre>
   *
   * <code>.anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];</code>
   * @return The enum numeric value on the wire for altitudeReference.
   */
  int getAltitudeReferenceValue();
  /**
   * <pre>
   * Meaning of alt.
   * altitude in meters above either WGS84 or EGM96, use altitude_reference to
   * determine what zero means.
   * </pre>
   *
   * <code>.anduril.type.LLA.AltitudeReference altitude_reference = 5 [json_name = "altitudeReference"];</code>
   * @return The altitudeReference.
   */
  com.anduril.type.LLA.AltitudeReference getAltitudeReference();
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/type/coords.pub.proto

package com.anduril.type;

/**
 * Protobuf type {@code anduril.type.Pose}
 */
public final class Pose extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:anduril.type.Pose)
    PoseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pose.newBuilder() to construct.
  private Pose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pose() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Pose();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.anduril.type.CoordsPubProto.internal_static_anduril_type_Pose_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.anduril.type.CoordsPubProto.internal_static_anduril_type_Pose_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.anduril.type.Pose.class, com.anduril.type.Pose.Builder.class);
  }

  public static final int POS_FIELD_NUMBER = 1;
  private com.anduril.type.LLA pos_;
  /**
   * <pre>
   * Geospatial location defined by this Pose.
   * </pre>
   *
   * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
   * @return Whether the pos field is set.
   */
  @java.lang.Override
  public boolean hasPos() {
    return pos_ != null;
  }
  /**
   * <pre>
   * Geospatial location defined by this Pose.
   * </pre>
   *
   * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
   * @return The pos.
   */
  @java.lang.Override
  public com.anduril.type.LLA getPos() {
    return pos_ == null ? com.anduril.type.LLA.getDefaultInstance() : pos_;
  }
  /**
   * <pre>
   * Geospatial location defined by this Pose.
   * </pre>
   *
   * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
   */
  @java.lang.Override
  public com.anduril.type.LLAOrBuilder getPosOrBuilder() {
    return pos_ == null ? com.anduril.type.LLA.getDefaultInstance() : pos_;
  }

  public static final int ATT_ENU_FIELD_NUMBER = 2;
  private com.anduril.type.Quaternion attEnu_;
  /**
   * <pre>
   * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
   * etc and is determined by the context in which this Pose is used.
   * The normal convention for defining orientation is to list the frames of transformation, for example
   * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
   * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
   * field would have been att_pose_to_enu.
   *
   * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
   * to the enu frame.
   *
   * Point&lt;Pose&#92;&gt; posePt{1,0,0};
   * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
   * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
   *
   * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
   * matrix.
   *
   * An alternative matrix expression is as follows:
   * ptEnu = M x ptPose
   * </pre>
   *
   * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
   * @return Whether the attEnu field is set.
   */
  @java.lang.Override
  public boolean hasAttEnu() {
    return attEnu_ != null;
  }
  /**
   * <pre>
   * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
   * etc and is determined by the context in which this Pose is used.
   * The normal convention for defining orientation is to list the frames of transformation, for example
   * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
   * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
   * field would have been att_pose_to_enu.
   *
   * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
   * to the enu frame.
   *
   * Point&lt;Pose&#92;&gt; posePt{1,0,0};
   * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
   * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
   *
   * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
   * matrix.
   *
   * An alternative matrix expression is as follows:
   * ptEnu = M x ptPose
   * </pre>
   *
   * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
   * @return The attEnu.
   */
  @java.lang.Override
  public com.anduril.type.Quaternion getAttEnu() {
    return attEnu_ == null ? com.anduril.type.Quaternion.getDefaultInstance() : attEnu_;
  }
  /**
   * <pre>
   * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
   * etc and is determined by the context in which this Pose is used.
   * The normal convention for defining orientation is to list the frames of transformation, for example
   * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
   * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
   * field would have been att_pose_to_enu.
   *
   * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
   * to the enu frame.
   *
   * Point&lt;Pose&#92;&gt; posePt{1,0,0};
   * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
   * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
   *
   * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
   * matrix.
   *
   * An alternative matrix expression is as follows:
   * ptEnu = M x ptPose
   * </pre>
   *
   * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
   */
  @java.lang.Override
  public com.anduril.type.QuaternionOrBuilder getAttEnuOrBuilder() {
    return attEnu_ == null ? com.anduril.type.Quaternion.getDefaultInstance() : attEnu_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pos_ != null) {
      output.writeMessage(1, getPos());
    }
    if (attEnu_ != null) {
      output.writeMessage(2, getAttEnu());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pos_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPos());
    }
    if (attEnu_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAttEnu());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.anduril.type.Pose)) {
      return super.equals(obj);
    }
    com.anduril.type.Pose other = (com.anduril.type.Pose) obj;

    if (hasPos() != other.hasPos()) return false;
    if (hasPos()) {
      if (!getPos()
          .equals(other.getPos())) return false;
    }
    if (hasAttEnu() != other.hasAttEnu()) return false;
    if (hasAttEnu()) {
      if (!getAttEnu()
          .equals(other.getAttEnu())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPos()) {
      hash = (37 * hash) + POS_FIELD_NUMBER;
      hash = (53 * hash) + getPos().hashCode();
    }
    if (hasAttEnu()) {
      hash = (37 * hash) + ATT_ENU_FIELD_NUMBER;
      hash = (53 * hash) + getAttEnu().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.anduril.type.Pose parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.type.Pose parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.type.Pose parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.type.Pose parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.type.Pose parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.anduril.type.Pose parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.anduril.type.Pose parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.type.Pose parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.type.Pose parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.anduril.type.Pose parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.anduril.type.Pose parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.anduril.type.Pose parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.anduril.type.Pose prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code anduril.type.Pose}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:anduril.type.Pose)
      com.anduril.type.PoseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.anduril.type.CoordsPubProto.internal_static_anduril_type_Pose_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.anduril.type.CoordsPubProto.internal_static_anduril_type_Pose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.anduril.type.Pose.class, com.anduril.type.Pose.Builder.class);
    }

    // Construct using com.anduril.type.Pose.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      pos_ = null;
      if (posBuilder_ != null) {
        posBuilder_.dispose();
        posBuilder_ = null;
      }
      attEnu_ = null;
      if (attEnuBuilder_ != null) {
        attEnuBuilder_.dispose();
        attEnuBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.anduril.type.CoordsPubProto.internal_static_anduril_type_Pose_descriptor;
    }

    @java.lang.Override
    public com.anduril.type.Pose getDefaultInstanceForType() {
      return com.anduril.type.Pose.getDefaultInstance();
    }

    @java.lang.Override
    public com.anduril.type.Pose build() {
      com.anduril.type.Pose result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.anduril.type.Pose buildPartial() {
      com.anduril.type.Pose result = new com.anduril.type.Pose(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.anduril.type.Pose result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.pos_ = posBuilder_ == null
            ? pos_
            : posBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.attEnu_ = attEnuBuilder_ == null
            ? attEnu_
            : attEnuBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.anduril.type.Pose) {
        return mergeFrom((com.anduril.type.Pose)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.anduril.type.Pose other) {
      if (other == com.anduril.type.Pose.getDefaultInstance()) return this;
      if (other.hasPos()) {
        mergePos(other.getPos());
      }
      if (other.hasAttEnu()) {
        mergeAttEnu(other.getAttEnu());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getPosFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getAttEnuFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.anduril.type.LLA pos_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.LLA, com.anduril.type.LLA.Builder, com.anduril.type.LLAOrBuilder> posBuilder_;
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     * @return Whether the pos field is set.
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     * @return The pos.
     */
    public com.anduril.type.LLA getPos() {
      if (posBuilder_ == null) {
        return pos_ == null ? com.anduril.type.LLA.getDefaultInstance() : pos_;
      } else {
        return posBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public Builder setPos(com.anduril.type.LLA value) {
      if (posBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pos_ = value;
      } else {
        posBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public Builder setPos(
        com.anduril.type.LLA.Builder builderForValue) {
      if (posBuilder_ == null) {
        pos_ = builderForValue.build();
      } else {
        posBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public Builder mergePos(com.anduril.type.LLA value) {
      if (posBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          pos_ != null &&
          pos_ != com.anduril.type.LLA.getDefaultInstance()) {
          getPosBuilder().mergeFrom(value);
        } else {
          pos_ = value;
        }
      } else {
        posBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public Builder clearPos() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pos_ = null;
      if (posBuilder_ != null) {
        posBuilder_.dispose();
        posBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public com.anduril.type.LLA.Builder getPosBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getPosFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    public com.anduril.type.LLAOrBuilder getPosOrBuilder() {
      if (posBuilder_ != null) {
        return posBuilder_.getMessageOrBuilder();
      } else {
        return pos_ == null ?
            com.anduril.type.LLA.getDefaultInstance() : pos_;
      }
    }
    /**
     * <pre>
     * Geospatial location defined by this Pose.
     * </pre>
     *
     * <code>.anduril.type.LLA pos = 1 [json_name = "pos"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.LLA, com.anduril.type.LLA.Builder, com.anduril.type.LLAOrBuilder> 
        getPosFieldBuilder() {
      if (posBuilder_ == null) {
        posBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.type.LLA, com.anduril.type.LLA.Builder, com.anduril.type.LLAOrBuilder>(
                getPos(),
                getParentForChildren(),
                isClean());
        pos_ = null;
      }
      return posBuilder_;
    }

    private com.anduril.type.Quaternion attEnu_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.Quaternion, com.anduril.type.Quaternion.Builder, com.anduril.type.QuaternionOrBuilder> attEnuBuilder_;
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     * @return Whether the attEnu field is set.
     */
    public boolean hasAttEnu() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     * @return The attEnu.
     */
    public com.anduril.type.Quaternion getAttEnu() {
      if (attEnuBuilder_ == null) {
        return attEnu_ == null ? com.anduril.type.Quaternion.getDefaultInstance() : attEnu_;
      } else {
        return attEnuBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public Builder setAttEnu(com.anduril.type.Quaternion value) {
      if (attEnuBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        attEnu_ = value;
      } else {
        attEnuBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public Builder setAttEnu(
        com.anduril.type.Quaternion.Builder builderForValue) {
      if (attEnuBuilder_ == null) {
        attEnu_ = builderForValue.build();
      } else {
        attEnuBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public Builder mergeAttEnu(com.anduril.type.Quaternion value) {
      if (attEnuBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          attEnu_ != null &&
          attEnu_ != com.anduril.type.Quaternion.getDefaultInstance()) {
          getAttEnuBuilder().mergeFrom(value);
        } else {
          attEnu_ = value;
        }
      } else {
        attEnuBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public Builder clearAttEnu() {
      bitField0_ = (bitField0_ & ~0x00000002);
      attEnu_ = null;
      if (attEnuBuilder_ != null) {
        attEnuBuilder_.dispose();
        attEnuBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public com.anduril.type.Quaternion.Builder getAttEnuBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getAttEnuFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    public com.anduril.type.QuaternionOrBuilder getAttEnuOrBuilder() {
      if (attEnuBuilder_ != null) {
        return attEnuBuilder_.getMessageOrBuilder();
      } else {
        return attEnu_ == null ?
            com.anduril.type.Quaternion.getDefaultInstance() : attEnu_;
      }
    }
    /**
     * <pre>
     * The quaternion to transform a point in the Pose frame to the ENU frame. The Pose frame could be Body, Turret,
     * etc and is determined by the context in which this Pose is used.
     * The normal convention for defining orientation is to list the frames of transformation, for example
     * att_gimbal_to_enu is the quaternion which transforms a point in the gimbal frame to the body frame, but
     * in this case we truncate to att_enu because the Pose frame isn't defined. A potentially better name for this
     * field would have been att_pose_to_enu.
     *
     * Implementations of this quaternion should left multiply this quaternion to transform a point from the Pose frame
     * to the enu frame.
     *
     * Point&lt;Pose&#92;&gt; posePt{1,0,0};
     * Rotation&lt;Enu, Pose&#92;&gt; attPoseToEnu{};
     * Point&lt;Enu&#92;&gt; = attPoseToEnu*posePt;
     *
     * This transformed point represents some vector in ENU space that is aligned with the x axis of the attPoseToEnu
     * matrix.
     *
     * An alternative matrix expression is as follows:
     * ptEnu = M x ptPose
     * </pre>
     *
     * <code>.anduril.type.Quaternion att_enu = 2 [json_name = "attEnu"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.anduril.type.Quaternion, com.anduril.type.Quaternion.Builder, com.anduril.type.QuaternionOrBuilder> 
        getAttEnuFieldBuilder() {
      if (attEnuBuilder_ == null) {
        attEnuBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.anduril.type.Quaternion, com.anduril.type.Quaternion.Builder, com.anduril.type.QuaternionOrBuilder>(
                getAttEnu(),
                getParentForChildren(),
                isClean());
        attEnu_ = null;
      }
      return attEnuBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:anduril.type.Pose)
  }

  // @@protoc_insertion_point(class_scope:anduril.type.Pose)
  private static final com.anduril.type.Pose DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.anduril.type.Pose();
  }

  public static com.anduril.type.Pose getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pose>
      PARSER = new com.google.protobuf.AbstractParser<Pose>() {
    @java.lang.Override
    public Pose parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Pose> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pose> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.anduril.type.Pose getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}


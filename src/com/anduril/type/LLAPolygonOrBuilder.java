// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anduril/type/coords.pub.proto

package com.anduril.type;

public interface LLAPolygonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:anduril.type.LLAPolygon)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * standard is that points are defined in a counter-clockwise order. this
   * is only the exterior ring of a polygon, no holes are supported.
   * </pre>
   *
   * <code>repeated .anduril.type.LLA points = 1 [json_name = "points"];</code>
   */
  java.util.List<com.anduril.type.LLA> 
      getPointsList();
  /**
   * <pre>
   * standard is that points are defined in a counter-clockwise order. this
   * is only the exterior ring of a polygon, no holes are supported.
   * </pre>
   *
   * <code>repeated .anduril.type.LLA points = 1 [json_name = "points"];</code>
   */
  com.anduril.type.LLA getPoints(int index);
  /**
   * <pre>
   * standard is that points are defined in a counter-clockwise order. this
   * is only the exterior ring of a polygon, no holes are supported.
   * </pre>
   *
   * <code>repeated .anduril.type.LLA points = 1 [json_name = "points"];</code>
   */
  int getPointsCount();
  /**
   * <pre>
   * standard is that points are defined in a counter-clockwise order. this
   * is only the exterior ring of a polygon, no holes are supported.
   * </pre>
   *
   * <code>repeated .anduril.type.LLA points = 1 [json_name = "points"];</code>
   */
  java.util.List<? extends com.anduril.type.LLAOrBuilder> 
      getPointsOrBuilderList();
  /**
   * <pre>
   * standard is that points are defined in a counter-clockwise order. this
   * is only the exterior ring of a polygon, no holes are supported.
   * </pre>
   *
   * <code>repeated .anduril.type.LLA points = 1 [json_name = "points"];</code>
   */
  com.anduril.type.LLAOrBuilder getPointsOrBuilder(
      int index);
}

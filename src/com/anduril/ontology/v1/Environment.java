// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: anduril/ontology/v1/type.pub.proto
// Protobuf Java Version: 4.27.3

package com.anduril.ontology.v1;

/**
 * <pre>
 * Describes the operating environment of an object. For more information refer to MIl-STD 2525d or MIL-STD 6016f.
 * Surface is used to describe objects on-top the water such as boats, while Sub-Surface is used to describe under the
 * water.
 * </pre>
 *
 * Protobuf enum {@code anduril.ontology.v1.Environment}
 */
public enum Environment
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ENVIRONMENT_UNKNOWN = 0;</code>
   */
  ENVIRONMENT_UNKNOWN(0),
  /**
   * <code>ENVIRONMENT_AIR = 1;</code>
   */
  ENVIRONMENT_AIR(1),
  /**
   * <code>ENVIRONMENT_SURFACE = 2;</code>
   */
  ENVIRONMENT_SURFACE(2),
  /**
   * <code>ENVIRONMENT_SUB_SURFACE = 3;</code>
   */
  ENVIRONMENT_SUB_SURFACE(3),
  /**
   * <code>ENVIRONMENT_LAND = 4;</code>
   */
  ENVIRONMENT_LAND(4),
  /**
   * <code>ENVIRONMENT_SPACE = 5;</code>
   */
  ENVIRONMENT_SPACE(5),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 3,
      /* suffix= */ "",
      Environment.class.getName());
  }
  /**
   * <code>ENVIRONMENT_UNKNOWN = 0;</code>
   */
  public static final int ENVIRONMENT_UNKNOWN_VALUE = 0;
  /**
   * <code>ENVIRONMENT_AIR = 1;</code>
   */
  public static final int ENVIRONMENT_AIR_VALUE = 1;
  /**
   * <code>ENVIRONMENT_SURFACE = 2;</code>
   */
  public static final int ENVIRONMENT_SURFACE_VALUE = 2;
  /**
   * <code>ENVIRONMENT_SUB_SURFACE = 3;</code>
   */
  public static final int ENVIRONMENT_SUB_SURFACE_VALUE = 3;
  /**
   * <code>ENVIRONMENT_LAND = 4;</code>
   */
  public static final int ENVIRONMENT_LAND_VALUE = 4;
  /**
   * <code>ENVIRONMENT_SPACE = 5;</code>
   */
  public static final int ENVIRONMENT_SPACE_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Environment valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Environment forNumber(int value) {
    switch (value) {
      case 0: return ENVIRONMENT_UNKNOWN;
      case 1: return ENVIRONMENT_AIR;
      case 2: return ENVIRONMENT_SURFACE;
      case 3: return ENVIRONMENT_SUB_SURFACE;
      case 4: return ENVIRONMENT_LAND;
      case 5: return ENVIRONMENT_SPACE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Environment>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Environment> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Environment>() {
          public Environment findValueByNumber(int number) {
            return Environment.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.anduril.ontology.v1.TypePubProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final Environment[] VALUES = values();

  public static Environment valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Environment(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:anduril.ontology.v1.Environment)
}

